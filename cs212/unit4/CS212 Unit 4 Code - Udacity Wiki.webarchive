bplist00“!_WebSubresources_WebMainResource•‘	
_WebResourceData_WebResourceMIMEType_WebResourceResponse^WebResourceURLOè(function(){var g=void 0,h=!0,i=null,k=!1,aa=encodeURIComponent,ba=Infinity,ea=setTimeout,fa=decodeURIComponent,l=Math;function ga(a,b){return a.name=b}
var m="push",ha="test",ia="slice",n="replace",ja="load",ka="floor",la="charAt",ma="value",p="indexOf",na="match",oa="port",pa="createElement",qa="path",q="name",t="host",u="toString",v="length",w="prototype",ra="clientWidth",x="split",ta="stopPropagation",ua="scope",y="location",va="search",z="protocol",wa="clientHeight",xa="href",A="substring",ya="apply",za="navigator",B="join",C="toLowerCase",D;function Aa(a,b){switch(b){case 0:return""+a;case 1:return 1*a;case 2:return!!a;case 3:return 1E3*a}return a}function Ba(a){return"function"==typeof a}function Ca(a){return a!=g&&-1<(a.constructor+"")[p]("String")}function E(a,b){return g==a||"-"==a&&!b||""==a}function Da(a){if(!a||""==a)return"";for(;a&&-1<" \n\r\t"[p](a[la](0));)a=a[A](1);for(;a&&-1<" \n\r\t"[p](a[la](a[v]-1));)a=a[A](0,a[v]-1);return a}
function F(a){var b=1,c=0,d;if(!E(a)){b=0;for(d=a[v]-1;0<=d;d--)c=a.charCodeAt(d),b=(b<<6&268435455)+c+(c<<14),c=b&266338304,b=0!=c?b^c>>21:b}return b}function Ea(){return l.round(2147483647*l.random())}function Fa(){}function G(a,b){if(aa instanceof Function)return b?encodeURI(a):aa(a);H(68);return escape(a)}function I(a){a=a[x]("+")[B](" ");if(fa instanceof Function)try{return fa(a)}catch(b){H(17)}else H(68);return unescape(a)}
var Ga=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,!!d):a.attachEvent&&a.attachEvent("on"+b,c)},Ha=function(a,b,c,d){a.removeEventListener?a.removeEventListener(b,c,!!d):a.detachEvent&&a.detachEvent("on"+b,c)};function Ia(a,b){if(a){var c=J[pa]("script");c.type="text/javascript";c.async=h;c.src=a;c.id=b;var d=J.getElementsByTagName("script")[0];d.parentNode.insertBefore(c,d);return c}}function K(a){return a&&0<a[v]?a[0]:""}function Ja(a){var b=a?a[v]:0;return 0<b?a[b-1]:""}
var Ka=function(){this.prefix="ga.";this.R={}};Ka[w].set=function(a,b){this.R[this.prefix+a]=b};Ka[w].get=function(a){return this.R[this.prefix+a]};Ka[w].contains=function(a){return this.get(a)!==g};function La(a){0==a[p]("www.")&&(a=a[A](4));return a[C]()}function Ma(a,b){var c,d={url:a,protocol:"http",host:"",path:"",d:new Ka,anchor:""};if(!a)return d;c=a[p]("://");0<=c&&(d.protocol=a[A](0,c),a=a[A](c+3));c=a[va]("/|\\?|#");if(0<=c)d.host=a[A](0,c)[C](),a=a[A](c);else return d.host=a[C](),d;c=a[p]("#");0<=c&&(d.anchor=a[A](c+1),a=a[A](0,c));c=a[p]("?");0<=c&&(Na(d.d,a[A](c+1)),a=a[A](0,c));d.anchor&&b&&Na(d.d,d.anchor);a&&"/"==a[la](0)&&(a=a[A](1));d.path=a;return d}
function Oa(a,b){function c(a){var b=(a.hostname||"")[x](":")[0][C](),c=(a[z]||"")[C](),c=1*a[oa]||("http:"==c?80:"https:"==c?443:""),a=a.pathname||"";0==a[p]("/")||(a="/"+a);return[b,""+c,a]}var d=b||J[pa]("a");d.href=J[y][xa];var e=(d[z]||"")[C](),f=c(d),j=d[va]||"",o=e+"//"+f[0]+(f[1]?":"+f[1]:"");0==a[p]("//")?a=e+a:0==a[p]("/")?a=o+a:!a||0==a[p]("?")?a=o+f[2]+(a||j):0>a[x]("/")[0][p](":")&&(a=o+f[2][A](0,f[2].lastIndexOf("/"))+"/"+a);d.href=a;e=c(d);return{protocol:(d[z]||"")[C](),host:e[0],
port:e[1],path:e[2],Ia:d[va]||"",url:a||""}}function Na(a,b){function c(b,c){a.contains(b)||a.set(b,[]);a.get(b)[m](c)}for(var d=Da(b)[x]("&"),e=0;e<d[v];e++)if(d[e]){var f=d[e][p]("=");0>f?c(d[e],"1"):c(d[e][A](0,f),d[e][A](f+1))}}function Pa(a,b){if(E(a)||"["==a[la](0)&&"]"==a[la](a[v]-1))return"-";var c=J.domain;return a[p](c+(b&&"/"!=b?b:""))==(0==a[p]("http://")?7:0==a[p]("https://")?8:0)?"0":a};var Ra=0;function Sa(a,b,c){!(1<=Ra)&&!(1<=100*l.random())&&(a=["utmt=error","utmerr="+a,"utmwv=5.3.2","utmn="+Ea(),"utmsp=1"],b&&a[m]("api="+b),c&&a[m]("msg="+G(c[A](0,100))),L.A&&a[m]("aip=1"),Ta(a[B]("&")),Ra++)};var Ua=0,Va={};function M(a){return Wa("x"+Ua++,a)}function Wa(a,b){Va[a]=!!b;return a}
var N=M(),Xa=M(),Ya=M(),Za=M(),$a=M(),O=M(),P=M(),ab=M(),bb=M(),cb=M(),db=M(),eb=M(),fb=M(),gb=M(),hb=M(),ib=M(),jb=M(),kb=M(),lb=M(),mb=M(),nb=M(),ob=M(),pb=M(),qb=M(),rb=M(),sb=M(),tb=M(),ub=M(),vb=M(),wb=M(),xb=M(),yb=M(),zb=M(),Ab=M(),Bb=M(),Q=M(h),Cb=Wa("page"),Db=Wa("title"),Eb=M(),Fb=M(),Gb=M(),Hb=M(),Ib=M(),Jb=M(),Kb=M(),Lb=M(),Mb=M(),R=M(h),Nb=M(h),Ob=M(h),Rb=M(h),Sb=M(h),Tb=M(h),Ub=M(h),Vb=M(h),Wb=M(h),Xb=M(h),Yb=M(h),S=M(h),Zb=M(h),$b=M(h),ac=M(h),bc=M(h),cc=M(h),dc=M(h),ec=M(h),fc=M(h),
gc=M(h),hc=M(h),ic=M(h),jc=M(h),kc=M(h),lc=Wa("campaignParams"),mc=M(),nc=Wa("hitCallback"),oc=M();M();var pc=M(),qc=M(),rc=M(),sc=M(),tc=M(),uc=M(),vc=M(),wc=M(),xc=M(),yc=M(),zc=M(),Dc=M();M();var Ec=M(),Fc=M(),Gc=M();var Jc=function(){function a(a,c,d){T(U[w],a,c,d)}Hc("_getName",Ya,58);Hc("_getAccount",N,64);Hc("_visitCode",R,54);Hc("_getClientInfo",gb,53,1);Hc("_getDetectTitle",jb,56,1);Hc("_getDetectFlash",hb,65,1);Hc("_getLocalGifPath",tb,57);Hc("_getServiceMode",ub,59);V("_setClientInfo",gb,66,2);V("_setAccount",N,3);V("_setNamespace",Xa,48);V("_setAllowLinker",db,11,2);V("_setDetectFlash",hb,61,2);V("_setDetectTitle",jb,62,2);V("_setLocalGifPath",tb,46,0);V("_setLocalServerMode",ub,92,g,0);V("_setRemoteServerMode",
ub,63,g,1);V("_setLocalRemoteServerMode",ub,47,g,2);V("_setSampleRate",sb,45,1);V("_setCampaignTrack",ib,36,2);V("_setAllowAnchor",eb,7,2);V("_setCampNameKey",lb,41);V("_setCampContentKey",qb,38);V("_setCampIdKey",kb,39);V("_setCampMediumKey",ob,40);V("_setCampNOKey",rb,42);V("_setCampSourceKey",nb,43);V("_setCampTermKey",pb,44);V("_setCampCIdKey",mb,37);V("_setCookiePath",P,9,0);V("_setMaxCustomVariables",vb,0,1);V("_setVisitorCookieTimeout",ab,28,1);V("_setSessionCookieTimeout",bb,26,1);V("_setCampaignCookieTimeout",
cb,29,1);V("_setReferrerOverride",Eb,49);V("_setSiteSpeedSampleRate",xc,132);a("_trackPageview",U[w].ya,1);a("_trackEvent",U[w].D,4);a("_trackPageLoadTime",U[w].xa,100);a("_trackSocial",U[w].za,104);a("_trackTrans",U[w].Ba,18);a("_sendXEvent",U[w].t,78);a("_createEventTracker",U[w].ea,74);a("_getVersion",U[w].ja,60);a("_setDomainName",U[w].C,6);a("_setAllowHash",U[w].oa,8);a("_getLinkerUrl",U[w].ia,52);a("_link",U[w].link,101);a("_linkByPost",U[w].na,102);a("_setTrans",U[w].sa,20);a("_addTrans",U[w].Y,
21);a("_addItem",U[w].W,19);a("_setTransactionDelim",U[w].ta,82);a("_setCustomVar",U[w].pa,10);a("_deleteCustomVar",U[w].ga,35);a("_getVisitorCustomVar",U[w].ka,50);a("_setXKey",U[w].va,83);a("_setXValue",U[w].wa,84);a("_getXKey",U[w].la,76);a("_getXValue",U[w].ma,77);a("_clearXKey",U[w].ba,72);a("_clearXValue",U[w].ca,73);a("_createXObj",U[w].fa,75);a("_addIgnoredOrganic",U[w].U,15);a("_clearIgnoredOrganic",U[w].Z,97);a("_addIgnoredRef",U[w].V,31);a("_clearIgnoredRef",U[w].$,32);a("_addOrganic",
U[w].X,14);a("_clearOrganic",U[w].aa,70);a("_cookiePathCopy",U[w].da,30);a("_get",U[w].ha,106);a("_set",U[w].qa,107);a("_addEventListener",U[w].addEventListener,108);a("_removeEventListener",U[w].removeEventListener,109);a("_addDevId",U[w].T);a("_getPlugin",Ic,122);a("_setPageGroup",U[w].ra,126);a("_trackTiming",U[w].Aa,124);a("_initData",U[w].u,2);a("_setVar",U[w].ua,22);V("_setSessionTimeout",bb,27,3);V("_setCookieTimeout",cb,25,3);V("_setCookiePersistence",ab,24,1);a("_setAutoTrackOutbound",Fa,
79);a("_setTrackOutboundSubdomains",Fa,81);a("_setHrefExamineLimit",Fa,80)};function Ic(a){var b=this.plugins_;if(b)return b.get(a)}
var T=function(a,b,c,d){a[b]=function(){try{return d!=g&&H(d),c[ya](this,arguments)}catch(a){throw Sa("exc",b,a&&a[q]),a;}}},Hc=function(a,b,c,d){U[w][a]=function(){try{return H(c),Aa(this.a.get(b),d)}catch(e){throw Sa("exc",a,e&&e[q]),e;}}},V=function(a,b,c,d,e){U[w][a]=function(f){try{H(c),e==g?this.a.set(b,Aa(f,d)):this.a.set(b,e)}catch(j){throw Sa("exc",a,j&&j[q]),j;}}},Kc=function(a,b){return{type:b,target:a,stopPropagation:function(){throw"aborted";}}};var Lc=RegExp(/(^|\.)doubleclick\.net$/i),Mc=function(a,b){return Lc[ha](J[y].hostname)?h:"/"!==b?k:(0==a[p]("www.google.")||0==a[p](".google.")||0==a[p]("google."))&&!(-1<a[p]("google.org"))?h:k},Nc=function(a){var b=a.get($a),c=a.c(P,"/");Mc(b,c)&&a[ta]()};var Sc=function(){var a={},b={},c=new Oc;this.j=function(a,b){c.add(a,b)};var d=new Oc;this.e=function(a,b){d.add(a,b)};var e=k,f=k,j=h;this.S=function(){e=h};this.i=function(a){this[ja]();this.set(mc,a,h);a=new Pc(this);e=k;d.execute(this);e=h;b={};this.n();a.Ca()};this.load=function(){e&&(e=k,this.Da(),Qc(this),f||(f=h,c.execute(this),Rc(this),Qc(this)),e=h)};this.n=function(){if(e)if(f)e=k,Rc(this),e=h;else this[ja]()};this.get=function(c){Va[c]&&this[ja]();return b[c]!==g?b[c]:a[c]};this.set=
function(c,d,e){Va[c]&&this[ja]();e?b[c]=d:a[c]=d;Va[c]&&this.n()};this.v=function(b){a[b]=this.b(b,0)+1};this.b=function(a,b){var c=this.get(a);return c==g||""===c?b:1*c};this.c=function(a,b){var c=this.get(a);return c==g?b:c+""};this.Da=function(){if(j){var b=this.c($a,""),c=this.c(P,"/");Mc(b,c)||(a[O]=a[fb]&&""!=b?F(b):1,j=k)}}};Sc[w].stopPropagation=function(){throw"aborted";};
var Pc=function(a){var b=this;this.q=0;var c=a.get(nc);this.Sa=function(){0<b.q&&c&&(b.q--,b.q||c())};this.Ca=function(){!b.q&&c&&ea(c,10)};a.set(oc,b,h)};function Tc(a,b){for(var b=b||[],c=0;c<b[v];c++){var d=b[c];if(""+a==d||0==d[p](a+"."))return d}return"-"}
var Vc=function(a,b,c){c=c?"":a.c(O,"1");b=b[x](".");if(6!==b[v]||Uc(b[0],c))return k;var c=1*b[1],d=1*b[2],e=1*b[3],f=1*b[4],b=1*b[5];if(!(0<=c&&0<d&&0<e&&0<f&&0<=b))return H(110),k;a.set(R,c);a.set(Sb,d);a.set(Tb,e);a.set(Ub,f);a.set(Vb,b);return h},Wc=function(a){var b=a.get(R),c=a.get(Sb),d=a.get(Tb),e=a.get(Ub),f=a.b(Vb,1);b==g?H(113):NaN==b&&H(114);0<=b&&0<c&&0<d&&0<e&&0<=f||H(115);return[a.b(O,1),b!=g?b:"-",c||"-",d||"-",e||"-",f][B](".")},Xc=function(a){return[a.b(O,1),a.b(Yb,0),a.b(S,1),
a.b(Zb,0)][B](".")},Yc=function(a,b,c){var c=c?"":a.c(O,"1"),d=b[x](".");if(4!==d[v]||Uc(d[0],c))d=i;a.set(Yb,d?1*d[1]:0);a.set(S,d?1*d[2]:10);a.set(Zb,d?1*d[3]:a.get(Za));return d!=i||!Uc(b,c)},Zc=function(a,b){var c=G(a.c(Ob,"")),d=[],e=a.get(Q);if(!b&&e){for(var f=0;f<e[v];f++){var j=e[f];j&&1==j[ua]&&d[m](f+"="+G(j[q])+"="+G(j[ma])+"=1")}0<d[v]&&(c+="|"+d[B]("^"))}return c?a.b(O,1)+"."+c:i},$c=function(a,b,c){c=c?"":a.c(O,"1");b=b[x](".");if(2>b[v]||Uc(b[0],c))return k;b=b[ia](1)[B](".")[x]("|");
0<b[v]&&a.set(Ob,I(b[0]));if(1>=b[v])return h;b=b[1][x](-1==b[1][p](",")?"^":",");for(c=0;c<b[v];c++){var d=b[c][x]("=");if(4==d[v]){var e={};ga(e,I(d[1]));e.value=I(d[2]);e.scope=1;a.get(Q)[d[0]]=e}}return h},bd=function(a,b){var c=ad(a,b);return c?[a.b(O,1),a.b($b,0),a.b(ac,1),a.b(bc,1),c][B]("."):""},ad=function(a){function b(b,e){if(!E(a.get(b))){var f=a.c(b,""),f=f[x](" ")[B]("%20"),f=f[x]("+")[B]("%20");c[m](e+"="+f)}}var c=[];b(dc,"utmcid");b(hc,"utmcsr");b(fc,"utmgclid");b(gc,"utmdclid");
b(ec,"utmccn");b(ic,"utmcmd");b(jc,"utmctr");b(kc,"utmcct");return c[B]("|")},dd=function(a,b,c){c=c?"":a.c(O,"1");b=b[x](".");if(5>b[v]||Uc(b[0],c))return a.set($b,g),a.set(ac,g),a.set(bc,g),a.set(dc,g),a.set(ec,g),a.set(hc,g),a.set(ic,g),a.set(jc,g),a.set(kc,g),a.set(fc,g),a.set(gc,g),k;a.set($b,1*b[1]);a.set(ac,1*b[2]);a.set(bc,1*b[3]);cd(a,b[ia](4)[B]("."));return h},cd=function(a,b){function c(a){return(a=b[na](a+"=(.*?)(?:\\|utm|$)"))&&2==a[v]?a[1]:g}function d(b,c){c&&(c=e?I(c):c[x]("%20")[B](" "),
a.set(b,c))}-1==b[p]("=")&&(b=I(b));var e="2"==c("utmcvr");d(dc,c("utmcid"));d(ec,c("utmccn"));d(hc,c("utmcsr"));d(ic,c("utmcmd"));d(jc,c("utmctr"));d(kc,c("utmcct"));d(fc,c("utmgclid"));d(gc,c("utmdclid"))},Uc=function(a,b){return b?a!=b:!/^\d+$/[ha](a)};var Oc=function(){this.B=[]};Oc[w].add=function(a,b){this.B[m]({name:a,r:b})};Oc[w].execute=function(a){try{for(var b=0;b<this.B[v];b++)this.B[b].r.call(W,a)}catch(c){}};function ed(a){100!=a.get(sb)&&a.get(R)%1E4>=100*a.get(sb)&&a[ta]()}function fd(a){gd(a.get(N))&&a[ta]()}function hd(a){"file:"==J[y][z]&&a[ta]()}function id(a){a.get(Db)||a.set(Db,J.title,h);a.get(Cb)||a.set(Cb,J[y].pathname+J[y][va],h)};var jd=new function(){var a=[];this.set=function(b){a[b]=h};this.Va=function(){for(var b=[],c=0;c<a[v];c++)a[c]&&(b[l[ka](c/6)]=b[l[ka](c/6)]^1<<c%6);for(c=0;c<b[v];c++)b[c]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"[la](b[c]||0);return b[B]("")+"~"}};function H(a){jd.set(a)};var W=window,J=document,gd=function(a){var b=W._gaUserPrefs;return b&&b.ioo&&b.ioo()||!!a&&W["ga-disable-"+a]===h},kd=function(a,b){ea(a,b)},ld=function(a){for(var b=[],c=J.cookie[x](";"),a=RegExp("^\\s*"+a+"=\\s*(.*?)\\s*$"),d=0;d<c[v];d++){var e=c[d][na](a);e&&b[m](e[1])}return b},X=function(a,b,c,d,e,f){e=gd(e)?k:Mc(d,c)?k:h;if(e){if(b&&0<=W[za].userAgent[p]("Firefox"))for(var b=b[n](/\n|\r/g," "),e=0,j=b[v];e<j;++e){var o=b.charCodeAt(e)&255;if(10==o||13==o)b=b[A](0,e)+"?"+b[A](e+1)}b&&2E3<b[v]&&
(b=b[A](0,2E3),H(69));a=a+"="+b+"; path="+c+"; ";f&&(a+="expires="+(new Date((new Date).getTime()+f)).toGMTString()+"; ");d&&(a+="domain="+d+";");J.cookie=a}};var md,nd,od=function(){if(!md){var a={},b=W[za],c=W.screen;a.Q=c?c.width+"x"+c.height:"-";a.P=c?c.colorDepth+"-bit":"-";a.language=(b&&(b.language||b.browserLanguage)||"-")[C]();a.javaEnabled=b&&b.javaEnabled()?1:0;a.characterSet=J.characterSet||J.charset||"-";try{var d=J.documentElement,e=J.body,f=e&&e[ra]&&e[wa],b=[];d&&(d[ra]&&d[wa])&&("CSS1Compat"===J.compatMode||!f)?b=[d[ra],d[wa]]:f&&(b=[e[ra],e[wa]]);a.Ua=b[B]("x")}catch(j){H(135)}md=a}},pd=function(){od();for(var a=md,b=W[za],a=b.appName+
b.version+a.language+b.platform+b.userAgent+a.javaEnabled+a.Q+a.P+(J.cookie?J.cookie:"")+(J.referrer?J.referrer:""),b=a[v],c=W.history[v];0<c;)a+=c--^b++;return F(a)},qd=function(a){od();var b=md;a.set(Gb,b.Q);a.set(Hb,b.P);a.set(Kb,b.language);a.set(Lb,b.characterSet);a.set(Ib,b.javaEnabled);a.set(Mb,b.Ua);if(a.get(gb)&&a.get(hb)){if(!(b=nd)){var c,d,e;d="ShockwaveFlash";if((b=(b=W[za])?b.plugins:g)&&0<b[v])for(c=0;c<b[v]&&!e;c++)d=b[c],-1<d[q][p]("Shockwave Flash")&&(e=d.description[x]("Shockwave Flash ")[1]);
else{d=d+"."+d;try{c=new ActiveXObject(d+".7"),e=c.GetVariable("$version")}catch(f){}if(!e)try{c=new ActiveXObject(d+".6"),e="WIN 6,0,21,0",c.AllowScriptAccess="always",e=c.GetVariable("$version")}catch(j){}if(!e)try{c=new ActiveXObject(d),e=c.GetVariable("$version")}catch(o){}e&&(e=e[x](" ")[1][x](","),e=e[0]+"."+e[1]+" r"+e[2])}b=e?e:"-"}nd=b;a.set(Jb,nd)}else a.set(Jb,"-")};var rd=function(a){if(Ba(a))this.r=a;else{var b=a[0],c=b.lastIndexOf(":"),d=b.lastIndexOf(".");this.g=this.h=this.l="";-1==c&&-1==d?this.g=b:-1==c&&-1!=d?(this.h=b[A](0,d),this.g=b[A](d+1)):-1!=c&&-1==d?(this.l=b[A](0,c),this.g=b[A](c+1)):c>d?(this.h=b[A](0,d),this.l=b[A](d+1,c),this.g=b[A](c+1)):(this.h=b[A](0,d),this.g=b[A](d+1));this.k=a[ia](1);this.Fa=!this.l&&"_require"==this.g;this.H=!this.h&&!this.l&&"_provide"==this.g}},Y=function(){T(Y[w],"push",Y[w][m],5);T(Y[w],"_getPlugin",Ic,121);T(Y[w],
"_createAsyncTracker",Y[w].Qa,33);T(Y[w],"_getAsyncTracker",Y[w].Ra,34);this.G=new Ka;this.p=[]};D=Y[w];D.Ha=function(a,b,c){var d=this.G.get(a);if(!Ba(d))return k;b.plugins_=b.plugins_||new Ka;b.plugins_.set(a,new d(b,c||{}));return h};D.push=function(a){var b=Z.Ta[ya](this,arguments),b=Z.p.concat(b);for(Z.p=[];0<b[v]&&!Z.O(b[0])&&!(b.shift(),0<Z.p[v]););Z.p=Z.p.concat(b);return 0};D.Ta=function(a){for(var b=[],c=0;c<arguments[v];c++)try{var d=new rd(arguments[c]);d.H?this.O(d):b[m](d)}catch(e){}return b};
D.O=function(a){try{if(a.r)a.r[ya](W);else if(a.H)this.G.set(a.k[0],a.k[1]);else{var b="_gat"==a.h?L:"_gaq"==a.h?Z:L.w(a.h);if(a.Fa){if(!this.Ha(a.k[0],b,a.k[2])){if(!a.Ja){var c=Oa(""+a.k[1]);var d=c[z],e=J[y][z];var f;if(f="https:"==d||d==e?h:"http:"!=d?k:"http:"==e){var j;a:{var o=Oa(J[y][xa]);if(!(c.Ia||0<=c.url[p]("?")||0<=c[qa][p]("://")||c[t]==o[t]&&c[oa]==o[oa]))for(var r="http:"==c[z]?80:443,s=L.Ea,b=0;b<s[v];b++)if(c[t]==s[b][0]&&(c[oa]||r)==(s[b][1]||r)&&0==c[qa][p](s[b][2])){j=h;break a}j=
k}f=j&&!gd()}f&&(a.Ja=Ia(c.url))}return h}}else a.l&&(b=b.plugins_.get(a.l)),b[a.g][ya](b,a.k)}}catch(Qa){}};D.Qa=function(a,b){return L.s(a,b||"")};D.Ra=function(a){return L.w(a)};var vd=function(){function a(a,b,c,d){g==f[a]&&(f[a]={});g==f[a][b]&&(f[a][b]=[]);f[a][b][c]=d}function b(a,b,c){if(g!=f[a]&&g!=f[a][b])return f[a][b][c]}function c(a,b){if(g!=f[a]&&g!=f[a][b]){f[a][b]=g;var c=h,d;for(d=0;d<j[v];d++)if(g!=f[a][j[d]]){c=k;break}c&&(f[a]=g)}}function d(a){var b="",c=k,d,e;for(d=0;d<j[v];d++)if(e=a[j[d]],g!=e){c&&(b+=j[d]);for(var c=[],f=g,da=g,da=0;da<e[v];da++)if(g!=e[da]){f="";da!=Pb&&g==e[da-1]&&(f+=da[u]()+Qa);for(var td=e[da],Ac="",Qb=g,Bc=g,Cc=g,Qb=0;Qb<td[v];Qb++)Bc=
td[la](Qb),Cc=sa[Bc],Ac+=g!=Cc?Cc:Bc;f+=Ac;c[m](f)}b+=o+c[B](s)+r;c=k}else c=h;return b}var e=this,f=[],j=["k","v"],o="(",r=")",s="*",Qa="!",sa={"'":"'0"};sa[r]="'1";sa[s]="'2";sa[Qa]="'3";var Pb=1;e.La=function(a){return g!=f[a]};e.z=function(){for(var a="",b=0;b<f[v];b++)g!=f[b]&&(a+=b[u]()+d(f[b]));return a};e.Ka=function(a){if(a==g)return e.z();for(var b=a.z(),c=0;c<f[v];c++)g!=f[c]&&!a.La(c)&&(b+=c[u]()+d(f[c]));return b};e.f=function(b,c,d){if(!sd(d))return k;a(b,"k",c,d);return h};e.o=function(b,
c,d){if(!ud(d))return k;a(b,"v",c,d[u]());return h};e.getKey=function(a,c){return b(a,"k",c)};e.L=function(a,c){return b(a,"v",c)};e.J=function(a){c(a,"k")};e.K=function(a){c(a,"v")};T(e,"_setKey",e.f,89);T(e,"_setValue",e.o,90);T(e,"_getKey",e.getKey,87);T(e,"_getValue",e.L,88);T(e,"_clearKey",e.J,85);T(e,"_clearValue",e.K,86)};function sd(a){return"string"==typeof a}function ud(a){return"number"!=typeof a&&(g==Number||!(a instanceof Number))||l.round(a)!=a||NaN==a||a==ba?k:h};var wd=function(a){var b=W.gaGlobal;a&&!b&&(W.gaGlobal=b={});return b},xd=function(){var a=wd(h).hid;a==i&&(a=Ea(),wd(h).hid=a);return a},yd=function(a){a.set(Fb,xd());var b=wd();if(b&&b.dh==a.get(O)){var c=b.sid;c&&("0"==c&&H(112),a.set(Ub,c),a.get(Nb)&&a.set(Tb,c));b=b.vid;a.get(Nb)&&b&&(b=b[x]("."),1*b[1]||H(112),a.set(R,1*b[0]),a.set(Sb,1*b[1]))}};var zd,Ad=function(a,b,c){var d=a.c($a,""),e=a.c(P,"/"),f=a.b(ab,0),a=a.c(N,"");X(b,c,e,d,a,f)},Rc=function(a){var b=a.c($a,"");a.b(O,1);var c=a.c(P,"/"),d=a.c(N,"");X("__utma",Wc(a),c,b,d,a.get(ab));X("__utmb",Xc(a),c,b,d,a.get(bb));X("__utmc",""+a.b(O,1),c,b,d);var e=bd(a,h);e?X("__utmz",e,c,b,d,a.get(cb)):X("__utmz","",c,b,"",-1);(e=Zc(a,k))?X("__utmv",e,c,b,d,a.get(ab)):X("__utmv","",c,b,"",-1)},Qc=function(a){var b=a.b(O,1);if(!Vc(a,Tc(b,ld("__utma"))))return a.set(Rb,h),k;var c=!Yc(a,Tc(b,ld("__utmb")));
a.set(Xb,c);dd(a,Tc(b,ld("__utmz")));$c(a,Tc(b,ld("__utmv")));zd=!c;return h},Bd=function(a){!zd&&!(0<ld("__utmb")[v])&&(X("__utmd","1",a.c(P,"/"),a.c($a,""),a.c(N,""),1E4),0==ld("__utmd")[v]&&a[ta]())};var Ed=function(a){a.get(R)==g?Cd(a):a.get(Rb)&&!a.get(Ec)?Cd(a):a.get(Xb)&&Dd(a)},Fd=function(a){a.get(cc)&&!a.get(Wb)&&(Dd(a),a.set(ac,a.get(Vb)))},Cd=function(a){var b=a.get(Za);a.set(Nb,h);a.set(R,Ea()^pd(a)&2147483647);a.set(Ob,"");a.set(Sb,b);a.set(Tb,b);a.set(Ub,b);a.set(Vb,1);a.set(Wb,h);a.set(Yb,0);a.set(S,10);a.set(Zb,b);a.set(Q,[]);a.set(Rb,k);a.set(Xb,k)},Dd=function(a){a.set(Tb,a.get(Ub));a.set(Ub,a.get(Za));a.v(Vb);a.set(Wb,h);a.set(Yb,0);a.set(S,10);a.set(Zb,a.get(Za));a.set(Xb,k)};var Gd="daum:q eniro:search_word naver:query pchome:q images.google:q google:q yahoo:p yahoo:q msn:q bing:q aol:query aol:q lycos:q lycos:query ask:q netscape:query cnn:query about:terms mamma:q voila:rdata virgilio:qs live:q baidu:wd alice:qs yandex:text najdi:q seznam:q rakuten:qt biglobe:q goo.ne:MT wp:szukaj onet:qt yam:k kvasir:q ozu:q terra:query rambler:query conduit:q babylon:q search-results:q avg:q comcast:q incredimail:q startsiden:q go.mail.ru:q search.centrum.cz:q".split(" "),Md=function(a){if(a.get(ib)&&
!a.get(Ec)){for(var b=!E(a.get(dc))||!E(a.get(hc))||!E(a.get(fc))||!E(a.get(gc)),c={},d=0;d<Hd[v];d++){var e=Hd[d];c[e]=a.get(e)}(d=a.get(lc))?(H(149),e=new Ka,Na(e,d),d=e):d=Ma(J[y][xa],a.get(eb)).d;if(!("1"==Ja(d.get(a.get(rb)))&&b)&&(d=Id(a,d)||Jd(a),!d&&(!b&&a.get(Wb))&&(Kd(a,g,"(direct)",g,g,"(direct)","(none)",g,g),d=h),d))if(a.set(cc,Ld(a,c)),b="(direct)"==a.get(hc)&&"(direct)"==a.get(ec)&&"(none)"==a.get(ic),a.get(cc)||a.get(Wb)&&!b)a.set($b,a.get(Za)),a.set(ac,a.get(Vb)),a.v(bc)}},Id=function(a,
b){function c(c,d){var d=d||"-",e=Ja(b.get(a.get(c)));return e&&"-"!=e?I(e):d}var d=Ja(b.get(a.get(kb)))||"-",e=Ja(b.get(a.get(nb)))||"-",f=Ja(b.get(a.get(mb)))||"-",j=Ja(b.get("dclid"))||"-",o=c(lb,"(not set)"),r=c(ob,"(not set)"),s=c(pb),Qa=c(qb);if(E(d)&&E(f)&&E(j)&&E(e))return k;var sa=!E(j)&&E(e),Pb=E(s);if(sa||Pb){var ca=Nd(a),ca=Ma(ca,h);if((ca=Od(a,ca))&&!E(ca[1]&&!ca[2]))sa&&(e=ca[0]),Pb&&(s=ca[1])}Kd(a,d,e,f,j,o,r,s,Qa);return h},Jd=function(a){var b=Nd(a),c=Ma(b,h);if(!(b!=g&&b!=i&&""!=
b&&"0"!=b&&"-"!=b&&0<=b[p]("://"))||c&&-1<c[t][p]("google")&&c.d.contains("q")&&"cse"==c[qa])return k;if((b=Od(a,c))&&!b[2])return Kd(a,g,b[0],g,g,"(organic)","organic",b[1],g),h;if(b||!a.get(Wb))return k;a:{for(var b=a.get(yb),d=La(c[t]),e=0;e<b[v];++e)if(-1<d[p](b[e])){a=k;break a}Kd(a,g,d,g,g,"(referral)","referral",g,"/"+c[qa]);a=h}return a},Od=function(a,b){for(var c=a.get(wb),d=0;d<c[v];++d){var e=c[d][x](":");if(-1<b[t][p](e[0][C]())){var f=b.d.get(e[1]);if(f&&(f=K(f),!f&&-1<b[t][p]("google.")&&
(f="(not provided)"),!e[3]||-1<b.url[p](e[3]))){a:{for(var c=f,d=a.get(xb),c=I(c)[C](),j=0;j<d[v];++j)if(c==d[j]){c=h;break a}c=k}return[e[2]||e[0],f,c]}}}return i},Kd=function(a,b,c,d,e,f,j,o,r){a.set(dc,b);a.set(hc,c);a.set(fc,d);a.set(gc,e);a.set(ec,f);a.set(ic,j);a.set(jc,o);a.set(kc,r)},Hd=[ec,dc,fc,gc,hc,ic,jc,kc],Ld=function(a,b){function c(a){a=(""+a)[x]("+")[B]("%20");return a=a[x](" ")[B]("%20")}function d(c){var d=""+(a.get(c)||""),c=""+(b[c]||"");return 0<d[v]&&d==c}if(d(fc)||d(gc))return H(131),
k;for(var e=0;e<Hd[v];e++){var f=Hd[e],j=b[f]||"-",f=a.get(f)||"-";if(c(j)!=c(f))return h}return k},Pd=RegExp(/^https:\/\/(www\.)?google(\.com?)?(\.[a-z]{2}t?)?\/?$/i),Nd=function(a){a=Pa(a.get(Eb),a.get(P));try{if(Pd[ha](a))return H(136),a+"?q="}catch(b){H(145)}return a};var Rd=function(a){Qd(a,J[y][xa])?(a.set(Ec,h),H(12)):a.set(Ec,k)},Qd=function(a,b){if(!a.get(db))return k;var c=Ma(b,a.get(eb)),d=K(c.d.get("__utma")),e=K(c.d.get("__utmb")),f=K(c.d.get("__utmc")),j=K(c.d.get("__utmx")),o=K(c.d.get("__utmz")),r=K(c.d.get("__utmv")),c=K(c.d.get("__utmk"));if(F(""+d+e+f+j+o+r)!=c){d=I(d);e=I(e);f=I(f);j=I(j);f=Sd(d+e+f+j,o,r,c);if(!f)return k;o=f[0];r=f[1]}if(!Vc(a,d,h))return k;Yc(a,e,h);dd(a,o,h);$c(a,r,h);Td(a,j,h);return h},Vd=function(a,b,c){var d;d=Wc(a)||"-";
var e=Xc(a)||"-",f=""+a.b(O,1)||"-",j=Ud(a)||"-",o=bd(a,k)||"-",a=Zc(a,k)||"-",r=F(""+d+e+f+j+o+a),s=[];s[m]("__utma="+d);s[m]("__utmb="+e);s[m]("__utmc="+f);s[m]("__utmx="+j);s[m]("__utmz="+o);s[m]("__utmv="+a);s[m]("__utmk="+r);d=s[B]("&");if(!d)return b;e=b[p]("#");if(c)return 0>e?b+"#"+d:b+"&"+d;c="";f=b[p]("?");0<e&&(c=b[A](e),b=b[A](0,e));return 0>f?b+"?"+d+c:b+"&"+d+c},Sd=function(a,b,c,d){for(var e=0;3>e;e++){for(var f=0;3>f;f++){if(d==F(a+b+c))return H(127),[b,c];var j=b[n](/ /g,"%20"),o=
c[n](/ /g,"%20");if(d==F(a+j+o))return H(128),[j,o];j=j[n](/\+/g,"%20");o=o[n](/\+/g,"%20");if(d==F(a+j+o))return H(129),[j,o];try{var r=b[na]("utmctr=(.*?)(?:\\|utm|$)");if(r&&2==r[v]&&(j=b[n](r[1],G(I(r[1]))),d==F(a+j+c)))return H(139),[j,c]}catch(s){}b=I(b)}c=I(c)}};var Wd="|",Yd=function(a,b,c,d,e,f,j,o,r){var s=Xd(a,b);s||(s={},a.get(zb)[m](s));s.id_=b;s.affiliation_=c;s.total_=d;s.tax_=e;s.shipping_=f;s.city_=j;s.state_=o;s.country_=r;s.items_=s.items_||[];return s},Zd=function(a,b,c,d,e,f,j){var a=Xd(a,b)||Yd(a,b,"",0,0,0,"","",""),o;a:{if(a&&a.items_){o=a.items_;for(var r=0;r<o[v];r++)if(o[r].sku_==c){o=o[r];break a}}o=i}r=o||{};r.transId_=b;r.sku_=c;r.name_=d;r.category_=e;r.price_=f;r.quantity_=j;o||a.items_[m](r);return r},Xd=function(a,b){for(var c=
a.get(zb),d=0;d<c[v];d++)if(c[d].id_==b)return c[d];return i};var $d,ae=function(a){if(!$d){var b;b=J[y].hash;var c=W[q],d=/^#?gaso=([^&]*)/;if(c=(b=(b=b&&b[na](d)||c&&c[na](d))?b[1]:K(ld("GASO")))&&b[na](/^(?:[|!]([-0-9a-z.]{1,40})[|!])?([-.\w]{10,1200})$/i))Ad(a,"GASO",""+b),L._gasoDomain=a.get($a),L._gasoCPath=a.get(P),a=c[1],Ia("https://www.google.com/analytics/web/inpage/pub/inpage.js?"+(a?"prefix="+a+"&":"")+Ea(),"_gasojs");$d=h}};var Td=function(a,b,c){c&&(b=I(b));c=a.b(O,1);b=b[x](".");!(2>b[v])&&/^\d+$/[ha](b[0])&&(b[0]=""+c,Ad(a,"__utmx",b[B](".")))},Ud=function(a,b){var c=Tc(a.get(O),ld("__utmx"));"-"==c&&(c="");return b?G(c):c},be=function(a){try{var b=Ma(J[y][xa],k),c=fa(Ja(b.d.get("utm_referrer")))||"";c&&a.set(Eb,c);var d=fa(K(b.d.get("utm_expid")));d&&a.set(Gc,d)}catch(e){H(146)}};var ge=function(a,b){var c=l.min(a.b(xc,0),100);if(a.b(R,0)%100>=c)return k;c=ce()||de();if(c==g)return k;var d=c[0];if(d==g||d==ba||isNaN(d))return k;0<d?ee(c)?b(fe(c)):b(fe(c[ia](0,1))):Ga(W,"load",function(){ge(a,b)},k);return h},ie=function(a,b,c,d){var e=new vd;e.f(14,90,b[A](0,64));e.f(14,91,a[A](0,64));e.f(14,92,""+he(c));d!=g&&e.f(14,93,d[A](0,64));e.o(14,90,c);return e},ee=function(a){for(var b=1;b<a[v];b++)if(isNaN(a[b])||a[b]==ba||0>a[b])return k;return h},he=function(a){return isNaN(a)||
0>a?0:5E3>a?10*l[ka](a/10):5E4>a?100*l[ka](a/100):41E5>a?1E3*l[ka](a/1E3):41E5},fe=function(a){for(var b=new vd,c=0;c<a[v];c++)b.f(14,c+1,""+he(a[c])),b.o(14,c+1,a[c]);return b},ce=function(){var a=W.performance||W.webkitPerformance;if(a=a&&a.timing){var b=a.navigationStart;if(0==b)H(133);else return[a.loadEventStart-b,a.domainLookupEnd-a.domainLookupStart,a.connectEnd-a.connectStart,a.responseStart-a.requestStart,a.responseEnd-a.responseStart,a.fetchStart-b]}},de=function(){if(W.top==W){var a=W.external,
b=a&&a.onloadT;a&&!a.isValidLoadTime&&(b=g);2147483648<b&&(b=g);0<b&&a.setPageReadyTime();return b==g?g:[b]}};var U=function(a,b,c){function d(a){return function(b){if((b=b.get(Fc)[a])&&b[v])for(var c=Kc(e,a),d=0;d<b[v];d++)b[d].call(e,c)}}var e=this;this.a=new Sc;this.get=function(a){return this.a.get(a)};this.set=function(a,b,c){this.a.set(a,b,c)};this.set(N,b||"UA-XXXXX-X");this.set(Ya,a||"");this.set(Xa,c||"");this.set(Za,l.round((new Date).getTime()/1E3));this.set(P,"/");this.set(ab,63072E6);this.set(cb,15768E6);this.set(bb,18E5);this.set(db,k);this.set(vb,50);this.set(eb,k);this.set(fb,h);this.set(gb,
h);this.set(hb,h);this.set(ib,h);this.set(jb,h);this.set(lb,"utm_campaign");this.set(kb,"utm_id");this.set(mb,"gclid");this.set(nb,"utm_source");this.set(ob,"utm_medium");this.set(pb,"utm_term");this.set(qb,"utm_content");this.set(rb,"utm_nooverride");this.set(sb,100);this.set(xc,1);this.set(yc,k);this.set(tb,"/__utm.gif");this.set(ub,1);this.set(zb,[]);this.set(Q,[]);this.set(wb,Gd[ia](0));this.set(xb,[]);this.set(yb,[]);this.C("auto");this.set(Eb,J.referrer);be(this.a);this.set(Fc,{hit:[],load:[]});
this.a.j("0",Rd);this.a.j("1",Ed);this.a.j("2",Md);this.a.j("3",Fd);this.a.j("4",d("load"));this.a.j("5",ae);this.a.e("A",fd);this.a.e("B",hd);this.a.e("C",Ed);this.a.e("D",ed);this.a.e("E",Nc);this.a.e("F",je);this.a.e("G",Bd);this.a.e("H",id);this.a.e("I",qd);this.a.e("J",yd);this.a.e("K",d("hit"));this.a.e("L",ke);this.a.e("M",le);0===this.get(Za)&&H(111);this.a.S();this.F=g};D=U[w];D.m=function(){var a=this.get(Ab);a||(a=new vd,this.set(Ab,a));return a};
D.Ga=function(a){for(var b in a){var c=a[b];a.hasOwnProperty(b)&&this.set(b,c,h)}};D.I=function(a){if(this.get(yc))return k;var b=this,c=ge(this.a,function(c){b.set(Cb,a,h);b.t(c)});this.set(yc,c);return c};D.ya=function(a){a&&Ca(a)?(H(13),this.set(Cb,a,h)):"object"===typeof a&&a!==i&&this.Ga(a);this.F=a=this.get(Cb);this.a.i("page");this.I(a)};
D.D=function(a,b,c,d,e){if(""==a||(!sd(a)||""==b||!sd(b))||c!=g&&!sd(c)||d!=g&&!ud(d))return k;this.set(qc,a,h);this.set(rc,b,h);this.set(sc,c,h);this.set(tc,d,h);this.set(pc,!!e,h);this.a.i("event");return h};D.Aa=function(a,b,c,d,e){var f=this.a.b(xc,0);1*e===e&&(f=e);if(this.a.b(R,0)%100>=f)return k;c=1*(""+c);if(""==a||(!sd(a)||""==b||!sd(b)||!ud(c)||isNaN(c)||0>c||0>f||100<f)||d!=g&&(""==d||!sd(d)))return k;this.t(ie(a,b,c,d));return h};
D.za=function(a,b,c,d){if(!a||!b)return k;this.set(uc,a,h);this.set(vc,b,h);this.set(wc,c||J[y][xa],h);d&&this.set(Cb,d,h);this.a.i("social");return h};D.xa=function(){this.set(xc,10);this.I(this.F)};D.Ba=function(){this.a.i("trans")};D.t=function(a){this.set(Bb,a,h);this.a.i("event")};D.ea=function(a){this.u();var b=this;return{_trackEvent:function(c,d,e){H(91);b.D(a,c,d,e)}}};D.ha=function(a){return this.get(a)};
D.qa=function(a,b){if(a)if(Ca(a))this.set(a,b);else if("object"==typeof a)for(var c in a)a.hasOwnProperty(c)&&this.set(c,a[c])};D.addEventListener=function(a,b){var c=this.get(Fc)[a];c&&c[m](b)};D.removeEventListener=function(a,b){for(var c=this.get(Fc)[a],d=0;c&&d<c[v];d++)if(c[d]==b){c.splice(d,1);break}};D.ja=function(){return"5.3.2"};D.C=function(a){this.get(fb);a="auto"==a?La(J.domain):!a||"-"==a||"none"==a?"":a[C]();this.set($a,a)};D.oa=function(a){this.set(fb,!!a)};
D.ia=function(a,b){return Vd(this.a,a,b)};D.link=function(a,b){if(this.a.get(db)&&a){var c=Vd(this.a,a,b);J[y].href=c}};D.na=function(a,b){this.a.get(db)&&(a&&a.action)&&(a.action=Vd(this.a,a.action,b))};
D.sa=function(){this.u();var a=this.a,b=J.getElementById?J.getElementById("utmtrans"):J.utmform&&J.utmform.utmtrans?J.utmform.utmtrans:i;if(b&&b[ma]){a.set(zb,[]);for(var b=b[ma][x]("UTM:"),c=0;c<b[v];c++){b[c]=Da(b[c]);for(var d=b[c][x](Wd),e=0;e<d[v];e++)d[e]=Da(d[e]);"T"==d[0]?Yd(a,d[1],d[2],d[3],d[4],d[5],d[6],d[7],d[8]):"I"==d[0]&&Zd(a,d[1],d[2],d[3],d[4],d[5],d[6])}}};D.Y=function(a,b,c,d,e,f,j,o){return Yd(this.a,a,b,c,d,e,f,j,o)};D.W=function(a,b,c,d,e,f){return Zd(this.a,a,b,c,d,e,f)};
D.ta=function(a){Wd=a||"|"};D.pa=function(a,b,c,d){var e=this.a;if(0>=a||a>e.get(vb))a=k;else if(!b||!c||128<b[v]+c[v])a=k;else{1!=d&&2!=d&&(d=3);var f={};ga(f,b);f.value=c;f.scope=d;e.get(Q)[a]=f;a=h}a&&this.a.n();return a};D.ga=function(a){this.a.get(Q)[a]=g;this.a.n()};D.ka=function(a){return(a=this.a.get(Q)[a])&&1==a[ua]?a[ma]:g};D.va=function(a,b,c){this.m().f(a,b,c)};D.wa=function(a,b,c){this.m().o(a,b,c)};D.la=function(a,b){return this.m().getKey(a,b)};
D.ma=function(a,b){return this.m().L(a,b)};D.ba=function(a){this.m().J(a)};D.ca=function(a){this.m().K(a)};D.fa=function(){return new vd};D.U=function(a){a&&this.get(xb)[m](a[C]())};D.Z=function(){this.set(xb,[])};D.V=function(a){a&&this.get(yb)[m](a[C]())};D.$=function(){this.set(yb,[])};D.X=function(a,b,c,d,e){if(a&&b){a=[a,b[C]()][B](":");if(d||e)a=[a,d,e][B](":");d=this.get(wb);d.splice(c?0:d[v],0,a)}};D.aa=function(){this.set(wb,[])};
D.da=function(a){this.a[ja]();var b=this.get(P),c=Ud(this.a);this.set(P,a);this.a.n();Td(this.a,c);this.set(P,b)};D.ra=function(a,b){if(0<a&&5>=a&&Ca(b)&&""!=b){var c=this.get(zc)||[];c[a]=b;this.set(zc,c)}};D.T=function(a){a=""+a;if(a[na](/^[A-Za-z0-9]{1,5}$/)){var b=this.get(Dc)||[];b[m](a);this.set(Dc,b)}};D.u=function(){this.a[ja]()};D.ua=function(a){a&&""!=a&&(this.set(Ob,a),this.a.i("var"))};var je=function(a){"trans"!==a.get(mc)&&500<=a.b(Yb,0)&&a[ta]();if("event"===a.get(mc)){var b=(new Date).getTime(),c=a.b(Zb,0),d=a.b(Ub,0),c=l[ka](1*((b-(c!=d?c:1E3*c))/1E3));0<c&&(a.set(Zb,b),a.set(S,l.min(10,a.b(S,0)+c)));0>=a.b(S,0)&&a[ta]()}},le=function(a){"event"===a.get(mc)&&a.set(S,l.max(0,a.b(S,10)-1))};var me=function(){var a=[];this.add=function(b,c,d){d&&(c=G(""+c));a[m](b+"="+c)};this.toString=function(){return a[B]("&")}},ne=function(a,b){(b||2!=a.get(ub))&&a.v(Yb)},oe=function(a,b){b.add("utmwv","5.3.2");b.add("utms",a.get(Yb));b.add("utmn",Ea());var c=J[y].hostname;E(c)||b.add("utmhn",c,h);c=a.get(sb);100!=c&&b.add("utmsp",c,h)},qe=function(a,b){b.add("utmac",Da(a.get(N)));a.get(Gc)&&b.add("utmxkey",a.get(Gc),h);a.get(pc)&&b.add("utmni",1);var c=a.get(Dc);c&&0<c[v]&&b.add("utmdid",c[B]("."));
pe(a,b);L.A&&b.add("aip",1);b.add("utmu",jd.Va())},re=function(a,b){for(var c=a.get(zc)||[],d=[],e=1;e<c[v];e++)c[e]&&d[m](e+":"+G(c[e][n](/%/g,"%25")[n](/:/g,"%3A")[n](/,/g,"%2C")));d[v]&&b.add("utmpg",d[B](","))},pe=function(a,b){function c(a,b){b&&d[m](a+"="+b+";")}var d=[];c("__utma",Wc(a));c("__utmz",bd(a,k));c("__utmv",Zc(a,h));c("__utmx",Ud(a));b.add("utmcc",d[B]("+"),h)},se=function(a,b){a.get(gb)&&(b.add("utmcs",a.get(Lb),h),b.add("utmsr",a.get(Gb)),a.get(Mb)&&b.add("utmvp",a.get(Mb)),b.add("utmsc",
a.get(Hb)),b.add("utmul",a.get(Kb)),b.add("utmje",a.get(Ib)),b.add("utmfl",a.get(Jb),h))},te=function(a,b){a.get(jb)&&a.get(Db)&&b.add("utmdt",a.get(Db),h);b.add("utmhid",a.get(Fb));b.add("utmr",Pa(a.get(Eb),a.get(P)),h);b.add("utmp",G(a.get(Cb),h),h)},ue=function(a,b){for(var c=a.get(Ab),d=a.get(Bb),e=a.get(Q)||[],f=0;f<e[v];f++){var j=e[f];j&&(c||(c=new vd),c.f(8,f,j[q]),c.f(9,f,j[ma]),3!=j[ua]&&c.f(11,f,""+j[ua]))}!E(a.get(qc))&&!E(a.get(rc),h)&&(c||(c=new vd),c.f(5,1,a.get(qc)),c.f(5,2,a.get(rc)),
e=a.get(sc),e!=g&&c.f(5,3,e),e=a.get(tc),e!=g&&c.o(5,1,e));c?b.add("utme",c.Ka(d),h):d&&b.add("utme",d.z(),h)},ve=function(a,b,c){var d=new me;ne(a,c);oe(a,d);d.add("utmt","tran");d.add("utmtid",b.id_,h);d.add("utmtst",b.affiliation_,h);d.add("utmtto",b.total_,h);d.add("utmttx",b.tax_,h);d.add("utmtsp",b.shipping_,h);d.add("utmtci",b.city_,h);d.add("utmtrg",b.state_,h);d.add("utmtco",b.country_,h);c||(re(a,d),qe(a,d));return d[u]()},we=function(a,b,c){var d=new me;ne(a,c);oe(a,d);d.add("utmt","item");
d.add("utmtid",b.transId_,h);d.add("utmipc",b.sku_,h);d.add("utmipn",b.name_,h);d.add("utmiva",b.category_,h);d.add("utmipr",b.price_,h);d.add("utmiqt",b.quantity_,h);c||(re(a,d),qe(a,d));return d[u]()},xe=function(a,b){var c=a.get(mc);if("page"==c)c=new me,ne(a,b),oe(a,c),ue(a,c),se(a,c),te(a,c),b||(re(a,c),qe(a,c)),c=[c[u]()];else if("event"==c)c=new me,ne(a,b),oe(a,c),c.add("utmt","event"),ue(a,c),se(a,c),te(a,c),b||(re(a,c),qe(a,c)),c=[c[u]()];else if("var"==c)c=new me,ne(a,b),oe(a,c),c.add("utmt",
"var"),!b&&qe(a,c),c=[c[u]()];else if("trans"==c)for(var c=[],d=a.get(zb),e=0;e<d[v];++e){c[m](ve(a,d[e],b));for(var f=d[e].items_,j=0;j<f[v];++j)c[m](we(a,f[j],b))}else"social"==c?b?c=[]:(c=new me,ne(a,b),oe(a,c),c.add("utmt","social"),c.add("utmsn",a.get(uc),h),c.add("utmsa",a.get(vc),h),c.add("utmsid",a.get(wc),h),ue(a,c),se(a,c),te(a,c),re(a,c),qe(a,c),c=[c[u]()]):c=[];return c},ke=function(a){var b,c=a.get(ub),d=a.get(oc),e=d&&d.Sa,f=0;if(0==c||2==c){var j=a.get(tb)+"?";b=xe(a,h);for(var o=0,
r=b[v];o<r;o++)Ta(b[o],e,j,h),f++}if(1==c||2==c){b=xe(a);o=0;for(r=b[v];o<r;o++)try{Ta(b[o],e),f++}catch(s){s&&Sa(s[q],g,s.message)}}d&&(d.q=f)};var ye="https:"==J[y][z]?"https://ssl.google-analytics.com":"http://www.google-analytics.com",ze=function(a){ga(this,"len");this.message=a+"-8192"},Ae=function(a){ga(this,"ff2post");this.message=a+"-2036"},Ta=function(a,b,c,d){b=b||Fa;if(d||2036>=a[v])Be(a,b,c);else if(8192>=a[v]){if(0<=W[za].userAgent[p]("Firefox")&&![].reduce)throw new Ae(a[v]);Ce(a,b)||De(a,b)}else throw new ze(a[v]);},Be=function(a,b,c){var c=c||ye+"/__utm.gif?",d=new Image(1,1);d.src=c+a;d.onload=function(){d.onload=i;d.onerror=
i;b()};d.onerror=function(){d.onload=i;d.onerror=i;b()}},Ce=function(a,b){var c,d=ye+"/p/__utm.gif",e=W.XDomainRequest;if(e)c=new e,c.open("POST",d);else if(e=W.XMLHttpRequest)e=new e,"withCredentials"in e&&(c=e,c.open("POST",d,h),c.setRequestHeader("Content-Type","text/plain"));if(c)return c.onreadystatechange=function(){4==c.readyState&&(b(),c=i)},c.send(a),h},De=function(a,b){if(J.body){a=aa(a);try{var c=J[pa]('<iframe name="'+a+'"></iframe>')}catch(d){c=J[pa]("iframe"),ga(c,a)}c.height="0";c.width=
"0";c.style.display="none";c.style.visibility="hidden";var e=J[y],e=ye+"/u/post_iframe.html#"+aa(e[z]+"//"+e[t]+"/favicon.ico"),f=function(){c.src="";c.parentNode&&c.parentNode.removeChild(c)};Ga(W,"beforeunload",f);var j=k,o=0,r=function(){if(!j){try{if(9<o||c.contentWindow[y][t]==J[y][t]){j=h;f();Ha(W,"beforeunload",f);b();return}}catch(a){}o++;ea(r,200)}};Ga(c,"load",r);J.body.appendChild(c);c.src=e}else kd(function(){De(a,b)},100)};var $=function(){this.A=k;this.M={};this.N=[];this.Ma=0;this.Ea=[["www.google-analytics.com","","/plugins/"]];this._gasoCPath=this._gasoDomain=g;T($[w],"_createTracker",$[w].s,55);T($[w],"_getTracker",$[w].Oa,0);T($[w],"_getTrackerByName",$[w].w,51);T($[w],"_getTrackers",$[w].Pa,130);T($[w],"_anonymizeIp",$[w].Na,16);T($[w],"_getPlugin",Ic,120);Jc()};D=$[w];D.Oa=function(a,b){return this.s(a,g,b)};D.s=function(a,b,c){b&&H(23);c&&H(67);b==g&&(b="~"+L.Ma++);a=new U(b,a,c);L.M[b]=a;L.N[m](a);return a};
D.w=function(a){a=a||"";return L.M[a]||L.s(g,a)};D.Pa=function(){return L.N[ia](0)};D.Na=function(){this.A=h};var Ee=function(a){if("prerender"==J.webkitVisibilityState)return k;a();return h};var L=new $;var Fe=W._gat;Fe&&Ba(Fe._getTracker)?L=Fe:W._gat=L;var Z=new Y;(function(a){if(!Ee(a)){H(123);var b=k,c=function(){!b&&Ee(a)&&(b=h,Ha(J,"webkitvisibilitychange",c))};Ga(J,"webkitvisibilitychange",c)}})(function(){var a=W._gaq,b=k;if(a&&Ba(a[m])&&(b="[object Array]"==Object[w][u].call(Object(a)),!b)){Z=a;return}W._gaq=Z;b&&Z[m][ya](Z,a)});})();
_text/javascriptOèbplist00‘noX$versionX$objectsY$archiverT$top Ü†Ø""()012NOPQRSTUVWXYZ[\]^_`abcdhiU$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ Ä Ä!ÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _%http://www.google-analytics.com/ga.js“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#AµvÉñ•∫√»”3456BWNS.keysZNS.objectsÄ´789:;<=>?@AÄ	Ä
ÄÄÄÄÄÄÄÄÄ´CDEFGHIJKLMÄÄÄÄÄÄÄÄÄÄÄVServer]Cache-Control\Content-TypeWExpiresTDate^Content-Length]Last-Modified_Content-Encoding_X-Content-Type-OptionsTVarySAgeWGFE/2.0_max-age=43200, public_text/javascript_Wed, 30 May 2012 20:40:33 GMT_Wed, 30 May 2012 08:40:33 GMTU14688_Tue, 22 May 2012 00:49:03 GMTTgzip_nosniff, nosniff_Accept-EncodingU28437“*+ef_NSMutableDictionary£eg/\NSDictionaryè“*+jk_NSHTTPURLResponse£lm/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—pq_WebResourceResponseÄ    # - 2 7 \ b } Ä Ñ á ä ç ë î õ û ° § ß ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º æ ¿ ¬ … ’ › ﬂ · „$*-3<EGNVacoqsuwy{}ÅÉÖëìïóôõùü°£•ßÆº…—÷ÂÛ$(0HZzö†¿≈ÿÍı$8<P^psâ             r              ã_%http://www.google-analytics.com/ga.js‘O¡∏/*************************************************************
 *
 *  MathJax.js
 *  
 *  The main code for the MathJax math-typesetting library.  See 
 *  http://www.mathjax.org/ for details.
 *  
 *  ---------------------------------------------------------------------
 *  
 *  Copyright (c) 2009-2012 Design Science, Inc.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

if (!window.MathJax) {window.MathJax = {}}

MathJax.isPacked = true;

if(document.getElementById&&document.childNodes&&document.createElement){if(!window.MathJax){window.MathJax={}}if(!MathJax.Hub){MathJax.version="2.0";MathJax.fileversion="2.0";(function(d){var b=window[d];if(!b){b=window[d]={}}var f=[];var c=function(g){var h=g.constructor;if(!h){h=new Function("")}for(var i in g){if(i!=="constructor"&&g.hasOwnProperty(i)){h[i]=g[i]}}return h};var a=function(){return new Function("return arguments.callee.Init.call(this,arguments)")};var e=a();e.prototype={bug_test:1};if(!e.prototype.bug_test){a=function(){return function(){return arguments.callee.Init.call(this,arguments)}}}b.Object=c({constructor:a(),Subclass:function(g,i){var h=a();h.SUPER=this;h.Init=this.Init;h.Subclass=this.Subclass;h.Augment=this.Augment;h.protoFunction=this.protoFunction;h.can=this.can;h.has=this.has;h.isa=this.isa;h.prototype=new this(f);h.prototype.constructor=h;h.Augment(g,i);return h},Init:function(g){var h=this;if(g.length===1&&g[0]===f){return h}if(!(h instanceof g.callee)){h=new g.callee(f)}return h.Init.apply(h,g)||h},Augment:function(g,h){var i;if(g!=null){for(i in g){if(g.hasOwnProperty(i)){this.protoFunction(i,g[i])}}if(g.toString!==this.prototype.toString&&g.toString!=={}.toString){this.protoFunction("toString",g.toString)}}if(h!=null){for(i in h){if(h.hasOwnProperty(i)){this[i]=h[i]}}}return this},protoFunction:function(h,g){this.prototype[h]=g;if(typeof g==="function"){g.SUPER=this.SUPER.prototype}},prototype:{Init:function(){},SUPER:function(g){return g.callee.SUPER},can:function(g){return typeof(this[g])==="function"},has:function(g){return typeof(this[g])!=="undefined"},isa:function(g){return(g instanceof Object)&&(this instanceof g)}},can:function(g){return this.prototype.can.call(this,g)},has:function(g){return this.prototype.has.call(this,g)},isa:function(h){var g=this;while(g){if(g===h){return true}else{g=g.SUPER}}return false},SimpleSUPER:c({constructor:function(g){return this.SimpleSUPER.define(g)},define:function(g){var i={};if(g!=null){for(var h in g){if(g.hasOwnProperty(h)){i[h]=this.wrap(h,g[h])}}if(g.toString!==this.prototype.toString&&g.toString!=={}.toString){i.toString=this.wrap("toString",g.toString)}}return i},wrap:function(i,h){if(typeof(h)==="function"&&h.toString().match(/\.\s*SUPER\s*\(/)){var g=new Function(this.wrapper);g.label=i;g.original=h;h=g;g.toString=this.stringify}return h},wrapper:function(){var h=arguments.callee;this.SUPER=h.SUPER[h.label];try{var g=h.original.apply(this,arguments)}catch(i){delete this.SUPER;throw i}delete this.SUPER;return g}.toString().replace(/^\s*function\s*\(\)\s*\{\s*/i,"").replace(/\s*\}\s*$/i,""),toString:function(){return this.original.toString.apply(this.original,arguments)}})})})("MathJax");(function(BASENAME){var BASE=window[BASENAME];if(!BASE){BASE=window[BASENAME]={}}var CALLBACK=function(data){var cb=new Function("return arguments.callee.execute.apply(arguments.callee,arguments)");for(var id in CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(data[id])!=="undefined"){cb[id]=data[id]}else{cb[id]=CALLBACK.prototype[id]}}}cb.toString=CALLBACK.prototype.toString;return cb};CALLBACK.prototype={isCallback:true,hook:function(){},data:[],object:window,execute:function(){if(!this.called||this.autoReset){this.called=!this.autoReset;return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))}},reset:function(){delete this.called},toString:function(){return this.hook.toString.apply(this.hook,arguments)}};var ISCALLBACK=function(f){return(typeof(f)==="function"&&f.isCallback)};var EVAL=function(code){return eval.call(window,code)};EVAL("var __TeSt_VaR__ = 1");if(window.__TeSt_VaR__){try{delete window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=null}}else{if(window.execScript){EVAL=function(code){BASE.__code=code;code="try {"+BASENAME+".__result = eval("+BASENAME+".__code)} catch(err) {"+BASENAME+".__result = err}";window.execScript(code);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}else{EVAL=function(code){BASE.__code=code;code="try {"+BASENAME+".__result = eval("+BASENAME+".__code)} catch(err) {"+BASENAME+".__result = err}";var head=(document.getElementsByTagName("head"))[0];if(!head){head=document.body}var script=document.createElement("script");script.appendChild(document.createTextNode(code));head.appendChild(script);head.removeChild(script);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}}var USING=function(args,i){if(arguments.length>1){if(arguments.length===2&&!(typeof arguments[0]==="function")&&arguments[0] instanceof Object&&typeof arguments[1]==="number"){args=[].slice.call(args,i)}else{args=[].slice.call(arguments,0)}}if(args instanceof Array&&args.length===1){args=args[0]}if(typeof args==="function"){if(args.execute===CALLBACK.prototype.execute){return args}return CALLBACK({hook:args})}else{if(args instanceof Array){if(typeof(args[0])==="string"&&args[1] instanceof Object&&typeof args[1][args[0]]==="function"){return CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{if(typeof args[0]==="function"){return CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof args[1]==="function"){return CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typeof(args)==="string"){return CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return CALLBACK(args)}else{if(typeof(args)==="undefined"){return CALLBACK({})}}}}}throw Error("Can't make callback from given data")};var DELAY=function(time,callback){callback=USING(callback);callback.timeout=setTimeout(callback,time);return callback};var WAITFOR=function(callback,signal){callback=USING(callback);if(!callback.called){WAITSIGNAL(callback,signal);signal.pending++}};var WAITEXECUTE=function(){var signals=this.signal;delete this.signal;this.execute=this.oldExecute;delete this.oldExecute;var result=this.execute.apply(this,arguments);if(ISCALLBACK(result)&&!result.called){WAITSIGNAL(result,signals)}else{for(var i=0,m=signals.length;i<m;i++){signals[i].pending--;if(signals[i].pending<=0){signals[i].call()}}}};var WAITSIGNAL=function(callback,signals){if(!(signals instanceof Array)){signals=[signals]}if(!callback.signal){callback.oldExecute=callback.execute;callback.execute=WAITEXECUTE;callback.signal=signals}else{if(signals.length===1){callback.signal.push(signals[0])}else{callback.signal=callback.signal.concat(signals)}}};var AFTER=function(callback){callback=USING(callback);callback.pending=0;for(var i=1,m=arguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i],callback)}}if(callback.pending===0){var result=callback();if(ISCALLBACK(result)){callback=result}}return callback};var HOOKS=MathJax.Object.Subclass({Init:function(reset){this.hooks=[];this.reset=reset},Add:function(hook,priority){if(priority==null){priority=10}if(!ISCALLBACK(hook)){hook=USING(hook)}hook.priority=priority;var i=this.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}this.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var i=0,m=this.hooks.length;i<m;i++){if(this.hooks[i]===hook){this.hooks.splice(i,1);return}}},Execute:function(){var callbacks=[{}];for(var i=0,m=this.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()}var result=this.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!result.called){callbacks.push(result)}}if(callbacks.length===1){return null}if(callbacks.length===2){return callbacks[1]}return AFTER.apply({},callbacks)}});var EXECUTEHOOKS=function(hooks,data,reset){if(!hooks){return null}if(!(hooks instanceof Array)){hooks=[hooks]}if(!(data instanceof Array)){data=(data==null?[]:[data])}var handler=HOOKS(reset);for(var i=0,m=hooks.length;i<m;i++){handler.Add(hooks[i])}return handler.Execute.apply(handler,data)};var QUEUE=BASE.Object.Subclass({Init:function(){this.pending=0;this.running=0;this.queue=[];this.Push.apply(this,arguments)},Push:function(){var callback;for(var i=0,m=arguments.length;i<m;i++){callback=USING(arguments[i]);if(callback===arguments[i]&&!callback.called){callback=USING(["wait",this,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){this.Process()}return callback},Process:function(queue){while(!this.running&&!this.pending&&this.queue.length){var callback=this.queue[0];queue=this.queue.slice(1);this.queue=[];this.Suspend();var result=callback();this.Resume();if(queue.length){this.queue=queue.concat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}}},Suspend:function(){this.running++},Resume:function(){if(this.running){this.running--}},call:function(){this.Process.apply(this,arguments)},wait:function(callback){return callback}});var SIGNAL=QUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(this);this.name=name;this.posted=[];this.listeners=HOOKS(true)},Post:function(message,callback,forget){callback=USING(callback);if(this.posting||this.pending){this.Push(["Post",this,message,callback,forget])}else{this.callback=callback;callback.reset();if(!forget){this.posted.push(message)}this.Suspend();this.posting=true;var result=this.listeners.Execute(message);if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}this.Resume();delete this.posting;if(!this.pending){this.call()}}return callback},Clear:function(callback){callback=USING(callback);if(this.posting||this.pending){callback=this.Push(["Clear",this,callback])}else{this.posted=[];callback()}return callback},call:function(){this.callback(this);this.Process()},Interest:function(callback,ignorePast,priority){callback=USING(callback);this.listeners.Add(callback,priority);if(!ignorePast){for(var i=0,m=this.posted.length;i<m;i++){callback.reset();var result=callback(this.posted[i]);if(ISCALLBACK(result)&&i===this.posted.length-1){WAITFOR(result,this)}}}return callback},NoInterest:function(callback){this.listeners.Remove(callback)},MessageHook:function(msg,callback,priority){callback=USING(callback);if(!this.hooks){this.hooks={};this.Interest(["ExecuteHooks",this])}if(!this.hooks[msg]){this.hooks[msg]=HOOKS(true)}this.hooks[msg].Add(callback,priority);for(var i=0,m=this.posted.length;i<m;i++){if(this.posted[i]==msg){callback.reset();callback(this.posted[i])}}return callback},ExecuteHooks:function(msg,more){var type=((msg instanceof Array)?msg[0]:msg);if(!this.hooks[type]){return null}return this.hooks[type].Execute(msg)}},{signals:{},find:function(name){if(!SIGNAL.signals[name]){SIGNAL.signals[name]=new SIGNAL(name)}return SIGNAL.signals[name]}});BASE.Callback=BASE.CallBack=USING;BASE.Callback.Delay=DELAY;BASE.Callback.After=AFTER;BASE.Callback.Queue=QUEUE;BASE.Callback.Signal=SIGNAL.find;BASE.Callback.Hooks=HOOKS;BASE.Callback.ExecuteHooks=EXECUTEHOOKS})("MathJax");(function(d){var a=window[d];if(!a){a=window[d]={}}var c=(navigator.vendor==="Apple Computer, Inc."&&typeof navigator.vendorSub==="undefined");var f=0;var g=function(h){if(document.styleSheets&&document.styleSheets.length>f){f=document.styleSheets.length}if(!h){h=(document.getElementsByTagName("head"))[0];if(!h){h=document.body}}return h};var e=[];var b=function(){for(var j=0,h=e.length;j<h;j++){a.Ajax.head.removeChild(e[j])}e=[]};a.Ajax={loaded:{},loading:{},loadHooks:{},timeout:15*1000,styleDelay:1,config:{root:""},STATUS:{OK:1,ERROR:-1},rootPattern:new RegExp("^\\["+d+"\\]"),fileURL:function(h){return h.replace(this.rootPattern,this.config.root)},Require:function(j,m){m=a.Callback(m);var k;if(j instanceof Object){for(var h in j){}k=h.toUpperCase();j=j[h]}else{k=j.split(/\./).pop().toUpperCase()}j=this.fileURL(j);if(this.loaded[j]){m(this.loaded[j])}else{var l={};l[k]=j;this.Load(l,m)}return m},Load:function(j,l){l=a.Callback(l);var k;if(j instanceof Object){for(var h in j){}k=h.toUpperCase();j=j[h]}else{k=j.split(/\./).pop().toUpperCase()}j=this.fileURL(j);if(this.loading[j]){this.addHook(j,l)}else{this.head=g(this.head);if(this.loader[k]){this.loader[k].call(this,j,l)}else{throw Error("Can't load files of type "+k)}}return l},LoadHook:function(k,l,j){l=a.Callback(l);if(k instanceof Object){for(var h in k){k=k[h]}}k=this.fileURL(k);if(this.loaded[k]){l(this.loaded[k])}else{this.addHook(k,l,j)}return l},addHook:function(i,j,h){if(!this.loadHooks[i]){this.loadHooks[i]=MathJax.Callback.Hooks()}this.loadHooks[i].Add(j,h)},Preloading:function(){for(var k=0,h=arguments.length;k<h;k++){var j=this.fileURL(arguments[k]);if(!this.loading[j]){this.loading[j]={preloaded:true}}}},loader:{JS:function(i,k){var h=document.createElement("script");var j=a.Callback(["loadTimeout",this,i]);this.loading[i]={callback:k,message:a.Message.File(i),timeout:setTimeout(j,this.timeout),status:this.STATUS.OK,script:h};h.onerror=j;h.type="text/javascript";h.src=i;this.head.appendChild(h)},CSS:function(h,j){var i=document.createElement("link");i.rel="stylesheet";i.type="text/css";i.href=h;this.loading[h]={callback:j,message:a.Message.File(h),status:this.STATUS.OK};this.head.appendChild(i);this.timer.create.call(this,[this.timer.file,h],i)}},timer:{create:function(i,h){i=a.Callback(i);if(h.nodeName==="STYLE"&&h.styleSheet&&typeof(h.styleSheet.cssText)!=="undefined"){i(this.STATUS.OK)}else{if(window.chrome&&typeof(window.sessionStorage)!=="undefined"&&h.nodeName==="STYLE"){i(this.STATUS.OK)}else{if(c){this.timer.start(this,[this.timer.checkSafari2,f++,i],this.styleDelay)}else{this.timer.start(this,[this.timer.checkLength,h,i],this.styleDelay)}}}return i},start:function(i,h,j,k){h=a.Callback(h);h.execute=this.execute;h.time=this.time;h.STATUS=i.STATUS;h.timeout=k||i.timeout;h.delay=h.total=0;if(j){setTimeout(h,j)}else{h()}},time:function(h){this.total+=this.delay;this.delay=Math.floor(this.delay*1.05+5);if(this.total>=this.timeout){h(this.STATUS.ERROR);return 1}return 0},file:function(i,h){if(h<0){a.Ajax.loadTimeout(i)}else{a.Ajax.loadComplete(i)}},execute:function(){this.hook.call(this.object,this,this.data[0],this.data[1])},checkSafari2:function(h,i,j){if(h.time(j)){return}if(document.styleSheets.length>i&&document.styleSheets[i].cssRules&&document.styleSheets[i].cssRules.length){j(h.STATUS.OK)}else{setTimeout(h,h.delay)}},checkLength:function(h,k,m){if(h.time(m)){return}var l=0;var i=(k.sheet||k.styleSheet);try{if((i.cssRules||i.rules||[]).length>0){l=1}}catch(j){if(j.message.match(/protected variable|restricted URI/)){l=1}else{if(j.message.match(/Security error/)){l=1}}}if(l){setTimeout(a.Callback([m,h.STATUS.OK]),0)}else{setTimeout(h,h.delay)}}},loadComplete:function(h){h=this.fileURL(h);var i=this.loading[h];if(i&&!i.preloaded){a.Message.Clear(i.message);clearTimeout(i.timeout);if(i.script){if(e.length===0){setTimeout(b,0)}e.push(i.script)}this.loaded[h]=i.status;delete this.loading[h];this.addHook(h,i.callback)}else{if(i){delete this.loading[h]}this.loaded[h]=this.STATUS.OK;i={status:this.STATUS.OK}}if(!this.loadHooks[h]){return null}return this.loadHooks[h].Execute(i.status)},loadTimeout:function(h){if(this.loading[h].timeout){clearTimeout(this.loading[h].timeout)}this.loading[h].status=this.STATUS.ERROR;this.loadError(h);this.loadComplete(h)},loadError:function(h){a.Message.Set("File failed to load: "+h,null,2000);a.Hub.signal.Post(["file load error",h])},Styles:function(j,k){var h=this.StyleString(j);if(h===""){k=a.Callback(k);k()}else{var i=document.createElement("style");i.type="text/css";this.head=g(this.head);this.head.appendChild(i);if(i.styleSheet&&typeof(i.styleSheet.cssText)!=="undefined"){i.styleSheet.cssText=h}else{i.appendChild(document.createTextNode(h))}k=this.timer.create.call(this,k,i)}return k},StyleString:function(m){if(typeof(m)==="string"){return m}var j="",n,l;for(n in m){if(m.hasOwnProperty(n)){if(typeof m[n]==="string"){j+=n+" {"+m[n]+"}\n"}else{if(m[n] instanceof Array){for(var k=0;k<m[n].length;k++){l={};l[n]=m[n][k];j+=this.StyleString(l)}}else{if(n.substr(0,6)==="@media"){j+=n+" {"+this.StyleString(m[n])+"}\n"}else{if(m[n]!=null){l=[];for(var h in m[n]){if(m[n].hasOwnProperty(h)){if(m[n][h]!=null){l[l.length]=h+": "+m[n][h]}}}j+=n+" {"+l.join("; ")+"}\n"}}}}}}return j}}})("MathJax");MathJax.HTML={Element:function(c,e,d){var f=document.createElement(c);if(e){if(e.style){var b=e.style;e.style={};for(var g in b){if(b.hasOwnProperty(g)){e.style[g.replace(/-([a-z])/g,this.ucMatch)]=b[g]}}}MathJax.Hub.Insert(f,e)}if(d){for(var a=0;a<d.length;a++){if(d[a] instanceof Array){f.appendChild(this.Element(d[a][0],d[a][1],d[a][2]))}else{f.appendChild(document.createTextNode(d[a]))}}}return f},ucMatch:function(a,b){return b.toUpperCase()},addElement:function(b,a,d,c){return b.appendChild(this.Element(a,d,c))},TextNode:function(a){return document.createTextNode(a)},addText:function(a,b){return a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScriptBug){a.text=b}else{while(a.firstChild){a.removeChild(a.firstChild)}this.addText(a,b)}},getScript:function(a){var b=(a.text===""?a.innerHTML:a.text);return b.replace(/^\s+/,"").replace(/\s+$/,"")},Cookie:{prefix:"mjx",expires:365,Set:function(a,d){var c=[];if(d){for(var f in d){if(d.hasOwnProperty(f)){c.push(f+":"+d[f].toString().replace(/&/g,"&&"))}}}var b=this.prefix+"."+a+"="+escape(c.join("&;"));if(this.expires){var e=new Date();e.setDate(e.getDate()+this.expires);b+="; expires="+e.toGMTString()}document.cookie=b+"; path=/"},Get:function(c,h){if(!h){h={}}var g=new RegExp("(?:^|;\\s*)"+this.prefix+"\\."+c+"=([^;]*)(?:;|$)");var b=g.exec(document.cookie);if(b&&b[1]!==""){var e=unescape(b[1]).split("&;");for(var d=0,a=e.length;d<a;d++){b=e[d].match(/([^:]+):(.*)/);var f=b[2].replace(/&&/g,"&");if(f==="true"){f=true}else{if(f==="false"){f=false}else{if(f.match(/^-?(\d+(\.\d+)?|\.\d+)$/)){f=parseFloat(f)}}}h[b[1]]=f}}return h}}};MathJax.Message={ready:false,log:[{}],current:null,textNodeBug:(navigator.vendor==="Apple Computer, Inc."&&typeof navigator.vendorSub==="undefined")||(window.hasOwnProperty&&window.hasOwnProperty("konqueror")),styles:{"#MathJax_Message":{position:"fixed",left:"1px",bottom:"2px","background-color":"#E6E6E6",border:"1px solid #959595",margin:"0px",padding:"2px 8px","z-index":"102",color:"black","font-size":"80%",width:"auto","white-space":"nowrap"},"#MathJax_MSIE_Frame":{position:"absolute",top:0,left:0,width:"0px","z-index":101,border:"0px",margin:"0px",padding:"0px"}},browsers:{MSIE:function(a){MathJax.Hub.config.styles["#MathJax_Message"].position="absolute";MathJax.Message.quirks=(document.compatMode==="BackCompat")},Chrome:function(a){MathJax.Hub.config.styles["#MathJax_Message"].bottom="1.5em";MathJax.Hub.config.styles["#MathJax_Message"].left="1em"}},Init:function(a){if(a){this.ready=true}if(!document.body||!this.ready){return false}if(this.div&&this.div.parentNode==null){this.div=document.getElementById("MathJax_Message");if(this.div){this.text=this.div.firstChild}}if(!this.div){var b=document.body;if(MathJax.Hub.Browser.isMSIE){b=this.frame=this.addDiv(document.body);b.removeAttribute("id");b.style.position="absolute";b.style.border=b.style.margin=b.style.padding="0px";b.style.zIndex="101";b.style.height="0px";b=this.addDiv(b);b.id="MathJax_MSIE_Frame";window.attachEvent("onscroll",this.MoveFrame);window.attachEvent("onresize",this.MoveFrame);this.MoveFrame()}this.div=this.addDiv(b);this.div.style.display="none";this.text=this.div.appendChild(document.createTextNode(""))}return true},addDiv:function(a){var b=document.createElement("div");b.id="MathJax_Message";if(a.firstChild){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return b},MoveFrame:function(){var a=(MathJax.Message.quirks?document.body:document.documentElement);var b=MathJax.Message.frame;b.style.left=a.scrollLeft+"px";b.style.top=a.scrollTop+"px";b.style.width=a.clientWidth+"px";b=b.firstChild;b.style.height=a.clientHeight+"px"},filterText:function(a,b){if(MathJax.Hub.config.messageStyle==="simple"){if(a.match(/^Loading /)){if(!this.loading){this.loading="Loading "}a=this.loading;this.loading+="."}else{if(a.match(/^Processing /)){if(!this.processing){this.processing="Processing "}a=this.processing;this.processing+="."}else{if(a.match(/^Typesetting /)){if(!this.typesetting){this.typesetting="Typesetting "}a=this.typesetting;this.typesetting+="."}}}}return a},Set:function(b,c,a){if(this.timer){clearTimeout(this.timer);delete this.timeout}if(c==null){c=this.log.length;this.log[c]={}}this.log[c].text=b;this.log[c].filteredText=b=this.filterText(b,c);if(typeof(this.log[c].next)==="undefined"){this.log[c].next=this.current;if(this.current!=null){this.log[this.current].prev=c}this.current=c}if(this.current===c&&MathJax.Hub.config.messageStyle!=="none"){if(this.Init()){if(this.textNodeBug){this.div.innerHTML=b}else{this.text.nodeValue=b}this.div.style.display="";if(this.status){window.status="";delete this.status}}else{window.status=b;this.status=true}}if(a){setTimeout(MathJax.Callback(["Clear",this,c]),a)}else{if(a==0){this.Clear(c,0)}}return c},Clear:function(b,a){if(this.log[b].prev!=null){this.log[this.log[b].prev].next=this.log[b].next}if(this.log[b].next!=null){this.log[this.log[b].next].prev=this.log[b].prev}if(this.current===b){this.current=this.log[b].next;if(this.text){if(this.div.parentNode==null){this.Init()}if(this.current==null){if(this.timer){clearTimeout(this.timer);delete this.timer}if(a==null){a=600}if(a===0){this.Remove()}else{this.timer=setTimeout(MathJax.Callback(["Remove",this]),a)}}else{if(MathJax.Hub.config.messageStyle!=="none"){if(this.textNodeBug){this.div.innerHTML=this.log[this.current].filteredText}else{this.text.nodeValue=this.log[this.current].filteredText}}}if(this.status){window.status="";delete this.status}}else{if(this.status){window.status=(this.current==null?"":this.log[this.current].text)}}}delete this.log[b].next;delete this.log[b].prev;delete this.log[b].filteredText},Remove:function(){this.text.nodeValue="";this.div.style.display="none"},File:function(b){var a=MathJax.Ajax.config.root;if(b.substr(0,a.length)===a){b="[MathJax]"+b.substr(a.length)}return this.Set("Loading "+b)},Log:function(){var b=[];for(var c=1,a=this.log.length;c<a;c++){b[c]=this.log[c].text}return b.join("\n")}};MathJax.Hub={config:{root:"",config:[],styleSheets:[],styles:{".MathJax_Preview":{color:"#888"}},jax:[],extensions:[],preJax:null,postJax:null,displayAlign:"center",displayIndent:"0",preRemoveClass:"MathJax_Preview",showProcessingMessages:true,messageStyle:"normal",delayStartupUntil:"none",skipStartupTypeset:false,"v1.0-compatible":true,elements:[],positionToHash:true,showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:"None",CTRL:false,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:"200%",renderer:"",font:"Auto",context:"MathJax",mpContext:false,mpMouse:false,texHints:true},errorSettings:{message:["[Math Processing Error]"],style:{color:"#CC0000","font-style":"italic"}}},preProcessors:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processUpdateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal("Hub"),Config:function(a){this.Insert(this.config,a);if(this.config.Augment){this.Augment(this.config.Augment)}},CombineConfig:function(c,f){var b=this.config,g,e;c=c.split(/\./);for(var d=0,a=c.length;d<a;d++){g=c[d];if(!b[g]){b[g]={}}e=b;b=b[g]}e[g]=b=this.Insert(f,b);return b},Register:{PreProcessor:function(){MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},StartupHook:function(){return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},LoadHook:function(){return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},getAllJax:function(e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.push(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].MathJax.elementJax.mimeType===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxByInputType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].type&&b[d].type.replace(/ *;(.|\s)*/,"")===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxFor:function(a){if(typeof(a)==="string"){a=document.getElementById(a)}if(a&&a.MathJax){return a.MathJax.elementJax}if(a&&a.isMathJax){while(a&&!a.jaxID){a=a.parentNode}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return null},isJax:function(a){if(typeof(a)==="string"){a=document.getElementById(a)}if(a&&a.isMathJax){return 1}if(a&&a.tagName!=null&&a.tagName.toLowerCase()==="script"){if(a.MathJax){return(a.MathJax.state===MathJax.ElementJax.STATE.PROCESSED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ *;(.|\s)*/,"")]){return -1}}return 0},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this.config.menuSettings.renderer="";var b="[MathJax]/jax/output/"+d+"/config.js";return MathJax.Ajax.Require(b,["setRenderer",this,d,c])}else{this.config.menuSettings.renderer=d;if(c==null){c="jax/mml"}var a=this.outputJax;if(a[c]&&a[c].length){if(d!==a[c][0].id){a[c].unshift(MathJax.OutputJax[d]);return this.signal.Post(["Renderer Selected",d])}}return null}},Queue:function(){return this.queue.Push.apply(this.queue,arguments)},Typeset:function(e,f){if(!MathJax.isReady){return null}var c=this.elementCallback(e,f);var b=MathJax.Callback.Queue();for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){b.Push(["PreProcess",this,c.elements[d]],["Process",this,c.elements[d]])}}return b.Push(c.callback)},PreProcess:function(e,f){var c=this.elementCallback(e,f);var b=MathJax.Callback.Queue();for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){b.Push(["Post",this.signal,["Begin PreProcess",c.elements[d]]],(arguments.callee.disabled?{}:["Execute",this.preProcessors,c.elements[d]]),["Post",this.signal,["End PreProcess",c.elements[d]]])}}return b.Push(c.callback)},Process:function(a,b){return this.takeAction("Process",a,b)},Update:function(a,b){return this.takeAction("Update",a,b)},Reprocess:function(a,b){return this.takeAction("Reprocess",a,b)},Rerender:function(a,b){return this.takeAction("Rerender",a,b)},takeAction:function(g,e,h){var c=this.elementCallback(e,h);var b=MathJax.Callback.Queue(["Clear",this.signal]);for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){var f={scripts:[],start:new Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};b.Push(["Post",this.signal,["Begin "+g,c.elements[d]]],["Post",this.signal,["Begin Math",c.elements[d],g]],["prepareScripts",this,g,c.elements[d],f],["Post",this.signal,["Begin Math Input",c.elements[d],g]],["processInput",this,f],["Post",this.signal,["End Math Input",c.elements[d],g]],["prepareOutput",this,f,"preProcess"],["Post",this.signal,["Begin Math Output",c.elements[d],g]],["processOutput",this,f],["Post",this.signal,["End Math Output",c.elements[d],g]],["prepareOutput",this,f,"postProcess"],["Post",this.signal,["End Math",c.elements[d],g]],["Post",this.signal,["End "+g,c.elements[d]]])}}return b.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b){var a=b.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}else{b.MathJax.state=a.STATE.PROCESSED}},Reprocess:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}},Rerender:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.OUTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){return}var b=this.elementScripts(e);var f=MathJax.ElementJax.STATE;for(var d=0,a=b.length;d<a;d++){var c=b[d];if(c.type&&this.inputJax[c.type.replace(/ *;(.|\n)*/,"")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.elementJax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elementJax)}if(c.MathJax.state!==f.PENDING){this.scriptAction[h](c)}}if(!c.MathJax){c.MathJax={state:f.PENDING}}if(c.MathJax.state!==f.PROCESSED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.checked){return}var b=this.config,f=a.previousSibling;if(f&&f.nodeName==="#text"){var d,e,c=a.nextSibling;if(c&&c.nodeName!=="#text"){c=null}if(b.preJax){if(typeof(b.preJax)==="string"){b.preJax=new RegExp(b.preJax+"$")}d=f.nodeValue.match(b.preJax)}if(b.postJax&&c){if(typeof(b.postJax)==="string"){b.postJax=new RegExp("^"+b.postJax)}e=c.nodeValue.match(b.postJax)}if(d&&(!b.postJax||e)){f.nodeValue=f.nodeValue.replace(b.preJax,(d.length>1?d[1]:""));f=null}if(e&&(!b.preJax||d)){c.nodeValue=c.nodeValue.replace(b.postJax,(e.length>1?e[1]:""))}if(f&&!f.nodeValue.match(/\S/)){f=f.previousSibling}}if(b.preRemoveClass&&f&&f.className===b.preRemoveClass){a.MathJax.preview=f}a.MathJax.checked=1},processInput:function(a){var b,i=MathJax.ElementJax.STATE;var h,e,d=a.scripts.length;try{while(a.i<d){h=a.scripts[a.i];if(!h){a.i++;continue}e=h.previousSibling;if(e&&e.className==="MathJax_Error"){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state===i.PROCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state===i.UPDATE){this.checkScriptSiblings(h);var g=h.type.replace(/ *;(.|\s)*/,"");b=this.inputJax[g].Process(h,a);if(typeof b==="function"){if(b.called){continue}this.RestartAfter(b)}b.Attach(h,this.inputJax[g].id);this.saveScript(b,a,h,i)}else{if(h.MathJax.state===i.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var c=new Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.length){a.start=c;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){return this.processError(f,a,"Input")}if(a.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set("Processing math: 100%",0)}a.start=new Date().getTime();a.i=a.j=0;return null},saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.MathJax.state=c.UPDATE;throw Error("No output jax registered for "+a.mimeType)}a.outputJax=this.outputJax[a.mimeType][0].id;if(!d.jax[a.outputJax]){if(d.jaxIDs.length===0){d.jax[a.outputJax]=d.scripts}else{if(d.jaxIDs.length===1){d.jax[d.jaxIDs[0]]=d.scripts.slice(0,d.i)}d.jax[a.outputJax]=[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.length>1){d.jax[a.outputJax].push(b)}b.MathJax.state=c.OUTPUT},prepareOutput:function(c,f){while(c.j<c.jaxIDs.length){var e=c.jaxIDs[c.j],d=MathJax.OutputJax[e];if(d[f]){try{var a=d[f](c);if(typeof a==="function"){if(a.called){continue}this.RestartAfter(a)}}catch(b){if(!b.restart){MathJax.Message.Set("Error preparing "+e+" output ("+f+")",null,600);MathJax.Hub.lastPrepError=b;c.j++}return MathJax.Callback.After(["prepareOutput",this,c,f],b.restart)}}c.j++}return null},processOutput:function(h){var b,g=MathJax.ElementJax.STATE,d,a=h.scripts.length;try{while(h.i<a){d=h.scripts[h.i];if(!d||!d.MathJax){h.i++;continue}var c=d.MathJax.elementJax;if(!c){h.i++;continue}b=MathJax.OutputJax[c.outputJax].Process(d,h);d.MathJax.state=g.PROCESSED;h.i++;if(d.MathJax.preview){d.MathJax.preview.innerHTML=""}this.signal.Post(["New Math",c.inputID]);var e=new Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.length){h.start=e;this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}}}catch(f){return this.processError(f,h,"Output")}if(h.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set("Typesetting math: 100%",0);MathJax.Message.Clear(0)}h.i=h.j=0;return null},processMessage:function(d,b){var a=Math.floor(d.i/(d.scripts.length)*100);var c=(b==="Output"?"Typesetting":"Processing");if(this.config.showProcessingMessages){MathJax.Message.Set(c+" math: "+a+"%",0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.errorSettings.message){throw b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);return MathJax.Callback.After(["process"+a,this,c],b.restart)},formatError:function(a,c){var b=MathJax.HTML.Element("span",{className:"MathJax_Error"},this.config.errorSettings.message);b.jaxID="Error";if(MathJax.Extension.MathEvents){b.oncontextmenu=MathJax.Extension.MathEvents.Event.Menu;b.onmousedown=MathJax.Extension.MathEvents.Event.Mousedown}else{MathJax.Ajax.Require("[MathJax]/extensions/MathEvents.js",function(){b.oncontextmenu=MathJax.Extension.MathEvents.Event.Menu;b.onmousedown=MathJax.Extension.MathEvents.Event.Mousedown})}a.parentNode.insertBefore(b,a);if(a.MathJax.preview){a.MathJax.preview.innerHTML=""}this.lastError=c},RestartAfter:function(a){throw this.Insert(Error("restart"),{restart:MathJax.Callback(a)})},elementCallback:function(c,f){if(f==null&&(c instanceof Array||typeof c==="function")){try{MathJax.Callback(c);f=c;c=null}catch(d){}}if(c==null){c=this.config.elements||[]}if(!(c instanceof Array)){c=[c]}c=[].concat(c);for(var b=0,a=c.length;b<a;b++){if(typeof(c[b])==="string"){c[b]=document.getElementById(c[b])}}if(c.length==0){c.push(document.body)}if(!f){f={}}return{elements:c,callback:f}},elementScripts:function(a){if(typeof(a)==="string"){a=document.getElementById(a)}if(a==null){a=document.body}if(a.tagName!=null&&a.tagName.toLowerCase()==="script"){return[a]}return a.getElementsByTagName("script")},Insert:function(c,a){for(var b in a){if(a.hasOwnProperty(b)){if(typeof a[b]==="object"&&!(a[b] instanceof Array)&&(typeof c[b]==="object"||typeof c[b]==="function")){this.Insert(c[b],a[b])}else{c[b]=a[b]}}}return c}};MathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(MathJax.Hub.config.styles,{".MathJax_Error":MathJax.Hub.config.errorSettings.style});MathJax.Extension={};MathJax.Hub.Configured=MathJax.Callback({});MathJax.Hub.Startup={script:"",queue:MathJax.Callback.Queue(),signal:MathJax.Callback.Signal("Startup"),params:{},Config:function(){this.queue.Push(["Post",this.signal,"Begin Config"]);var b=MathJax.HTML.Cookie.Get("user");if(b.URL||b.Config){if(confirm("MathJax has found a user-configuration cookie that includes code to be run.  Do you want to run it?\n\n(You should press Cancel unless you set up the cookie yourself.)")){if(b.URL){this.queue.Push(["Require",MathJax.Ajax,b.URL])}if(b.Config){this.queue.Push(new Function(b.Config))}}else{MathJax.HTML.Cookie.Set("user",{})}}if(this.params.config){var d=this.params.config.split(/,/);for(var c=0,a=d.length;c<a;c++){if(!d[c].match(/\.js$/)){d[c]+=".js"}this.queue.Push(["Require",MathJax.Ajax,this.URL("config",d[c])])}}if(this.script.match(/\S/)){this.queue.Push(this.script+";\n1;")}this.queue.Push(["ConfigDelay",this],["ConfigBlocks",this],["ConfigDefault",this],[function(e){return e.loadArray(MathJax.Hub.config.config,"config",null,true)},this],["Post",this.signal,"End Config"])},ConfigDelay:function(){var a=this.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;if(a==="onload"){return this.onload}if(a==="configured"){return MathJax.Hub.Configured}return a},ConfigBlocks:function(){var c=document.getElementsByTagName("script");var f=null,b=MathJax.Callback.Queue();for(var d=0,a=c.length;d<a;d++){var e=String(c[d].type).replace(/ /g,"");if(e.match(/^text\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=true/)){c[d].type+=";executed=true";f=b.Push(c[d].innerHTML+";\n1;")}}return f},ConfigDefault:function(){var a=MathJax.Hub.config;if(a["v1.0-compatible"]&&(a.jax||[]).length===0&&!this.params.config&&(a.config||[]).length===0){return MathJax.Ajax.Require(this.URL("extensions","v1.0-warning.js"))}},Cookie:function(){return this.queue.Push(["Post",this.signal,"Begin Cookie"],["Get",MathJax.HTML.Cookie,"menu",MathJax.Hub.config.menuSettings],[function(d){var f=d.menuSettings.renderer,b=d.jax;if(f){var c="output/"+f;b.sort();for(var e=0,a=b.length;e<a;e++){if(b[e].substr(0,7)==="output/"){break}}if(e==a-1){b.pop()}else{while(e<a){if(b[e]===c){b.splice(e,1);break}e++}}b.unshift(c)}},MathJax.Hub.config],["Post",this.signal,"End Cookie"])},Styles:function(){return this.queue.Push(["Post",this.signal,"Begin Styles"],["loadArray",this,MathJax.Hub.config.styleSheets,"config"],["Styles",MathJax.Ajax,MathJax.Hub.config.styles],["Post",this.signal,"End Styles"])},Jax:function(){var e=MathJax.Hub.config,c=MathJax.Hub.outputJax;for(var f=0,b=e.jax.length,d=0;f<b;f++){if(e.jax[f].substr(0,7)==="output/"){c.order[e.jax[f].substr(7)]=d;d++}}var a=MathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin Jax"],["loadArray",this,e.jax,"jax","config.js"],["Post",this.signal,"End Jax"])},Extensions:function(){var a=MathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin Extensions"],["loadArray",this,MathJax.Hub.config.extensions,"extensions"],["Post",this.signal,"End Extensions"])},Message:function(){MathJax.Message.Init(true)},Menu:function(){var b=MathJax.Hub.config.menuSettings,a=MathJax.Hub.outputJax,d;for(var c in a){if(a.hasOwnProperty(c)){if(a[c].length){d=a[c];break}}}if(d&&d.length){if(b.renderer&&b.renderer!==d[0].id){d.unshift(MathJax.OutputJax[b.renderer])}b.renderer=d[0].id}},Hash:function(){if(MathJax.Hub.config.positionToHash&&document.location.hash){setTimeout("document.location = document.location.hash",1)}},MenuZoom:function(){if(!MathJax.Extension.MathMenu){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/extensions/MathMenu.js",{}]),1000)}if(!MathJax.Extension.MathZoom){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/extensions/MathZoom.js",{}]),2000)}},onLoad:function(a){var b=this.onload=MathJax.Callback(function(){MathJax.Hub.Startup.signal.Post("onLoad")});if(document.body&&document.readyState&&document.readyState!=="loading"){return[b]}if(window.addEventListener){window.addEventListener("load",b,false);if(!this.params.noDOMContentEvent){window.addEventListener("DOMContentLoaded",b,false)}}else{if(window.attachEvent){window.attachEvent("onload",b)}else{window.onload=b}}return b},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return function(){}}return this.queue.Push(["Post",this.signal,"Begin Typeset"],["Typeset",MathJax.Hub,a,b],["Post",this.signal,"End Typeset"])},URL:function(b,a){if(!a.match(/^([a-z]+:\/\/|\[|\/)/)){a="[MathJax]/"+b+"/"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b instanceof Array)){b=[b]}if(b.length){var h=MathJax.Callback.Queue(),j={},e;for(var g=0,d=b.length;g<d;g++){e=this.URL(f,b[g]);if(c){e+="/"+c}if(a){h.Push(["Require",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j))}}return h.Push({})}}return null}};(function(d){var b=window[d],e="["+d+"]";var c=b.Hub,a=b.Ajax,f=b.Callback;var g=MathJax.Object.Subclass({JAXFILE:"jax.js",require:null,config:{},Init:function(i,h){if(arguments.length===0){return this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var i=this.constructor,h={};if(k!=null){for(var l in k){if(k.hasOwnProperty(l)){if(typeof k[l]==="function"){i.protoFunction(l,k[l])}else{h[l]=k[l]}}}if(k.toString!==i.prototype.toString&&k.toString!=={}.toString){i.protoFunction("toString",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,j);return this},Translate:function(h,i){throw Error(this.directory+"/"+this.JAXFILE+" failed to define the Translate() method")},Register:function(h){},Config:function(){this.config=c.CombineConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.config.Augment)}},Startup:function(){},loadComplete:function(i){if(i==="config.js"){return a.loadComplete(this.directory+"/"+i)}else{var h=f.Queue();h.Push(c.Register.StartupHook("End Config",{}),["Post",c.Startup.signal,this.id+" Jax Config"],["Config",this],["Post",c.Startup.signal,this.id+" Jax Require"],[function(j){return MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(j,k){return MathJax.Hub.Startup.loadArray(j.extensions,"extensions/"+k)},this.config||{},this.id],["Post",c.Startup.signal,this.id+" Jax Startup"],["Startup",this],["Post",c.Startup.signal,this.id+" Jax Ready"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=j.preTranslate;j.Process=j.Translate;j.postProcess=j.postTranslate},this.constructor.prototype])}return h.Push(["loadComplete",a,this.directory+"/"+i])}}},{id:"Jax",version:"2.0",directory:e+"/jax",extensionDir:e+"/extensions"});b.InputJax=g.Subclass({elementJax:"mml",copyTranslate:true,Process:function(l,q){var j=f.Queue(),o;var k=this.elementJax;if(!(k instanceof Array)){k=[k]}for(var n=0,h=k.length;n<h;n++){o=b.ElementJax.directory+"/"+k[n]+"/"+this.JAXFILE;if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(o);j.Push(a.Require(o))}o=this.directory+"/"+this.JAXFILE;var p=j.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=function(){if(!p.called){return p}throw Error(o+" failed to load properly")}}k=c.outputJax["jax/"+k[0]];if(k){j.Push(a.Require(k[0].directory+"/"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var i=h.SourceElement();return(h.originalText!==b.HTML.getScript(i))},Register:function(h){if(!c.inputJax){c.inputJax={}}c.inputJax[h]=this}},{id:"InputJax",version:"2.0",directory:g.directory+"/input",extensionDir:g.extensionDir});b.OutputJax=g.Subclass({copyTranslate:true,preProcess:function(j){var i,h=this.directory+"/"+this.JAXFILE;this.constructor.prototype.preProcess=function(k){if(!i.called){return i}throw Error(h+" failed to load properly")};i=a.Require(h);return i},Register:function(i){var h=c.outputJax;if(!h[i]){h[i]=[]}if(h[i].length&&(this.id===c.config.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(b.ElementJax.directory+"/"+(i.split(/\//)[1])+"/"+this.JAXFILE)},Remove:function(h){}},{id:"OutputJax",version:"2.0",directory:g.directory+"/output",extensionDir:g.extensionDir,fontDir:e+(b.isPacked?"":"/..")+"/fonts",imageDir:e+(b.isPacked?"":"/..")+"/images"});b.ElementJax=g.Subclass({Init:function(i,h){return this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null,originalText:"",mimeType:"",Text:function(i,j){var h=this.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=this.STATE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.UPDATE;return c.Reprocess(h,i)},Update:function(h){return this.Rerender(h)},Rerender:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.OUTPUT;return c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post(["Remove Math",this.inputID]);this.Detach()}},needsUpdate:function(){return b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){return document.getElementById(this.inputID)},Attach:function(i,j){var h=i.MathJax.elementJax;if(i.MathJax.state===this.STATE.UPDATE){h.Clone(this)}else{h=i.MathJax.elementJax=this;if(i.id){this.inputID=i.id}else{i.id=this.inputID=b.ElementJax.GetID();this.newID=1}}h.originalText=b.HTML.getScript(i);h.inputJax=j;if(h.root){h.root.inputID=h.inputID}return h},Detach:function(){var h=this.SourceElement();if(!h){return}try{delete h.MathJax}catch(i){h.MathJax=null}if(this.newID){h.id=""}},Clone:function(h){var i;for(i in this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])==="undefined"&&i!=="newID"){delete this[i]}}for(i in h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])==="undefined"||(this[i]!==h[i]&&i!=="inputID")){this[i]=h[i]}}}},{id:"ElementJax",version:"2.0",directory:g.directory+"/element",extensionDir:g.extensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:function(){this.ID++;return"MathJax-Element-"+this.ID},Subclass:function(){var h=g.Subclass.apply(this,arguments);h.loadComplete=this.prototype.loadComplete;return h}});b.ElementJax.prototype.STATE=b.ElementJax.STATE;b.OutputJax.Error={id:"Error",version:"2.0",config:{},ContextMenu:function(){return b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Event,arguments)},Mousedown:function(){return b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.Event,arguments)},getJaxFromMath:function(){return{inputJax:"Error",outputJax:"Error",originalText:"Math Processing Error"}}};b.InputJax.Error={id:"Error",version:"2.0",config:{},sourceMenuTitle:"Error Message"}})("MathJax");(function(l){var f=window[l];if(!f){f=window[l]={}}var c=f.Hub;var q=c.Startup;var u=c.config;var e=document.getElementsByTagName("head")[0];if(!e){e=document.childNodes[0]}var b=(document.documentElement||document).getElementsByTagName("script");var d=new RegExp("(^|/)"+l+"\\.js(\\?.*)?$");for(var o=b.length-1;o>=0;o--){if(b[o].src.match(d)){q.script=b[o].innerHTML;if(RegExp.$2){var r=RegExp.$2.substr(1).split(/\&/);for(var n=0,h=r.length;n<h;n++){var k=r[n].match(/(.*)=(.*)/);if(k){q.params[unescape(k[1])]=unescape(k[2])}}}u.root=b[o].src.replace(/(^|\/)[^\/]*(\?.*)?$/,"");break}}f.Ajax.config=u;var a={isMac:(navigator.platform.substr(0,3)==="Mac"),isPC:(navigator.platform.substr(0,3)==="Win"),isMSIE:(window.ActiveXObject!=null&&window.clipboardData!=null),isFirefox:(window.netscape!=null&&document.ATTRIBUTE_NODE!=null&&!window.opera),isSafari:(navigator.userAgent.match(/ (Apple)?WebKit\//)!=null&&(!window.chrome||window.chrome.loadTimes==null)),isChrome:(window.chrome!=null&&window.chrome.loadTimes!=null),isOpera:(window.opera!=null&&window.opera.version!=null),isKonqueror:(window.hasOwnProperty&&window.hasOwnProperty("konqueror")&&navigator.vendor=="KDE"),versionAtLeast:function(x){var w=(this.version).split(".");x=(new String(x)).split(".");for(var y=0,j=x.length;y<j;y++){if(w[y]!=x[y]){return parseInt(w[y]||"0")>=parseInt(x[y])}}return true},Select:function(j){var i=j[c.Browser];if(i){return i(c.Browser)}return null}};var g=navigator.userAgent.replace(/^Mozilla\/(\d+\.)+\d+ /,"").replace(/[a-z][-a-z0-9._: ]+\/\d+[^ ]*-[^ ]*\.([a-z][a-z])?\d+ /i,"").replace(/Gentoo |Ubuntu\/(\d+\.)*\d+ (\([^)]*\) )?/,"");c.Browser=c.Insert(c.Insert(new String("Unknown"),{version:"0.0"}),a);for(var t in a){if(a.hasOwnProperty(t)){if(a[t]&&t.substr(0,2)==="is"){t=t.slice(2);if(t==="Mac"||t==="PC"){continue}c.Browser=c.Insert(new String(t),a);var p=new RegExp(".*(Version)/((?:\\d+\\.)+\\d+)|.*("+t+")"+(t=="MSIE"?" ":"/")+"((?:\\d+\\.)*\\d+)|(?:^|\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\d+\\.)+\\d+)");var s=p.exec(g)||["","","","unknown","0.0"];c.Browser.name=(s[1]=="Version"?t:(s[3]||s[5]));c.Browser.version=s[2]||s[4]||s[6];break}}}c.Browser.Select({Safari:function(j){var i=parseInt((String(j.version).split("."))[0]);if(i>85){j.webkit=j.version}if(i>=534){j.version="5.1"}else{if(i>=533){j.version="5.0"}else{if(i>=526){j.version="4.0"}else{if(i>=525){j.version="3.1"}else{if(i>500){j.version="3.0"}else{if(i>400){j.version="2.0"}else{if(i>85){j.version="1.0"}}}}}}}j.isMobile=(navigator.appVersion.match(/Mobile/i)!=null);j.noContextMenu=j.isMobile},Firefox:function(j){if((j.version==="0.0"||navigator.userAgent.match(/Firefox/)==null)&&navigator.product==="Gecko"){var m=navigator.userAgent.match(/[\/ ]rv:(\d+\.\d.*?)[\) ]/);if(m){j.version=m[1]}else{var i=(navigator.buildID||navigator.productSub||"0").substr(0,8);if(i>="20111220"){j.version="9.0"}else{if(i>="20111120"){j.version="8.0"}else{if(i>="20110927"){j.version="7.0"}else{if(i>="20110816"){j.version="6.0"}else{if(i>="20110621"){j.version="5.0"}else{if(i>="20110320"){j.version="4.0"}else{if(i>="20100121"){j.version="3.6"}else{if(i>="20090630"){j.version="3.5"}else{if(i>="20080617"){j.version="3.0"}else{if(i>="20061024"){j.version="2.0"}}}}}}}}}}}}j.isMobile=(navigator.appVersion.match(/Android/i)!=null||navigator.userAgent.match(/ Fennec\//)!=null)},Opera:function(i){i.version=opera.version()},MSIE:function(j){j.isIE9=!!(document.documentMode&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=!j.isIE9||document.documentMode<9;var v=false;try{new ActiveXObject("MathPlayer.Factory.1");v=true}catch(m){}if(v&&!q.params.NoMathPlayer){var i=document.createElement("object");i.id="mathplayer";i.classid="clsid:32F66A20-7614-11D4-BD11-00104BD3F987";document.getElementsByTagName("head")[0].appendChild(i);document.namespaces.add("m","http://www.w3.org/1998/Math/MathML");j.hasMathPlayer=true;if(document.readyState&&(document.readyState==="loading"||document.readyState==="interactive")){document.write('<?import namespace="m" implementation="#MathPlayer">');j.mpImported=true}}}});c.Browser.Select(MathJax.Message.browsers);c.queue=f.Callback.Queue();c.queue.Push(["Post",q.signal,"Begin"],["Config",q],["Cookie",q],["Styles",q],["Message",q],function(){var i=f.Callback.Queue(q.Jax(),q.Extensions());return i.Push({})},["Menu",q],q.onLoad(),function(){MathJax.isReady=true},["Typeset",q],["Hash",q],["MenuZoom",q],["Post",q.signal,"End"])})("MathJax")}};

_application/x-javascriptO*bplist00‘bcX$versionX$objectsY$archiverT$top Ü†Ø"()012HIJKLMNOPQRSTUVWX\]U$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _Thttp://wiki.udacity.com/moin_static1/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^GÎ\‚»”3456?WNS.keysZNS.objectsÄ®789:;<=>Ä	Ä
ÄÄÄÄÄÄ®@ABCDEFGÄÄÄÄÄÄÄÄVServer_Transfer-EncodingZConnection\Content-TypeTDate]Last-Modified_Content-EncodingTVaryUnginxXIdentityUclose_application/x-javascript_Tue, 29 May 2012 19:43:03 GMT_Tue, 17 Apr 2012 17:34:22 GMTTgzip_Accept-Encoding“*+YZ_NSMutableDictionary£Y[/\NSDictionary¡∏“*+^__NSHTTPURLResponse£`a/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—de_WebResourceResponseÄ    # - 2 7 V \ w z ~ Å Ñ á ã é ï ò õ û ° § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º √ œ ◊ Ÿ € ›49DMSV\enpwäåïóôõùü°£•Æ∞≤¥∂∏∫ºæ≈Ÿ‰Òˆ"+1Llåë£®æ¬œ“◊ÎÔ#&<             f              >_Thttp://wiki.udacity.com/moin_static1/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML‘Om;//
// MoinMoin commonly used JavaScript functions
//

// We keep here the state of the search box
searchIsDisabled = false;

function searchChange(e) {
    // Update search buttons status according to search box content.
    // Ignore empty or whitespace search term.
    var value = e.value.replace(/\s+/, '');
    if (value == '' || searchIsDisabled) { 
        searchSetDisabled(true);
    } else {
        searchSetDisabled(false);
    }
}

function searchSetDisabled(flag) {
    // Enable or disable search
    document.getElementById('fullsearch').disabled = flag;
    document.getElementById('titlesearch').disabled = flag;
}

function searchFocus(e) {
    // Update search input content on focus
    if (e.value == search_hint) {
        e.value = '';
        e.className = '';
        searchIsDisabled = false;
    }
}

function searchBlur(e) {
    // Update search input content on blur
    if (e.value == '') {
        e.value = search_hint;
        e.className = 'disabled';
        searchIsDisabled = true;
    }
}

function actionsMenuInit(title) {
    // Initialize action menu
    for (i = 0; i < document.forms.length; i++) {
        var form = document.forms[i];
        if (form.className == 'actionsmenu') {
            // Check if this form needs update
            var div = form.getElementsByTagName('div')[0];
            var label = div.getElementsByTagName('label')[0];
            if (label) {
                // This is the first time: remove label and do buton.
                div.removeChild(label);
                var dobutton = div.getElementsByTagName('input')[0];
                div.removeChild(dobutton);
                // and add menu title
                var select = div.getElementsByTagName('select')[0];
                var item = document.createElement('option');
                item.appendChild(document.createTextNode(title));
                item.value = 'show';
                select.insertBefore(item, select.options[0]);
                select.selectedIndex = 0;
            }
        }
    }
}

// use this instead of assigning to window.onload directly:
function addLoadEvent(func) {
    // alert("addLoadEvent " + func)
    var oldonload = window.onload;
    if (typeof window.onload != 'function') {
        window.onload = func;
    } else {
        window.onload = function() {
            oldonload();
            func();
        }
    }
}

// copy from fckeditor browser check code (fckeditor.js:298, function : FCKeditor_IsCompatibleBrowser)
function can_use_gui_editor() {
    var sAgent = navigator.userAgent.toLowerCase() ;

    // Internet Explorer 5.5+
    if ( /*@cc_on!@*/false && sAgent.indexOf("mac") == -1 )
    {
        var sBrowserVersion = navigator.appVersion.match(/MSIE (.\..)/)[1] ;
        return ( sBrowserVersion >= 5.5 ) ;
    }

    // Gecko (Opera 9 tries to behave like Gecko at this point).
    if ( navigator.product == "Gecko" && navigator.productSub >= 20030210 && !( typeof(opera) == 'object' && opera.postError ) )
        return true ;

    // Opera 9.50+
    if ( window.opera && window.opera.version && parseFloat( window.opera.version() ) >= 9.5 )
        return true ;

    // Adobe AIR
    // Checked before Safari because AIR have the WebKit rich text editor
    // features from Safari 3.0.4, but the version reported is 420.
    if ( sAgent.indexOf( ' adobeair/' ) != -1 )
        return ( sAgent.match( / adobeair\/(\d+)/ )[1] >= 1 ) ; // Build must be at least v1

    // Safari 3+
    if ( sAgent.indexOf( ' applewebkit/' ) != -1 )
        return ( sAgent.match( / applewebkit\/(\d+)/ )[1] >= 522 ) ;    // Build must be at least 522 (v3)

    return false ;

}


function update_edit_links() {
    // Update editlink according if if the browser is compatible
    if (can_use_gui_editor() == false){
        //alert("update_edit_links: can't use gui editor");
        return;
    }
    var editlinks = document.getElementsByName("editlink");
    for (i = 0; i < editlinks.length; i++) {
        var link = editlinks[i];
        href = link.href.replace('editor=textonly','editor=guipossible');
        link.href = href;
        //alert("update_edit_links: modified to guipossible");
    }
}


function add_gui_editor_links() {
    // Add gui editor link after the text editor link
    
    // If the variable is not set or browser is not compatible, exit
    try {gui_editor_link_href}
    catch (e) {
        //alert("add_gui_editor_links: gui_editor_link_href not here");
        return
    }
    if (can_use_gui_editor() == false){
        //alert("add_gui_editor_links: can't use gui_editor");
        return;
    }
    var all = document.getElementsByName('texteditlink');
    for (i = 0; i < all.length; i++) {
        var textEditorLink = all[i];
        // Create a list item with a link
        var guiEditorLink = document.createElement('a');
        guiEditorLink.href = gui_editor_link_href;
        var text = document.createTextNode(gui_editor_link_text);
        guiEditorLink.appendChild(text);
        var listItem = document.createElement('li')
        listItem.appendChild(guiEditorLink);
        // Insert in the editbar
        var editbar = textEditorLink.parentNode.parentNode
        var nextListItem = textEditorLink.parentNode.nextSibling;
        editbar.insertBefore(listItem, nextListItem);
        //alert("add_gui_editor_links: added gui editor link");
    }
}
 

function show_switch2gui() {
    // Show switch to gui editor link if the browser is compatible
    if (can_use_gui_editor() == false) return;
    
    var switch2gui = document.getElementById('switch2gui')
    if (switch2gui) {
        switch2gui.style.display = 'inline';
    }
}

// for long documents with many comments this is expensive to calculate,
// thus we keep it here:
comments = null;

function toggleComments() {
    // Toggle visibility of every tag with class "comment"
    for (i = 0; i < comments.length; i++){
        el = comments[i];
        if ( el.style.display != 'none' ) {
            el.style.display = 'none';
        } else {
            el.style.display = '';
        }
    }
}

function show_toggleComments() {
    // Show edit bar item for toggling inline comments on/off only if inline comments exist on the page
    comments = getElementsByClassName('comment', null, document);
    if (comments.length > 0) {
        var buttons = getElementsByClassName('toggleCommentsButton', null, document);
        for (i = 0; i < buttons.length; i++){
            el = buttons[i];
            el.style.display = '';
        }
    }
}


function load() {
    // Do not name this "onload", it does not work with IE :-)
    // TODO: create separate onload for each type of view and set the
    // correct function name in the html. 
    // e.g <body onlod='editor_onload()'>

    // login focus
    if (document.forms['loginform']) {
        document.forms['loginform'].elements['name'].focus();
    }
    
    // Page view stuff
    update_edit_links();
    add_gui_editor_links();
    
    // Editor stuff
    show_switch2gui();

    // Enable menu item "ToggleComments" if inline comments exist
    show_toggleComments();
 
    // data browser widget
    dbw_hide_buttons();
}


function before_unload(evt) {
    // TODO: Better to set this in the editor html, as it does not make
    // sense elsehwere.
    // confirmleaving is available when editing
    try {return confirmleaving();}
    catch (e) {}
}

// Initialize after loading the page
addLoadEvent(load)

// Catch before unloading the page
window.onbeforeunload = before_unload

function dbw_update_search(dbw_id)
{
    var table = document.getElementById(dbw_id+'table');
    var cell;
    var shown;
    var i
    var cols = table.rows[0].cells.length;
    var filter = new Array();
    var dofilter = new Array();
    var form = document.forms[dbw_id+'form'];

    for (i = 0; i < cols; i++) {
        dofilter[i] = false;
        if (form[dbw_id+'filter'+i]) {
            dofilter[i] = true;
            filter[i] = form[dbw_id+'filter'+i].value;
            if (filter[i] == '[all]')
                dofilter[i] = false;
            if (filter[i] == '[empty]')
                filter[i] = '';
        }
    }

    for (i = 1; i < table.rows.length; i++) {
        var show = true;
        for (col = 0; col < cols; col++) {
            if (!dofilter[col])
                continue;

            cell = table.rows[i].cells[col];

            if (filter[col] == '[notempty]') {
                if (cell.abbr == '') {
                    show = false;
                    break;
                }
            } else if (filter[col] != cell.abbr) {
                show = false;
                break;
            }
        }
        if (show)
            table.rows[i].style.display = '';
        else
            table.rows[i].style.display = 'none';
    }
}

function dbw_hide_buttons() {
    var form;
    var elem;
    var name;

    for (var fidx = 0; fidx < document.forms.length; fidx++) {
        form = document.forms[fidx];
        for (var eidx = 0; eidx < form.elements.length; eidx++) {
            elem = form.elements[eidx];
            name = elem.name;
            if (name) {
                if (name.indexOf('dbw.') >= 0 && name.substr(-7) == '.submit')
                    elem.style.display = 'none';
            }
        }
    }
}

/*  getElementsByClassName
    Developed by Robert Nyman, http://www.robertnyman.com
    Code/licensing: http://code.google.com/p/getelementsbyclassname/ (MIT license)
    Version: 1.0.1
*/  
var getElementsByClassName = function (className, tag, elm){
    if (document.getElementsByClassName) {
        getElementsByClassName = function (className, tag, elm) {
            elm = elm || document;
            var elements = elm.getElementsByClassName(className),
                nodeName = (tag)? new RegExp("\\b" + tag + "\\b", "i") : null,
                returnElements = [],
                current;
            for(var i=0, il=elements.length; i<il; i+=1){
                current = elements[i];
                if(!nodeName || nodeName.test(current.nodeName)) {
                    returnElements.push(current);
                }
            }
            return returnElements;
        };
    }
    else if (document.evaluate) {
        getElementsByClassName = function (className, tag, elm) {
            tag = tag || "*";
            elm = elm || document;
            var classes = className.split(" "),
                classesToCheck = "",
                xhtmlNamespace = "http://www.w3.org/1999/xhtml",
                namespaceResolver = (document.documentElement.namespaceURI === xhtmlNamespace)? xhtmlNamespace : null,
                returnElements = [],
                elements,
                node;
            for(var j=0, jl=classes.length; j<jl; j+=1){
                classesToCheck += "[contains(concat(' ', @class, ' '), ' " + classes[j] + " ')]";
            }
            try {
                elements = document.evaluate(".//" + tag + classesToCheck, elm, namespaceResolver, 0, null);
            }
            catch (e) {
                elements = document.evaluate(".//" + tag + classesToCheck, elm, null, 0, null);
            }
            while ((node = elements.iterateNext())) {
                returnElements.push(node);
            }
            return returnElements;
        };
    }
    else {
        getElementsByClassName = function (className, tag, elm) {
            tag = tag || "*";
            elm = elm || document;
            var classes = className.split(" "),
                classesToCheck = [],
                elements = (tag === "*" && elm.all)? elm.all : elm.getElementsByTagName(tag),
                current,
                returnElements = [],
                match;
            for(var k=0, kl=classes.length; k<kl; k+=1){
                classesToCheck.push(new RegExp("(^|\\s)" + classes[k] + "(\\s|$)"));
            }
            for(var l=0, ll=elements.length; l<ll; l+=1){
                current = elements[l];
                match = false;
                for(var m=0, ml=classesToCheck.length; m<ml; m+=1){
                    match = classesToCheck[m].test(current.className);
                    if (!match) {
                        break;
                    }
                }
                if (match) {
                    returnElements.push(current);
                }
            }
            return returnElements;
        };
    }
    return getElementsByClassName(className, tag, elm);
};


// ===========================================================================
// The following functions are part of scroll edit textarea on double-click
//
// This code is public domain (or primarily public domain).
// Do whatever you want with it.  In particular, you may release it under
// GPL 2.0 or incorporate it into projects that use GPL 2.0.
// -- Radomir Dopieralski and Roger D. Haase

// Debugging helpers
//  save debugging state in cookie - presence of a cookie means debugging mode is on
cookiePath = '/';
function autoScrollSetCookie (){
    document.cookie = 'autoscrolldebug=on; path=' + cookiePath + '; ';
}
function autoScrollDeleteCookie (){
    var cookie_date = new Date ( );  // current date & time
    cookie_date.setTime ( cookie_date.getTime() - 1 );
    document.cookie = 'autoscrolldebug=; expires=' + cookie_date.toGMTString() + '; path=' + cookiePath + '; ';
}
function autoScrollGetCookie (){
    var results = document.cookie.match ( '(^|;) ?' + "autoscrolldebug" + '=([^;]*)(;|$)' );
    if ( results ) {
        return ( unescape ( results[2] ) );
    } else {
        return null;
    }
}
// turn on debugging mode by previewing, saving or reading a page with "auto scroll debug on" within an h1 header
// = My Page auto scroll debug on =
// once set on,debug mode says on for current session or until turned off with
// = My Page auto scroll debug off =
autoScrollDebugOn = 0;
// this function executed on page load
function turnDebugOnOrOff () {
    // set global variable for use by cookie functions
    cookiePath = document.getElementsByName('edit_on_doubleclick')[0].content;
    var hOnes = document.getElementsByTagName('H1');
    for (var i = 0; i < hOnes.length; ++i) {
        var header = hOnes[i].textContent || hOnes[i].innerText;
        if (header.match ('auto scroll debug on')) {
            autoScrollSetCookie ();
        }
        if (header.match ('auto scroll debug off')) {
            autoScrollDeleteCookie ();
        }
    }
    if (autoScrollGetCookie ()) {
        autoScrollDebugOn = 1;
    } else {
        autoScrollDebugOn = 0;
    }
}

// functions used for testing - mouseover tooltip with tagName and scroll line number
function doMouseOver(e) {
    var targ = getNode(e);
    targ.title = 'tagName='+targ.tagName+'  line='+targ.scrollLine;
}
function doMouseOut(e) {
    var targ = getNode(e);
    targ.removeAttribute('title');
}
// add leading zeros to hours, minutes, seconds, milliseconds
function leadingZeros (nbr,count) { 
    var strNbr = nbr + '';
    while (strNbr.length < count) {
        strNbr = "0" + strNbr; 
    }
    return strNbr;
}
// format hours, minutes, seconds, and ms
function formatTime (t) {
    var sHours = leadingZeros (t.getHours(), 2);
    var sMinutes = leadingZeros (t.getMinutes (), 2);
    var sSeconds = leadingZeros (t.getSeconds (), 2);
    var sMilliseconds = leadingZeros (t.getMilliseconds (), 3);
    return sHours + ':' + sMinutes + ':' + sSeconds + ':' + sMilliseconds;
}

// this variable is available as easy way to display trace info
autoDebugTrace = '';
function showStartStopTimes (startTime) {
    // display a message with start and end times at top of page
    var endTime = new Date();
    var tStart ='auto scroll debug on -- Initialization start H:M:S:ms=' + formatTime (startTime);
    var tEnd = '  end H:M:S:ms=' + formatTime (endTime);
    var timingMsg = document.createElement ('P');
    timingMsg.innerHTML = tStart + tEnd;
    timingMsg.style. color = "red";
    var contentDiv;
    if (document.getElementById ('preview')) {
        contentDiv = document.getElementById ('preview');
    } else {
        contentDiv = document.getElementById ('content');
    }
    contentDiv.insertBefore (timingMsg, contentDiv.firstChild);
    // display trace info is there is any
    if (autoDebugTrace) {
        alert(autoDebugTrace);
    }
}
// end of debugging helpers

// this scrolls the textarea after a doubleclick - jumpLine is scroll-to line
function scrollTextarea(jumpLine) {
    var txtBox = document.getElementById('editor-textarea');
    scroll(0,0); 
    if (txtBox) {
        // Calculate the cursor position - IE supports innerText, not textContent
        var textLines = txtBox.textContent || txtBox.innerText;
        textLines = textLines.match(/(.*(\r\n|\r|\n))/g);
        var scrolledText = '';
        for (var i = 0; i < textLines.length && i < jumpLine; ++i) {
            scrolledText += textLines[i];
        }
        txtBox.focus();
        if (txtBox.setSelectionRange) {
            // Standard-compliant browsers
            // Move the cursor
            txtBox.setSelectionRange(scrolledText.length, scrolledText.length);
            // Calculate how far to scroll, by putting the text that is to be
            // above the fold in a DIV, and checking the DIV's height.
            var scrollPre = document.createElement('pre');
            txtBox.parentNode.appendChild(scrollPre);
            var style = window.getComputedStyle(txtBox, '');
            scrollPre.style.lineHeight = style.lineHeight;
            scrollPre.style.fontFamily = style.fontFamily;
            scrollPre.style.fontSize = style.fontSize;
            scrollPre.style.padding = 0;
            scrollPre.style.letterSpacing = style.letterSpacing;
            // Different browsers call this value differently:
            try { scrollPre.style.whiteSpace = "-moz-pre-wrap"; } catch(e) {}
            try { scrollPre.style.whiteSpace = "-o-pre-wrap"; } catch(e) {}
            try { scrollPre.style.whiteSpace = "-pre-wrap"; } catch(e) {}
            try { scrollPre.style.whiteSpace = "pre-wrap"; } catch(e) {}
            scrollPre.textContent = scrolledText;
            txtBox.scrollTop = scrollPre.scrollHeight-100;
            scrollPre.parentNode.removeChild(scrollPre);
        } else if (txtBox.createTextRange) {
            // Microsoft Internet Explorer
            // We don't need to scroll, it will do it automatically, just move
            // the cursor.
            var range = txtBox.createTextRange();
            range.collapse(true);
            range.moveEnd('character', scrolledText.length);
            range.moveStart('character', scrolledText.length);
            range.select();
            txtBox.__column = 1;
        }
    } 
}

// stop event bubbling
function stopBubbling(e) {
    if (e.stopPropagation) {
        e.stopPropagation(); 
    }
    e.cancelBubble = true;
}

// stop bubbling and return event node 
function getNode(e) {
    // window.event and e.srcElement are IE
    var e = e || window.event;
    var targ = e.target || e.srcElement;
    if (targ.nodeType == 3) {
        // workaround safari
        targ = targ.parentNode;
    }
    stopBubbling(e);
    return targ;
}

// add action=edit and scrollLine to document.location
function doActionEdit(e) {
    var targ = getNode(e);
    // MoinMoin counts starting with 1, scrollTextarea starts with 0
    document.location.search = '?action=edit&line='+(targ.scrollLine-1);
}

// scroll textarea on this page
function doTextareaScroll(e) {
    var targ = getNode(e);
    scrollTextarea(targ.scrollLine-1);
}

// This is the function that registers double clicks.
// isPreview is true if the current page is an edit draft preview
function setCallback(node, line, isPreview) {
    if (node.scrollLine) {
        // this node already processed
        return;
    } else {
        node.scrollLine = line;
        if(window.addEventListener){ 
            if (isPreview) {
                node.addEventListener('dblclick',doTextareaScroll,false);
            } else {
                node.addEventListener('dblclick',doActionEdit,false);
            }
            if (autoScrollDebugOn) {
                node.addEventListener('mouseover', doMouseOver,false); 
                node.addEventListener('mouseout',doMouseOut,false); 
            }
        } else {
            // IE
            if (isPreview) {
                node.attachEvent('ondblclick',doTextareaScroll);
            } else {
                node.attachEvent('ondblclick',doActionEdit);
            }
            if (autoScrollDebugOn) {
                node.attachEvent('onmouseover', doMouseOver,false); 
                node.attachEvent('onmouseout',doMouseOut,false);
            }
        }
    }
}

// walk part of DOM and add doubleclick function to all nodes with tagNames
function walkDom (someNode, lineNbr, isPreview, nextId, topId) {

    //~ // handle special cases of paragraph on line after <<TOC>> and ---- (horizontal rule)
    //~ //   But this effects paragraphs on multiple lines: doubleclick goes to paragraph bottom rather than top.
    //~ //   Seems best to live with TOC and HR problem and wait for Moin2.
    //~ var next1, next2, next3;
    //~ var nextNbr = 'line-' + (lineNbr-0+1);
    //~ if (someNode.parentNode.tagName == 'P' && someNode.parentNode.scrollLine) {
        //~ next1 = someNode.nextSibling;
        //~ if (next1 && next1.tagName != 'SPAN') {
            //~ next2 = next1.nextSibling;
        //~ }
        //~ if (next2 && next2.id == nextNbr) {
            //~ alert('Correcting scrollLine='+lineNbr);
            //~ someNode.parentNode.scrollLine = lineNbr;
            //~ return;
        //~ }
    //~ }
    
    var ie8LoopCounter = 0;
    var doChild = true;
    while (!(someNode.id == nextId) && !(someNode.id == topId)) {
        // workaround IE8 bug:  http://moinmo.in/MoinMoinBugs/FormInsideTableCausesIE8ScriptLoop
        ie8LoopCounter += 1;
        if (ie8LoopCounter > 10000) {
            return;
        }
        
        // add children, add siblings, add parent
        if (doChild && someNode.firstChild) {
            someNode = someNode.firstChild;
        } else {
            doChild = true;
            if (someNode.nextSibling) {
                someNode = someNode.nextSibling;
            } else {
                if (someNode.parentNode.nextSibling) {
                someNode = someNode.parentNode.nextSibling;
                } else {
                    doChild = false;
                    someNode = someNode.parentNode.parentNode;
                }
            }
        }
        if (doChild && someNode.tagName && !(someNode.id == nextId) && !(someNode.id == topId)) {
            setCallback(someNode, lineNbr, isPreview);
        }
    }
}

// run during page load when user may edit current page OR is viewing draft preview
function setSpanTags(isPreview) {
    var startTime = new Date();
    // find all the SPAN tags with an ID beginning with "line-"
    var spanTags = document.getElementsByTagName('span');
    var marks = [];
    for (var i = 0; i < spanTags.length; ++i) {
        if (spanTags[i].id && spanTags[i].id.substring(0, 5) == 'line-') {
            marks.push(spanTags[i]);
        }
    }
    var top = document.getElementById('content');
    var bottom = document.getElementById('bottom');
    // add expected stopping point to end of array for convenience
    if (bottom) {
        marks.push(bottom); 
    } else {
        if (autoScrollDebugOn) {
            alert("auto scroll debug 1: document.getElementById('bottom') failed");
        }
    }
    var skipTo = -1; 
    // loop through span tags and apply double-click events to appropriate node(s) 
    for (i = 0; i < marks.length-1; ++i) {
        var mark = marks[i];
        // skip span tags generated by embedded parsers
        if (i > skipTo) {
            // split the ID into parts: looks like "line-22" or "line-22-1"
            var lineParts = mark.id.split('-');
            var line = lineParts[1];
            if (lineParts.length == 3) {
                // have found output from embedded parser
                // find next span id that looks like "line-n" and the "line-n-n" just before it
                var j = i - 0;
                while (lineParts.length == 3) {
                    j++;
                    lineParts = marks[j].id.split('-');
                }
                // determine how many lines, starting line number, and add double-click events
                var nbrParsedLines = j - i;
                var parsedLineNbr = lineParts[1] - nbrParsedLines - 1;
                for (var k = 0; k < nbrParsedLines; ++k) { 
                    if (marks[i+k] && marks[i+k+1] && marks[i+k+1].id) {
                        walkDom (marks[i+k], parsedLineNbr+k, isPreview, marks[i+k+1].id, top.id);
                    } else {
                        if (autoScrollDebugOn) {
                            alert('auto scroll debug 2: skipping walkDom, i=' + i + ' k=' + k + ' marks[i].id=' + marks[i].id);
                        }
                    }
                }
                // done with embedded parser lines, tell main loop to skip these
                skipTo = j - 1; 
            } else {
                // walk part of DOM and apply doubleclick function to every node with a tagname
                if (marks[i+1] && marks[i+1].id) {
                    walkDom (mark, line, isPreview, marks[i+1].id, top.id);
                } else {
                    if (autoScrollDebugOn) {
                        alert('auto scroll debug 3: skipping walkDom, i=' + i + ' marks[i].id=' + marks[i].id);
                    }
                }
            }
        }
    }
    if (autoScrollDebugOn && document.getElementById('content'))  {
        for (i = 0; i < marks.length-1; ++i) {
            marks[i].innerHTML = ' ' + marks[i].id + ' ';
            marks[i].style. color = "red";
        }
        showStartStopTimes(startTime);
    }
}

// test to see if this user has selected or defaulted to edit_on_doubleclick AND
// whether we are viewing a page, editing a page, or previewing an edit draft 
function scrollTextareaInit() {
    // look for meta tag -- is edit_on_doubleclick present?
    if (!document.getElementsByName('edit_on_doubleclick').length) {
        return;
    }
    turnDebugOnOrOff ();
    // are we viewing a page - both gui and text editors will have button named button_save
    if (!document.getElementsByName('button_save').length) {
        setSpanTags(0);
        return;
    }
    // we are in editor -- is there a line number specified in URL?
    var lineMatch = document.location.search.match(/line=(\d*)/);
    if (lineMatch) {
        scrollTextarea(lineMatch[1]);
        return;
    } 
    if (document.getElementById('preview')) {
        // is an editor preview
        setSpanTags(1);
    }
}

// The DOM ready check for Internet Explorer
function ieScrollCheck() {
	try {
		// If IE is used, use the trick by Diego Perini
		document.documentElement.doScroll("left");
	} catch( error ) {
		setTimeout( ieScrollCheck, 1 );
		return;
	}
    scrollTextareaInit();
}

// run auto scroll init As Soon As Possible -- prior to onload for modern browsers
function runASAP() {
    if (document.addEventListener) { 
        // Firefox 3.6, Chrome 4.0.249.89, Safari for Windows 4.04, Opera 10.5beta, and maybe older versions
        // schedule func to be run when DOM complete, usually before last image loaded
        document.addEventListener("DOMContentLoaded", scrollTextareaInit, false);
    } else {
        if (document.documentElement.doScroll && window == window.top) {
            // IE 5-8 and not using frames
            ieScrollCheck();
        } else {
            addLoadEvent(scrollTextareaInit);
        }
    }
}
// auto scroll initialization starts here
runASAP();

_application/x-javascriptObplist00‘bcX$versionX$objectsY$archiverT$top Ü†Ø"()012HIJKLMNOPQRSTUVWX\]U$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _8http://wiki.udacity.com/moin_static1/common/js/common.js“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^Gˆ≥´»”3456?WNS.keysZNS.objectsÄ®789:;<=>Ä	Ä
ÄÄÄÄÄÄ®@ABCDEFGÄÄÄÄÄÄÄÄVServer_Transfer-EncodingZConnection\Content-TypeTDate]Last-Modified_Content-EncodingTVaryUnginxXIdentityUclose_application/x-javascript_Tue, 29 May 2012 19:43:03 GMT_Tue, 17 Apr 2012 17:34:23 GMTTgzip_Accept-Encoding“*+YZ_NSMutableDictionary£Y[/\NSDictionarym;“*+^__NSHTTPURLResponse£`a/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—de_WebResourceResponseÄ    # - 2 7 V \ w z ~ Å Ñ á ã é ï ò õ û ° § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º √ œ ◊ Ÿ € ›(17:@IRT[cnpy{}ÅÉÖáâíîñòöúû†¢©Ω»’⁄Ë˚ 0Ppuáå¢¶≥∂ªœ”Áı
              f              "_8http://wiki.udacity.com/moin_static1/common/js/common.js‘O-Ñ/* @import url(strawberry.css); */
/* @import url(chocolate.css); */
/* @import url(plum.css); */

html { 
    padding: 0;
    margin: 0;
    font-size: 90%;
    font-family: Arial;
    font-style: normal;
    height: 100%;
    background: #fff;
    color: #000;
}
body {
    padding: 0;
    margin: 0;
    min-height: 100%;
    position: relative;
}
* html body { height: 100%; }



a img { border: none }
a { color: #176e9b; text-decoration: none }
a:visited { color: #176e9b; }

a.interwiki, a.http, a.www,a.file, a.mailto, a.https,  a.external { color: #48f }
a.interwiki:visited, a.http:visited, a.https:visited, a.file:visited, a.mailto:visited, a.www:visited, a.external:visited { color: #65f }
a.nonexistent { 
    color: #f02;
    font-weight: normal;
}
a.nonexistent:hover {
    color: #f02;
    text-decoration: underline;
}
a:hover { color: #176e9b; text-decoration: underline }


a.mailto:before {
    content: url(img/moin-email.png); 
    margin: 0 0.2em;
    vertical-align: middle;
    white-space: nowrap;
}


li p { margin: 0 }

textarea, select, input {
    border: 1px solid #999;
    vertical-align: middle;
    line-height: 1.2;
    font-size: 100%;
}
textarea {
    display: block;
    width: 99%;
}

form.search {
    float: right;
    margin: 0.5em;
    color: #666;
}
form.search p {
    margin: 0;
    font-size: 8pt;
}
form.search p input#titlesearch {
    color: white;
    background: #2494CD;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2494CD', endColorstr='#1A72A1'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#2494CD), to(#1A72A1)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #2494CD,  #1A72A1); /* for firefox 3.6+ */ 
    border: 1px solid #176e9b;
}
form.search p input#titlesearch:hover {
    background: #1A72A1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1A72A1', endColorstr='#2494CD'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#1A72A1), to(#2494CD)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #1A72A1,  #2494CD); /* for firefox 3.6+ */ 
}
form.search p input#fullsearch {
    color: white;
    background: #2494CD;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2494CD', endColorstr='#1A72A1'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#2494CD), to(#1A72A1)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #2494CD,  #1A72A1); /* for firefox 3.6+ */ 
    border: 1px solid #176e9b;
}
form.search p input#fullsearch:hover {
    background: #1A72A1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1A72A1', endColorstr='#2494CD'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#1A72A1), to(#2494CD)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #1A72A1,  #2494CD); /* for firefox 3.6+ */ 
}
div.gotobar p {
    margin: 0;
    padding: 0.5em;
}


div.editbar {
    float: right;
    margin: 1em 0.25em
    color: #999;
}
div.editbar a {
    font-size: 10pt;
    color: #176e9b;
    margin: 0 0.25em;
}
div.editbar a.edit:before {
    content: url(img/edit.png);
    color: #176e9b;
    vertical-align: middle;
    margin: 0 0.15em 0 0.5em;
}
div.editbar a:hover {
    color: #176e9b;
    text-decoration: underline;
}

a.logo {
    display: block;
    margin: 0.25em;
    float: left;
    clear: none;
    font-size: 200%;
    text-decoration: none;
    color: #444;
    line-height: 1.2;
    font-family: Impact, Haettenschweiler, fantasy;
    letter-spacing: 0.025em;
}
a.logo img {
    vertical-align: middle;
    margin: 0 0.25em 0 0;
}


ul#username {
    display: block;
    float: right;
    clear: right;
    list-style: none;
    margin: 0 0.5em;
}
ul#username li {
    list-style: none;
    display: inline;
    margin: 0 0 0 1em;
    font-size: 90%;
}
ul#username li a#login {
    color:#176e9b;
}

ul.gotobar {
    margin: 0;
    padding: 0 0.5em;
    display: block;
    border-top: 1px solid #e7e7e7;
    border-bottom: 1px solid #e7e7e7;
    color: #e7e7e7;
    background: #e7e7e7;
    clear: both;
    overflow: hidden;
}
ul.gotobar li {
    display: block;
    float: left;
    margin: 0.25em 0.25em;
    border: 1px solid #176e9b;
    overflow: hidden;
}
ul.gotobar li a {
    letter-spacing: 0.05em;
    display: block;
    text-decoration: none;
    font-size: 8pt;
    padding: 0.25em 0.75em;
    background: #2494CD;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2494CD', endColorstr='#1A72A1'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#2494CD), to(#1A72A1)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #2494CD,  #1A72A1); /* for firefox 3.6+ */ 
    color: white;
}
ul.gotobar li.current a {
    color: #000;
}
ul.gotobar li.current {
    border: 1px solid #176E9B;
}
ul.gotobar li a:hover {
    color: white;
    background: #1A72A1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1A72A1', endColorstr='#2494CD'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#1A72A1), to(#2494CD)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #1A72A1,  #2494CD); /* for firefox 3.6+ */ 
}
body ul.gotobar li.clear {
    display: block;
    list-style: none;
    clear: both;
    float: none;
    margin: 0;
    padding: 0;
    height: 0;
    overflow: hidden;
    border: none;
    line-height: 1px;
}

div.header h1 {
    color: #176e9b;
    margin: 0;
    padding: 0.5em;
    font-weight: normal;
    font-size: 125%;
    letter-spacing: 0.025em;
}
div.header h1 a.backlink {
    display: none;
    color: white;
}
div.header h1 a.backlink:hover {
    display: none;
    color: white;
    text-decoration: underline;
}

span.pagepath { 
    font-size: 80%; color: #666; 
    font-weight: bold;
}
span.pagepath a { 
    font-weight: normal;
    color: #999;
}

div.wrapper {
    padding: 0.5em;
    margin: 0 0.5em 1.5em 1.5em;
    color: #444;
    position: relative;
    width: 960px;
}

div.content {
    line-height: 1.35;
    position: relative;
}

div.sidebar {
    width: 11.5em;
    position: absolute;
    left: -12.25em;
    top: 0.75em;
    font-size: 90%;
    line-height: 1.3;
    background: #feb;
    border: 1px solid #ea7;
    border-bottom: 1px solid #e83;
    padding: 1px;
    margin: 0;
}
div.sidebar p {
    margin: 0;
}
div.wrapper div.sidebar h1, 
div.wrapper div.sidebar h2, 
div.wrapper div.sidebar h3 { 
    font-size: 100%; 
    margin: 0 0 0.25em 0;
    letter-spacing: 0.05em;
    font-weight: normal;
    color: #852;
    border: 1px solid #ea6;
    background: #fc7;
    padding: 0.25em 0.5em;
    line-height: 1.1;
    font-family: DejaVu Sans, Droid Sans, Verdana, sans-serif;
}
div.sidebar ul { 
    margin: 0;
    list-style: none;
    padding: 0 0 0.25em 0;
}
div.sidebar li {
    list-style: none;
    background: url(img/bullet.png) no-repeat 3px 3px;
    padding: 0 0 0 15px;
}
div.sidebar a { color: #000; }
div.sidebar a:hover { text-decoration: underline }


div.wrapper h1, h2, h3, h4, h5 {
    color: black;
    font-family: Arial;
    font-weight: normal;
    line-height: 1.2;
}
div.wrapper h1 { font-size: 200%; margin: 1em 0 0.5em 0; }
div.wrapper h2 { font-size: 150%; margin: 1em 0 0.5em 0; }
div.wrapper h3 { font-size: 125%; letter-spacing: 0.025em; margin: 1.25em 0 0.75em 0; }
div.wrapper h4 { font-size: 100%; letter-spacing: 0.05em; margin: 1.5em 0 1em 0; }


ul#pagetrail {
    display: block;
    background: #eee;
    border-bottom: 1px solid #fff;
    border-top: 3px solid #bbb;
    margin: 0;
    padding: 0;
}
ul#pagetrail li {
    display: inline;
    list-style: none;
    margin-left: 0.75em;
}
ul#pagetrail li a {
    font-size: 80%;
    color: #666;
}


div.footer {
    position: absolute;
    width: 100%;
    bottom: 0;
    left: 0;
    right: 0;
    color: #ddd;
    text-align: right;
    border-top: 1px solid #ccc;
    padding: 0;
    margin: 0;
}
div.footer span.time {
    display: block;
    text-align: right;
    color: #666;
    font-size: 80%;
    padding: 0.25em 0.5em;
    font-style: italic;
}

div#message, p.status {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    background: #ffa;
    border-bottom: 1px solid #888;
    padding: 0.125em 0.5em;
    margin: 0;
    font-size: 90%;
    color: #000;
    opacity: 0.90;
    z-index: 1000;
}

div.message p { margin: 0 }

#content table { 
    border-collapse: collapse; 
    font-size: 80%; 
    margin: 0.5em auto;
/*  margin: 0.5em;      if you don't like centered tables */
}
#content th, #content td { border: 1px solid #999; padding: 0.25em;  }
#content th { background: #f6f6f6;  }

tt { font-size: 90%; color: #333;
    font-family: "DejaVu Sans Mono", "Lucida Console", monospace; }
div.codearea, pre { 
    border: 1px solid #ddd; 
    background: #f6f6f6; 
    color: #666;
}
div.codearea a.codenumbers { font-size: 70%; float: right; display: block; padding: 0.25em }
div.codearea span.LineNumber { background: #fff; color: #888; border-right: 1px solid #ddd; margin-right: 0.25em; font-weight: bold; 
}
div.codearea pre { padding: 0; border: none; margin: 0; color: #222 }
div.codearea span.ResWord { font-weight: bold }
div.codearea span.ResWord2 { font-weight: bold; color: #f60 }
div.codearea span.ID { font-style: italic }
div.codearea span.Comment { color: #999; font-style: italic }
div.codearea span.Preprc { color: #999; font-weight: bold;  }
div.codearea span.String { color: #f60; font-style: italic }
div.codearea span.Char { color: #f60; font-style: italic; font-weight: bold }
div.codearea span.Number { color: #f60 }
div.codearea span.ConsWord { color: #f60; font-weight: bold }
div.codearea span.Operator { }
div.codearea span.SPChar { font-weight: bold; }
div.codearea span.Special { }
div.codearea span.Error { color: #f60; font-weight: bold; background: #ddd }

pre {
    padding: 0.25em; 
    font-family: "DejaVu Sans Mono", "Lucida Console", monospace;
    font-size: 90%;
    line-height: 1.25;
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
    white-space: -moz-pre-wrap;
    white-space: -pre-wrap;
    white-space: -o-pre-wrap;
    /* end css 3 or browser specific rules */
}

li p, td p, dd p, dt p { margin: 0 }

hr {
	background: transparent;
	color: #fff;
	border: none;
	border-top: 1px solid #ccc;
}

div#preview {

    background: #ffa;
    border: 1px solid #888;
    padding: 0.125em 0.5em;
}

div.warn ul, div.tip ul, div.hint ul, div.info ul, div.err ul,
div.warn p, div.tip p, div.hint p, div.info p, div.err p {
	margin: 0;
}

.diff-added span {
	background: #eee;
	color: #000;
}

.diff-removed span {
	background: #feb;
	color: #000;
}	


strong.highlight {
	background: #feb;
	color: #000;
	font-weight: normal;
}

span.strike {
      text-decoration: line-through;
}
span.u {
      text-decoration: underline;
}


@media print {
    div.sidebar, div.header { display: none }
    div.footer { position: static }
    div.wrapper { padding: 0; border: none }
}

/* from the HelpOnMoinWikiSyntax */
div.comment { 
    color: #444; 
    background: #ddf;
}

div.red { background: #fcc; }
div.green { background: #cfc; }
div.blue { background: #ccf; }

div.solid, div.dashed, div.dotted {
    border: 2px solid #000;
    padding: 0.5em;
}
div.solid { border-style: solid }
div.dashed { border-style: dashed }
div.dotted { border-style: dotted }

div.blink { text-decoration: blink }

table.addcommentform textarea { width: 50em; }
Xtext/cssO˚bplist00‘bcX$versionX$objectsY$archiverT$top Ü†Ø"()012HIJKLMNOPQRSTUVWX\]U$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _7http://wiki.udacity.com/moin_static1/mandarin/style.css“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^G˙ü»”3456?WNS.keysZNS.objectsÄ®789:;<=>Ä	Ä
ÄÄÄÄÄÄ®@ABCDEFGÄÄÄÄÄÄÄÄVServer_Transfer-EncodingZConnection\Content-TypeTDate]Last-Modified_Content-EncodingTVaryUnginxXIdentityUcloseXtext/css_Tue, 29 May 2012 19:43:03 GMT_Tue, 17 Apr 2012 17:34:23 GMTTgzip_Accept-Encoding“*+YZ_NSMutableDictionary£Y[/\NSDictionary-Ñ“*+^__NSHTTPURLResponse£`a/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—de_WebResourceResponseÄ    # - 2 7 V \ w z ~ Å Ñ á ã é ï ò õ û ° § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º √ œ ◊ Ÿ € ›'069?HQSZbmoxz|~ÄÇÑÜàëìïóôõùü°®º«‘ŸÁ˙ˇ=]btyèì†£®º¿‘‚Ù˜             f              _7http://wiki.udacity.com/moin_static1/mandarin/style.css‘ O¥âPNG

   IHDR  P      
∂≤   sBIT|dà   	pHYs    “›~¸   tEXtSoftware Adobe Fireworks CS5.1´HÎ   tEXtCreation Time 4/15/12ãè∂  IDATxúÌ\Mr£8˛:ì}<'s‚)`rªO˜íU“PµS:@{V,Éo‡ú`HˆTππ@ì∏w≥õYË…ñeÉ¡S|U.,Òê ûﬁüÙ0‡Ç¿Ωøøˇ”`{˛d2˘9ôL>Ωøø«UÆΩnäâ®∆ÿ¿@∆9œ,.Y x≤h◊‡ ÿrŒ7ı9Ã«uxÄ[*∏a‚¥—ë“¿ã <PÒÄ±&ôÅn`ﬁ2; €ú∫≠&çøê4‰@rËW@lAó…üÈyû
ÖÔÄ±v⁄T◊4ñnò¨ã¥±TÎi‡9ÔCøó6ÓMw≤lıÓË€x°‚/ ~c’i‡ç ∆›U=ªa≤0ê˙ æX°‰ª&°¯»[Z€ƒ;ˇ
ÒÂı∞‘E<Äsû]c/<°˝ÔéÚˇÜ Y›§e^
€O > ^L`]U8— õòïıWÄJ◊ﬂØ¸FU;#a2ÉÙct?f z˛%4éV.‰õ—¢åÆ‰æOeÃ-
ﬁù£¸øÅÚ]aåΩ,¬BÄŒ,hüîcô*€[;¡'È∏é’€∏™⁄¿Ä‹òBº¸üi‡E$Këû19|G˚ìÅé)Äó42“Këﬁà¥∏ü<O—·Ÿ&˙xe<È⁄f€⁄ˇ… Aˆ‡Ü1V&DÁ⁄—jÁ¿€)⁄f.’ö¡ŒtµAìfÿÄqxæ&∫˘ø	≠øÍÛ‹àâﬂ\3œ`ä5ìã‰î∂ö∆{S8q…9ü~z}l®WQtÆ¨_˝ôv≠Å™»
h#EbÜkÇ16«~ﬁ0∆ÊúÛ(ß=)àwÁ9Á˘[kõz)@…|âŒ—	è;*:ÙCr”‡ºCπìª»‹Ã`û Ùr|CŸÅŸØz`i∏F≈˘¬s¡€{ﬁ‡G—$“w∏a≤%ç˜¥Å}øŸ∂ëﬁ'?◊77Lû<[∂1¡~íwà∑Ãñt´ÅÍﬂGV@+'¨∆ÿÁ‹4vÊt\A(+s‰ clÑΩø˚‡[kBU€∏HzNêêÕ¡«ìﬁÑp— 9îLwìA8Ÿ≥˙‹Ó†‰œ‘˜¿7˚ö&i‡9}õÃ™-Ä'7LVß0⁄g∏aÚ•<»w˘jIìØT¢KÍkÂ,èêsæeåI¡8É&…˜8¡9ü3∆| ∆òcärºÆrqcËõ‘— Y<XÉÑ«g√©"?ïo®˚‚Ü…ó6"‰*‹0Ÿ∏aÚfÌ›Ë{"‹§}~˛?œG¶¸ø•¿ﬂYA„Ê¿∑o1æ•∂hã:F⁄qÅcèT0∆ñå±∏Ñ0∆Få±5c,få=iÁvm	P€ HK8<mî&‡ÜIl™/Œ¯Z9Æ?§YeZµìCnºèº˚–ËHiŒd–˚,u}pŒ◊©WS2√ÏLr›ß)è3Ì¿/jO«%A[j#¶v2Œ˘2Øç+HΩè⁄]Ú&"G+[ôf-@Ô∑ {∑ˆË±V~§¥¨≥Ä‹Tﬂ¥Í≤43âàé™*#ÍØ“\ß„+’Î¥j;ï†œ;¿ºà˛
"ØLE'®m:MOQE†ËÊ}'IŒh.ãa@ˇ∞∆q4˛%º8ºY[V&µ·8√d{Å&ÈTˆI;Wá÷ïÑ'`"˘∞ü-öÑ.@/)Ç[;è≥CSXæÁŒE–(É‡+é”∞&ÙCx8¥>3ÿ«ZRä˝˛ŸfdpŒ7å± w8íY0∫IŒ9_+¥cà1-iÎ(&èt¥ûÄ†~<≥4§†ÃµÚè3˜ﬂ4z=¢µU0€û√ì(º[òÉ,Äx™–kÎùF9À7ã∞ƒ~eíT¨¢ºˆ!‹Oÿ[s∫œ≤*∆å±ëMˇ
«&‰mT˘gÙÿïi[	i‡Ù]≠?n∆˚»ªÔ˝Âõﬁ£wMë©Q'Ljösî˚4e˝{%¨Æ˝
ëczg€∆Ã˜!ºu€~…4ÚôòV|ò¯Íà˜ƒL©#ÀªF´Í}0Ü,ëÃpÍ{xã.Rdÿ√ìÿì{ øCôÑ–âï_]®m¨©ÌÄ?‹0π/€‡% “Œ;h¡£ZL∫+¢µ¿ÜL˜9¶QŸ◊nòdi‡…VS S≈WÎù¡ﬁLıe˘~ì¨Ó√? ŒB*‰J–qåbüO^~§ss›aÖ„®*®Óçëˆ⁄jl†me'®v†âY§ËÔ;o'•∂aoïF¥S˙ﬂÑ‹!∆clÀ9œµ∂diAò¢s“WrNøW°⁄OÊ£IÛÎ6ghÁ¿b|‰Y$rå»Al∂8¡ÁZÜØnòú’Ì4†u»•ùG¡#J0iÑ(≠äÚ!«G∆ÿ&oÕ˝∞KXøG˜+∂~ì∏ÑÆÀdˇ<l!∂˚≥kFöÜ&[∫Ø˙Î„xp(Ä≥BµÙßuSK7©"±ˇÖ629¬.çâÇ–˙ÓÚ7Àh1ƒÃ±∫†(2Ï]qïM&.r⁄‡¬GÒ&%úä5ÏÉ…,ÉpŒ}C]‡ì°~ÉT€8 •ıÕ+`Ù∏Ö˝ñocÿ›pFø_5£’‘w~ÀæÎ“ü≤ÀPÜCæªN’Z£∆$Iì≈îÖ¥]´ÄÍÇµ*ΩäÿíÊ_•|éâ:∆efóƒ8Ê;>7e¶ªFõ°˙?«Á#smõX    IENDÆB`ÇYimage/pngO“bplist00‘^_X$versionX$objectsY$archiverT$top Ü†Ø"()012FGHIJKLMNOPQRSTXYU$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _Ahttp://wiki.udacity.com/moin_static1/common/udacity-wiki-logo.png“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^HjmH»”3456>WNS.keysZNS.objectsÄß789:;<=Ä	Ä
ÄÄÄÄÄß?@ABCDEÄÄÄÄÄÄÄVServer]Accept-RangesZConnection\Content-TypeTDate]Last-Modified^Content-LengthUnginxUbytesUcloseYimage/png_Tue, 29 May 2012 19:43:04 GMT_Tue, 17 Apr 2012 17:34:23 GMTT2228“*+UV_NSMutableDictionary£UW/\NSDictionary¥“*+Z[_NSHTTPURLResponse£\]/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—`a_WebResourceResponseÄ    # - 2 7 T Z u x |  Ç Ö â å ì ñ ô ú ü ¢ § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ ¡ Õ ’ ◊ Ÿ €$/8>AGPY[bjuwÅÉÖáâãçïóôõùü°£™∏√–’„Ú¯˛.NSXnrÇáõü≥¡”÷Ï             b              Ó_Ahttp://wiki.udacity.com/moin_static1/common/udacity-wiki-logo.png’"#$%&'(_WebResourceFrameName_WebResourceTextEncodingNameW_e_1Ou8UUTF-8O 	_œ<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head>

<script type="text/javascript" async="" src="http://www.google-analytics.com/ga.js"></script><script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
 "HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"] },
 tex2jax: { inlineMath: [ ["$%","$%"] ],
            displayMath: [ ["$$","$$"] ],
            processEscapes: true,
            ignoreClass: "tex2jax_ignore|dno"
 },
 TeX: { noUndefined: { attributes: { mathcolor: "red", mathbackground: "#FFEEEE", mathsize: "90%" } } },
 messageStyle: "none"
});
</script>
<script type="text/javascript" src="/moin_static1/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -5px 0 0 0; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>

<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="robots" content="index,nofollow">

<title>CS212 Unit 4 Code - Udacity Wiki</title>
<script type="text/javascript" src="/moin_static1/common/js/common.js"></script>
<script type="text/javascript"><!--
function add_gui_editor_links() {
    // Add gui editor link after the text editor link

    // If the variable is not set or browser is not compatible, exit
    try {gui_editor_link_href}
    catch (e) {
        //alert("add_gui_editor_links: gui_editor_link_href not here");
        return
    }
    if (can_use_gui_editor() == false){
        //alert("add_gui_editor_links: can't use gui_editor");
        return;
    }
    var all = document.getElementsByName('texteditlink');
    for (i = 0; i < all.length; i++) {
        var textEditorLink = all[i];
        // Create a a link
        var guiEditorLink = document.createElement('a');
        guiEditorLink.href = gui_editor_link_href;
        guiEditorLink.className = "edit";
        var text = document.createTextNode(gui_editor_link_text);
        guiEditorLink.appendChild(text);
        // Insert in the editbar
        var editbar = textEditorLink.parentNode
        editbar.insertBefore(guiEditorLink, textEditorLink);
    }
}
--></script>


<link rel="stylesheet" type="text/css" href="/moin_static1/mandarin/style.css">



<link rel="Start" href="/FrontPage">
<link rel="Alternate" title="–í–∏–∫–∏-—Ä–∞–∑–º–µ—Ç–∫–∞" href="/CS212%20Unit%204%20Code?action=raw">
<link rel="Alternate" media="print" title="–í–∏–¥ –¥–ª—è –ø–µ—á–∞—Ç–∏" href="/CS212%20Unit%204%20Code?action=print">
<link rel="Search" href="/FindPage">
<link rel="Index" href="/TitleIndex">
<link rel="Glossary" href="/WordIndex">
<link rel="Help" href="/HelpOnFormatting">
</head>

<body lang="ru" dir="ltr"><div id="MathJax_Message" style="display: none; "></div>
<div class="header"><a class="logo" href="/FrontPage"><img src="/moin_static1/common/udacity-wiki-logo.png" alt="Udacity Wiki Logo"></a>
<form class="search" method="get" action="">
<p>
<input type="hidden" name="action" value="fullsearch">
<input type="hidden" name="context" value="180">
<label for="search">–ò—Å–∫–∞—Ç—å:</label>
<input id="search" type="text" name="value" value="">
<input id="titlesearch" name="titlesearch" type="submit" value="–ü–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º">
<input id="fullsearch" name="fullsearch" type="submit" value="–ü–æ —Ç–µ–∫—Å—Ç—É">
</p>
</form><ul id="username"><li><a href="/CS212%20Unit%204%20Code?action=login&amp;login=1" id="login" rel="nofollow">–í–æ–π—Ç–∏</a></li></ul><ul class="gotobar"><li class="wikilink"><a href="/RecentChanges">RecentChanges</a></li> <li class="wikilink"><a href="/FindPage">FindPage</a></li> <li class="wikilink"><a href="/HelpContents">HelpContents</a></li><li class="clear"></li></ul><div class="editbar"> <a class="password" href="/CS212%20Unit%204%20Code?action=login">Locked</a>  <a class="history" href="/CS212%20Unit%204%20Code?action=info">History</a> <a class="admin" href="/CS212%20Unit%204%20Code?action=PageActions">Actions</a> </div><h1><span id="pagelocation"><a class="backlink" href="/CS212%20Unit%204%20Code?action=fullsearch&amp;value=linkto%3A%22CS212+Unit+4+Code%22&amp;context=180" rel="nofollow" title="–ù–∞–∂–º–∏—Ç–µ —Å—é–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ —ç—Ç–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è">CS212 Unit 4 Code</a></span></h1></div><div class="wrapper"><div class="content" lang="en" dir="ltr">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><span class="anchor" id="line-2"></span><span class="anchor" id="line-3"></span><span class="anchor" id="line-4"></span><span class="anchor" id="line-5"></span><p class="line867"><a class="nonexistent" href="/CSNNN">Back to course page</a> | <a class="nonexistent" href="/CSNNN%20Unit%201">CSNNN Unit 1</a> &lt;- fix the links here and add new | <a class="action" href="/CS212%20Unit%204%20Code?action=print">Print this page</a> | <a class="action" href="/CS212%20Unit%204%20Code?action=CreatePdfDocument">Save as PDF</a> <span class="anchor" id="line-6"></span><span class="anchor" id="line-7"></span></p><p class="line867">
</p><h1 id="Unit_4_Code">Unit 4 Code</h1>
<span class="anchor" id="line-8"></span><p class="line867"></p><div class="table-of-contents"><p class="table-of-contents-heading">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ</p><ol><li>
<a href="#bridge.py">bridge.py</a></li><li>
<a href="#pour.py">pour.py</a></li><li>
<a href="#cannibals.py">cannibals.py</a></li><li>
<a href="#search.py">search.py</a></li></ol></div> <span class="anchor" id="line-9"></span><span class="anchor" id="line-10"></span><p class="line867">
</p><h2 id="bridge.py">1. bridge.py</h2>
<span class="anchor" id="line-11"></span><p class="line862">A description of the bridge and torch problem can be found <a class="http" href="http://en.wikipedia.org/wiki/Bridge_and_torch_problem">here</a>. <span class="anchor" id="line-12"></span><span class="anchor" id="line-13"></span></p><p class="line867"><span class="anchor" id="line-14"></span><span class="anchor" id="line-15"></span><span class="anchor" id="line-16"></span><span class="anchor" id="line-17"></span><span class="anchor" id="line-18"></span><span class="anchor" id="line-19"></span><span class="anchor" id="line-20"></span><span class="anchor" id="line-21"></span><span class="anchor" id="line-22"></span><span class="anchor" id="line-23"></span><span class="anchor" id="line-24"></span><span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span><span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span><span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span><span class="anchor" id="line-31"></span><span class="anchor" id="line-32"></span><span class="anchor" id="line-33"></span><span class="anchor" id="line-34"></span><span class="anchor" id="line-35"></span><span class="anchor" id="line-36"></span><span class="anchor" id="line-37"></span><span class="anchor" id="line-38"></span><span class="anchor" id="line-39"></span><span class="anchor" id="line-40"></span><span class="anchor" id="line-41"></span><span class="anchor" id="line-42"></span><span class="anchor" id="line-43"></span><span class="anchor" id="line-44"></span><span class="anchor" id="line-45"></span><span class="anchor" id="line-46"></span><span class="anchor" id="line-47"></span><span class="anchor" id="line-48"></span><span class="anchor" id="line-49"></span><span class="anchor" id="line-50"></span><span class="anchor" id="line-51"></span><span class="anchor" id="line-52"></span><span class="anchor" id="line-53"></span><span class="anchor" id="line-54"></span><span class="anchor" id="line-55"></span><span class="anchor" id="line-56"></span><span class="anchor" id="line-57"></span><span class="anchor" id="line-58"></span><span class="anchor" id="line-59"></span><span class="anchor" id="line-60"></span><span class="anchor" id="line-61"></span><span class="anchor" id="line-62"></span><span class="anchor" id="line-63"></span><span class="anchor" id="line-64"></span><span class="anchor" id="line-65"></span><span class="anchor" id="line-66"></span><span class="anchor" id="line-67"></span><span class="anchor" id="line-68"></span><span class="anchor" id="line-69"></span><span class="anchor" id="line-70"></span><span class="anchor" id="line-71"></span><span class="anchor" id="line-72"></span><span class="anchor" id="line-73"></span><span class="anchor" id="line-74"></span><span class="anchor" id="line-75"></span><span class="anchor" id="line-76"></span><span class="anchor" id="line-77"></span><span class="anchor" id="line-78"></span><span class="anchor" id="line-79"></span><span class="anchor" id="line-80"></span><span class="anchor" id="line-81"></span><span class="anchor" id="line-82"></span><span class="anchor" id="line-83"></span><span class="anchor" id="line-84"></span><span class="anchor" id="line-85"></span><span class="anchor" id="line-86"></span><span class="anchor" id="line-87"></span><span class="anchor" id="line-88"></span><span class="anchor" id="line-89"></span><span class="anchor" id="line-90"></span><span class="anchor" id="line-91"></span><span class="anchor" id="line-92"></span><span class="anchor" id="line-93"></span><span class="anchor" id="line-94"></span><span class="anchor" id="line-95"></span><span class="anchor" id="line-96"></span><span class="anchor" id="line-97"></span><span class="anchor" id="line-98"></span><span class="anchor" id="line-99"></span><span class="anchor" id="line-100"></span><span class="anchor" id="line-101"></span><span class="anchor" id="line-102"></span><span class="anchor" id="line-103"></span><span class="anchor" id="line-104"></span><span class="anchor" id="line-105"></span><span class="anchor" id="line-106"></span><span class="anchor" id="line-107"></span><span class="anchor" id="line-108"></span><span class="anchor" id="line-109"></span><span class="anchor" id="line-110"></span><span class="anchor" id="line-111"></span><span class="anchor" id="line-112"></span><span class="anchor" id="line-113"></span><span class="anchor" id="line-114"></span><span class="anchor" id="line-115"></span><span class="anchor" id="line-116"></span><span class="anchor" id="line-117"></span><span class="anchor" id="line-118"></span><span class="anchor" id="line-119"></span><span class="anchor" id="line-120"></span><span class="anchor" id="line-121"></span><span class="anchor" id="line-122"></span><span class="anchor" id="line-123"></span><span class="anchor" id="line-124"></span><span class="anchor" id="line-125"></span><span class="anchor" id="line-126"></span><span class="anchor" id="line-127"></span><span class="anchor" id="line-128"></span><span class="anchor" id="line-129"></span><span class="anchor" id="line-130"></span><span class="anchor" id="line-131"></span><span class="anchor" id="line-132"></span><span class="anchor" id="line-133"></span><span class="anchor" id="line-134"></span><span class="anchor" id="line-135"></span><span class="anchor" id="line-136"></span><span class="anchor" id="line-137"></span><span class="anchor" id="line-138"></span><span class="anchor" id="line-139"></span><span class="anchor" id="line-140"></span><span class="anchor" id="line-141"></span><span class="anchor" id="line-142"></span><span class="anchor" id="line-143"></span><span class="anchor" id="line-144"></span><span class="anchor" id="line-145"></span><span class="anchor" id="line-146"></span><span class="anchor" id="line-147"></span><span class="anchor" id="line-148"></span><span class="anchor" id="line-149"></span><span class="anchor" id="line-150"></span><span class="anchor" id="line-151"></span><span class="anchor" id="line-152"></span><span class="anchor" id="line-153"></span><span class="anchor" id="line-154"></span><span class="anchor" id="line-155"></span><span class="anchor" id="line-156"></span><span class="anchor" id="line-157"></span><span class="anchor" id="line-158"></span><span class="anchor" id="line-159"></span><span class="anchor" id="line-160"></span><span class="anchor" id="line-161"></span><span class="anchor" id="line-162"></span><span class="anchor" id="line-163"></span><span class="anchor" id="line-164"></span><span class="anchor" id="line-165"></span><span class="anchor" id="line-166"></span><span class="anchor" id="line-167"></span><span class="anchor" id="line-168"></span><span class="anchor" id="line-169"></span><span class="anchor" id="line-170"></span><span class="anchor" id="line-171"></span><span class="anchor" id="line-172"></span><span class="anchor" id="line-173"></span><span class="anchor" id="line-174"></span><span class="anchor" id="line-175"></span><span class="anchor" id="line-176"></span><span class="anchor" id="line-177"></span><span class="anchor" id="line-178"></span><span class="anchor" id="line-179"></span><span class="anchor" id="line-180"></span><span class="anchor" id="line-181"></span><span class="anchor" id="line-182"></span><span class="anchor" id="line-183"></span><span class="anchor" id="line-184"></span><span class="anchor" id="line-185"></span><span class="anchor" id="line-186"></span><span class="anchor" id="line-187"></span><span class="anchor" id="line-188"></span><span class="anchor" id="line-189"></span><span class="anchor" id="line-190"></span><span class="anchor" id="line-191"></span><span class="anchor" id="line-192"></span><span class="anchor" id="line-193"></span><span class="anchor" id="line-194"></span><span class="anchor" id="line-195"></span><span class="anchor" id="line-196"></span><span class="anchor" id="line-197"></span><span class="anchor" id="line-198"></span><span class="anchor" id="line-199"></span><span class="anchor" id="line-200"></span><span class="anchor" id="line-201"></span><span class="anchor" id="line-202"></span><span class="anchor" id="line-203"></span><span class="anchor" id="line-204"></span><span class="anchor" id="line-205"></span><span class="anchor" id="line-206"></span><span class="anchor" id="line-207"></span><span class="anchor" id="line-208"></span><span class="anchor" id="line-209"></span><span class="anchor" id="line-210"></span><span class="anchor" id="line-211"></span><span class="anchor" id="line-212"></span><span class="anchor" id="line-213"></span><span class="anchor" id="line-214"></span><span class="anchor" id="line-215"></span><span class="anchor" id="line-216"></span><span class="anchor" id="line-217"></span><span class="anchor" id="line-218"></span><span class="anchor" id="line-219"></span><span class="anchor" id="line-220"></span><span class="anchor" id="line-221"></span><span class="anchor" id="line-1-1"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
function isnumbered(obj) {
  return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
  var nlen = Math.max(0,chrs-(''+num).length), res = '';
  while (nlen>0) { res += ' '; nlen-- }
  return res+num+add;
}
function addnumber(did, nstart, nstep) {
  var c = document.getElementById(did), l = c.firstChild, n = 1;
  if (!isnumbered(c)) {
    if (typeof nstart == 'undefined') nstart = 1;
    if (typeof nstep  == 'undefined') nstep = 1;
    var n = nstart;
    while (l != null) {
      if (l.tagName == 'SPAN') {
        var s = document.createElement('SPAN');
        var a = document.createElement('A');
        s.className = 'LineNumber';
        a.appendChild(document.createTextNode(nformat(n,4,'')));
        a.href = '#' + did + '_' + n;
        s.appendChild(a);
        s.appendChild(document.createTextNode(' '));
        n += nstep;
        if (l.childNodes.length) {
          l.insertBefore(s, l.firstChild);
        }
        else {
          l.appendChild(s);
        }
      }
      l = l.nextSibling;
    }
  }
  return false;
}
function remnumber(did) {
  var c = document.getElementById(did), l = c.firstChild;
  if (isnumbered(c)) {
    while (l != null) {
      if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
      l = l.nextSibling;
    }
  }
  return false;
}
function togglenumber(did, nstart, nstep) {
  var c = document.getElementById(did);
  if (isnumbered(c)) {
    remnumber(did);
  } else {
    addnumber(did,nstart,nstep);
  }
  return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-964aee10b5e25360ca860492986cabecacf549b8\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-964aee10b5e25360ca860492986cabecacf549b8', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-964aee10b5e25360ca860492986cabecacf549b8" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_1">   1</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_1"></span><span class="anchor" id="line-1-2"></span><span class="ResWord">import</span> <span class="ID">doctest</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_2">   2</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_2"></span><span class="anchor" id="line-2-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_3">   3</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_3"></span><span class="anchor" id="line-3-1"></span><span class="ResWord">def</span> <span class="ID">bridge_problem2</span>(<span class="ID">here</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_4">   4</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_4"></span><span class="anchor" id="line-4-1"></span>    <span class="String">"</span><span class="String">Find the fastest (least path cost) path to the goal in the bridge problem.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_5">   5</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_5"></span><span class="anchor" id="line-5-1"></span>    <span class="ID">here</span> = <span class="ResWord">frozenset</span>(<span class="ID">here</span>) | <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>])</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_6">   6</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_6"></span><span class="anchor" id="line-6-1"></span>    <span class="ID">explored</span> = <span class="ResWord">set</span>() <span class="Comment"># set of states we have visited</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_7">   7</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_7"></span><span class="anchor" id="line-7-1"></span>    <span class="Comment"># State will be a (people_here, people_there)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_8">   8</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_8"></span><span class="anchor" id="line-8-1"></span>    <span class="Comment"># E.g. ({1, 2, 5, 10, 'light'}, {})</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_9">   9</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_9"></span><span class="anchor" id="line-9-1"></span>    <span class="ID">frontier</span> = [ [(<span class="ID">here</span>, <span class="ResWord">frozenset</span>())] ] <span class="Comment"># ordered list of paths we have blazed</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_10">  10</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_10"></span><span class="anchor" id="line-10-1"></span>    <span class="ResWord">while</span> <span class="ID">frontier</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_11">  11</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_11"></span><span class="anchor" id="line-11-1"></span>        <span class="ID">path</span> = <span class="ID">frontier</span>.<span class="ID">pop</span>(<span class="Number">0</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_12">  12</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_12"></span><span class="anchor" id="line-12-1"></span>        <span class="ID">here1</span>, <span class="ID">there1</span> = <span class="ID">state1</span> = <span class="ID">final_state</span>(<span class="ID">path</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_13">  13</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_13"></span><span class="anchor" id="line-13-1"></span>        <span class="ResWord">if</span> <span class="ResWord">not</span> <span class="ID">here1</span> <span class="ResWord">or</span> (<span class="ResWord">len</span>(<span class="ID">here1</span>) == <span class="Number">1</span> <span class="ResWord">and</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span> <span class="ResWord">in</span> <span class="ID">here1</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_14">  14</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_14"></span><span class="anchor" id="line-14-1"></span>            <span class="ResWord">return</span> <span class="ID">path</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_15">  15</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_15"></span><span class="anchor" id="line-15-1"></span>        <span class="ID">explored</span>.<span class="ID">add</span>(<span class="ID">state1</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_16">  16</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_16"></span><span class="anchor" id="line-16-1"></span>        <span class="ID">pcost</span> = <span class="ID">path_cost</span>(<span class="ID">path</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_17">  17</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_17"></span><span class="anchor" id="line-17-1"></span>        <span class="ResWord">for</span> (<span class="ID">state</span>, <span class="ID">action</span>) <span class="ResWord">in</span> <span class="ID">bsuccessors2</span>(<span class="ID">state1</span>).<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_18">  18</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_18"></span><span class="anchor" id="line-18-1"></span>            <span class="ResWord">if</span> <span class="ID">state</span> <span class="ResWord">not</span> <span class="ResWord">in</span> <span class="ID">explored</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_19">  19</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_19"></span><span class="anchor" id="line-19-1"></span>                <span class="ID">total_cost</span> = <span class="ID">pcost</span> + <span class="ID">bcost</span>(<span class="ID">action</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_20">  20</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_20"></span><span class="anchor" id="line-20-1"></span>                <span class="ID">path2</span> = <span class="ID">path</span> + [(<span class="ID">action</span>, <span class="ID">total_cost</span>), <span class="ID">state</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_21">  21</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_21"></span><span class="anchor" id="line-21-1"></span>                <span class="ID">add_to_frontier</span>(<span class="ID">frontier</span>, <span class="ID">path2</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_22">  22</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_22"></span><span class="anchor" id="line-22-1"></span>    <span class="ResWord">return</span> []</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_23">  23</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_23"></span><span class="anchor" id="line-23-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_24">  24</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_24"></span><span class="anchor" id="line-24-1"></span><span class="ResWord">def</span> <span class="ID">final_state</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_25">  25</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_25"></span><span class="anchor" id="line-25-1"></span>    <span class="ResWord">return</span> <span class="ID">path</span>[-<span class="Number">1</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_26">  26</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_26"></span><span class="anchor" id="line-26-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_27">  27</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_27"></span><span class="anchor" id="line-27-1"></span><span class="ResWord">def</span> <span class="ID">path_cost</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_28">  28</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_28"></span><span class="anchor" id="line-28-1"></span>    <span class="String">"""The total cost of a path (which is stored in a tuple</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_29">  29</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_29"></span><span class="anchor" id="line-29-1"></span><span class="String">    with the final action."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_30">  30</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_30"></span><span class="anchor" id="line-30-1"></span>    <span class="Comment"># path = [state, (action, total_cost), state, ... ]</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_31">  31</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_31"></span><span class="anchor" id="line-31-1"></span>    <span class="ResWord">if</span> <span class="ResWord">len</span>(<span class="ID">path</span>) &lt; <span class="Number">2</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_32">  32</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_32"></span><span class="anchor" id="line-32-1"></span>        <span class="ResWord">return</span> <span class="Number">0</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_33">  33</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_33"></span><span class="anchor" id="line-33-1"></span>    <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_34">  34</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_34"></span><span class="anchor" id="line-34-1"></span>        <span class="ResWord">return</span> <span class="ID">path</span>[-<span class="Number">2</span>][-<span class="Number">1</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_35">  35</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_35"></span><span class="anchor" id="line-35-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_36">  36</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_36"></span><span class="anchor" id="line-36-1"></span><span class="ResWord">def</span> <span class="ID">bcost</span>(<span class="ID">action</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_37">  37</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_37"></span><span class="anchor" id="line-37-1"></span>    <span class="String">"""Returns the cost (a number) of an action in the</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_38">  38</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_38"></span><span class="anchor" id="line-38-1"></span><span class="String">    bridge problem."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_39">  39</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_39"></span><span class="anchor" id="line-39-1"></span>    <span class="Comment"># An action is an (a, b, arrow) tuple; a and b are</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_40">  40</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_40"></span><span class="anchor" id="line-40-1"></span>    <span class="Comment"># times; arrow is a string.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_41">  41</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_41"></span><span class="anchor" id="line-41-1"></span>    <span class="ID">a</span>, <span class="ID">b</span>, <span class="ID">arrow</span> = <span class="ID">action</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_42">  42</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_42"></span><span class="anchor" id="line-42-1"></span>    <span class="ResWord">return</span> <span class="ResWord">max</span>(<span class="ID">a</span>, <span class="ID">b</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_43">  43</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_43"></span><span class="anchor" id="line-43-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_44">  44</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_44"></span><span class="anchor" id="line-44-1"></span><span class="ResWord">def</span> <span class="ID">add_to_frontier</span>(<span class="ID">frontier</span>, <span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_45">  45</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_45"></span><span class="anchor" id="line-45-1"></span>    <span class="String">"</span><span class="String">Add path to frontier, replacing costlier path if there is one.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_46">  46</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_46"></span><span class="anchor" id="line-46-1"></span>    <span class="Comment"># (This could be done more efficiently)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_47">  47</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_47"></span><span class="anchor" id="line-47-1"></span>    <span class="Comment"># Find if there is an old path to the final state of this path.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_48">  48</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_48"></span><span class="anchor" id="line-48-1"></span>    <span class="ID">old</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_49">  49</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_49"></span><span class="anchor" id="line-49-1"></span>    <span class="ResWord">for</span> <span class="ID">i</span>, <span class="ID">p</span> <span class="ResWord">in</span> <span class="ResWord">enumerate</span>(<span class="ID">frontier</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_50">  50</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_50"></span><span class="anchor" id="line-50-1"></span>        <span class="ResWord">if</span> <span class="ID">final_state</span>(<span class="ID">p</span>) == <span class="ID">final_state</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_51">  51</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_51"></span><span class="anchor" id="line-51-1"></span>            <span class="ID">old</span> = <span class="ID">i</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_52">  52</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_52"></span><span class="anchor" id="line-52-1"></span>            <span class="ResWord">break</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_53">  53</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_53"></span><span class="anchor" id="line-53-1"></span>    <span class="ResWord">if</span> <span class="ID">old</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="ResWord">None</span> <span class="ResWord">and</span> <span class="ID">path_cost</span>(<span class="ID">frontier</span>[<span class="ID">old</span>]) &lt; <span class="ID">path_cost</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_54">  54</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_54"></span><span class="anchor" id="line-54-1"></span>        <span class="ResWord">return</span> <span class="Comment"># Old path was better; do nothing</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_55">  55</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_55"></span><span class="anchor" id="line-55-1"></span>    <span class="ResWord">elif</span> <span class="ID">old</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="ResWord">None</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_56">  56</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_56"></span><span class="anchor" id="line-56-1"></span>        <span class="ResWord">del</span> <span class="ID">frontier</span>[<span class="ID">old</span>] <span class="Comment"># Old path was worse; delete it</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_57">  57</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_57"></span><span class="anchor" id="line-57-1"></span>    <span class="Comment">## Now add the new path and re-sort</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_58">  58</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_58"></span><span class="anchor" id="line-58-1"></span>    <span class="ID">frontier</span>.<span class="ID">append</span>(<span class="ID">path</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_59">  59</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_59"></span><span class="anchor" id="line-59-1"></span>    <span class="ID">frontier</span>.<span class="ID">sort</span>(<span class="ID">key</span> = <span class="ID">path_cost</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_60">  60</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_60"></span><span class="anchor" id="line-60-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_61">  61</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_61"></span><span class="anchor" id="line-61-1"></span><span class="ResWord">def</span> <span class="ID">bsuccessors2</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_62">  62</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_62"></span><span class="anchor" id="line-62-1"></span>    <span class="String">"""Return a dict of {state:action} pairs.  A state is a (here, there) tuple,</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_63">  63</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_63"></span><span class="anchor" id="line-63-1"></span><span class="String">    where here and there are frozensets of people (indicated by their times) and/or</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_64">  64</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_64"></span><span class="anchor" id="line-64-1"></span><span class="String">    the light."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_65">  65</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_65"></span><span class="anchor" id="line-65-1"></span>    <span class="ID">here</span>, <span class="ID">there</span> = <span class="ID">state</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_66">  66</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_66"></span><span class="anchor" id="line-66-1"></span>    <span class="ResWord">if</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span> <span class="ResWord">in</span> <span class="ID">here</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_67">  67</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_67"></span><span class="anchor" id="line-67-1"></span>        <span class="ResWord">return</span> <span class="ResWord">dict</span>(((<span class="ID">here</span>  - <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_68">  68</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_68"></span><span class="anchor" id="line-68-1"></span>                      <span class="ID">there</span> | <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_69">  69</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_69"></span><span class="anchor" id="line-69-1"></span>                     (<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_70">  70</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_70"></span><span class="anchor" id="line-70-1"></span>                    <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">here</span> <span class="ResWord">if</span> <span class="ID">a</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_71">  71</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_71"></span><span class="anchor" id="line-71-1"></span>                    <span class="ResWord">for</span> <span class="ID">b</span> <span class="ResWord">in</span> <span class="ID">here</span> <span class="ResWord">if</span> <span class="ID">b</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_72">  72</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_72"></span><span class="anchor" id="line-72-1"></span>    <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_73">  73</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_73"></span><span class="anchor" id="line-73-1"></span>        <span class="ResWord">return</span> <span class="ResWord">dict</span>(((<span class="ID">here</span>  | <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_74">  74</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_74"></span><span class="anchor" id="line-74-1"></span>                      <span class="ID">there</span> - <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_75">  75</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_75"></span><span class="anchor" id="line-75-1"></span>                     (<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_76">  76</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_76"></span><span class="anchor" id="line-76-1"></span>                    <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">there</span> <span class="ResWord">if</span> <span class="ID">a</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_77">  77</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_77"></span><span class="anchor" id="line-77-1"></span>                    <span class="ResWord">for</span> <span class="ID">b</span> <span class="ResWord">in</span> <span class="ID">there</span> <span class="ResWord">if</span> <span class="ID">b</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_78">  78</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_78"></span><span class="anchor" id="line-78-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_79">  79</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_79"></span><span class="anchor" id="line-79-1"></span><span class="ResWord">def</span> <span class="ID">path_states</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_80">  80</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_80"></span><span class="anchor" id="line-80-1"></span>    <span class="String">"</span><span class="String">Return a list of states in this path.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_81">  81</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_81"></span><span class="anchor" id="line-81-1"></span>    <span class="ResWord">return</span> <span class="ID">path</span>[::<span class="Number">2</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_82">  82</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_82"></span><span class="anchor" id="line-82-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_83">  83</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_83"></span><span class="anchor" id="line-83-1"></span><span class="ResWord">def</span> <span class="ID">path_actions</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_84">  84</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_84"></span><span class="anchor" id="line-84-1"></span>    <span class="String">"</span><span class="String">Return a list of actions in this path.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_85">  85</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_85"></span><span class="anchor" id="line-85-1"></span>    <span class="ResWord">return</span> <span class="ID">path</span>[<span class="Number">1</span>::<span class="Number">2</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_86">  86</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_86"></span><span class="anchor" id="line-86-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_87">  87</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_87"></span><span class="anchor" id="line-87-1"></span><span class="ResWord">def</span> <span class="ID">test</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_88">  88</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_88"></span><span class="anchor" id="line-88-1"></span>    <span class="ID">here1</span> = <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_89">  89</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_89"></span><span class="anchor" id="line-89-1"></span>    <span class="ID">there1</span> = <span class="ResWord">frozenset</span>([])</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_90">  90</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_90"></span><span class="anchor" id="line-90-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_91">  91</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_91"></span><span class="anchor" id="line-91-1"></span>    <span class="ID">here2</span> = <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_92">  92</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_92"></span><span class="anchor" id="line-92-1"></span>    <span class="ID">there2</span> = <span class="ResWord">frozenset</span>([<span class="Number">3</span>])</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_93">  93</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_93"></span><span class="anchor" id="line-93-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_94">  94</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_94"></span><span class="anchor" id="line-94-1"></span>    <span class="ResWord">assert</span> <span class="ID">bsuccessors2</span>((<span class="ID">here1</span>, <span class="ID">there1</span>)) == {</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_95">  95</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_95"></span><span class="anchor" id="line-95-1"></span>            (<span class="ResWord">frozenset</span>([]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)}</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_96">  96</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_96"></span><span class="anchor" id="line-96-1"></span>    <span class="ResWord">assert</span> <span class="ID">bsuccessors2</span>((<span class="ID">here2</span>, <span class="ID">there2</span>)) == {</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_97">  97</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_97"></span><span class="anchor" id="line-97-1"></span>            (<span class="ResWord">frozenset</span>([<span class="Number">1</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">3</span>])): (<span class="Number">2</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_98">  98</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_98"></span><span class="anchor" id="line-98-1"></span>            (<span class="ResWord">frozenset</span>([<span class="Number">2</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">3</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_99">  99</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_99"></span><span class="anchor" id="line-99-1"></span>            (<span class="ResWord">frozenset</span>([]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">3</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)}</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_100"> 100</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_100"></span><span class="anchor" id="line-100-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_101"> 101</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_101"></span><span class="anchor" id="line-101-1"></span>    <span class="ResWord">assert</span> <span class="ID">bsuccessors2</span>((<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="ResWord">frozenset</span>([]))) == {</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_102"> 102</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_102"></span><span class="anchor" id="line-102-1"></span>        (<span class="ResWord">frozenset</span>([]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)}</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_103"> 103</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_103"></span><span class="anchor" id="line-103-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_104"> 104</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_104"></span><span class="anchor" id="line-104-1"></span>    <span class="ResWord">assert</span> <span class="ID">bsuccessors2</span>((<span class="ResWord">frozenset</span>([]), <span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]))) == {</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_105"> 105</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_105"></span><span class="anchor" id="line-105-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="ResWord">frozenset</span>([])): (<span class="Number">2</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>)}</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_106"> 106</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_106"></span><span class="anchor" id="line-106-1"></span>    <span class="ResWord">assert</span> <span class="ID">bsuccessors2</span>((<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">5</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="ResWord">frozenset</span>([]))) == {</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_107"> 107</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_107"></span><span class="anchor" id="line-107-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">5</span>])): (<span class="Number">5</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_108"> 108</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_108"></span><span class="anchor" id="line-108-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_109"> 109</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_109"></span><span class="anchor" id="line-109-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">5</span>])): (<span class="Number">5</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_110"> 110</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_110"></span><span class="anchor" id="line-110-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>, <span class="Number">5</span>])): (<span class="Number">5</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_111"> 111</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_111"></span><span class="anchor" id="line-111-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>])): (<span class="Number">2</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_112"> 112</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_112"></span><span class="anchor" id="line-112-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">10</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_113"> 113</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_113"></span><span class="anchor" id="line-113-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>])): (<span class="Number">10</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_114"> 114</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_114"></span><span class="anchor" id="line-114-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">10</span>])): (<span class="Number">10</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_115"> 115</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_115"></span><span class="anchor" id="line-115-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">5</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_116"> 116</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_116"></span><span class="anchor" id="line-116-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])): (<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)}</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_117"> 117</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_117"></span><span class="anchor" id="line-117-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_118"> 118</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_118"></span><span class="anchor" id="line-118-1"></span>    <span class="ResWord">assert</span> <span class="ID">path_cost</span>((<span class="String">'</span><span class="String">fake_state1</span><span class="String">'</span>, ((<span class="Number">2</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Number">5</span>), <span class="String">'</span><span class="String">fake_state2</span><span class="String">'</span>)) == <span class="Number">5</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_119"> 119</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_119"></span><span class="anchor" id="line-119-1"></span>    <span class="ResWord">assert</span> <span class="ID">path_cost</span>((<span class="String">'</span><span class="String">fs1</span><span class="String">'</span>, ((<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Number">2</span>), <span class="String">'</span><span class="String">fs2</span><span class="String">'</span>, ((<span class="Number">3</span>, <span class="Number">4</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>), <span class="Number">6</span>), <span class="String">'</span><span class="String">fs3</span><span class="String">'</span>)) == <span class="Number">6</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_120"> 120</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_120"></span><span class="anchor" id="line-120-1"></span>    <span class="ResWord">assert</span> <span class="ID">bcost</span>((<span class="Number">4</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), ) == <span class="Number">4</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_121"> 121</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_121"></span><span class="anchor" id="line-121-1"></span>    <span class="ResWord">assert</span> <span class="ID">bcost</span>((<span class="Number">3</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>), ) == <span class="Number">10</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_122"> 122</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_122"></span><span class="anchor" id="line-122-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_123"> 123</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_123"></span><span class="anchor" id="line-123-1"></span>    <span class="ResWord">assert</span> <span class="ID">path_cost</span>(<span class="ID">bridge_problem</span>(<span class="ResWord">frozenset</span>((<span class="Number">1</span>, <span class="Number">2</span>), ))) == <span class="Number">2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_124"> 124</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_124"></span><span class="anchor" id="line-124-1"></span>    <span class="ResWord">assert</span> <span class="ID">path_cost</span>(<span class="ID">bridge_problem</span>(<span class="ResWord">frozenset</span>((<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">5</span>, <span class="Number">10</span>), ))) == <span class="Number">17</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_125"> 125</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_125"></span><span class="anchor" id="line-125-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_126"> 126</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_126"></span><span class="anchor" id="line-126-1"></span>    <span class="ID">testpath</span> = [(<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">5</span>]), <span class="Number">5</span>), <span class="Comment"># state 1</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_127"> 127</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_127"></span><span class="anchor" id="line-127-1"></span>                (<span class="Number">5</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),                                        <span class="Comment"># action 1</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_128"> 128</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_128"></span><span class="anchor" id="line-128-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">2</span>), <span class="Comment"># state 2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_129"> 129</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_129"></span><span class="anchor" id="line-129-1"></span>                (<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),                                        <span class="Comment"># action 2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_130"> 130</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_130"></span><span class="anchor" id="line-130-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">5</span>]), <span class="Number">5</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_131"> 131</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_131"></span><span class="anchor" id="line-131-1"></span>                (<span class="Number">5</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_132"> 132</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_132"></span><span class="anchor" id="line-132-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_133"> 133</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_133"></span><span class="anchor" id="line-133-1"></span>                (<span class="Number">5</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_134"> 134</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_134"></span><span class="anchor" id="line-134-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>]), <span class="Number">2</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_135"> 135</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_135"></span><span class="anchor" id="line-135-1"></span>                (<span class="Number">2</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_136"> 136</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_136"></span><span class="anchor" id="line-136-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_137"> 137</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_137"></span><span class="anchor" id="line-137-1"></span>                (<span class="Number">10</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_138"> 138</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_138"></span><span class="anchor" id="line-138-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_139"> 139</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_139"></span><span class="anchor" id="line-139-1"></span>                (<span class="Number">10</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_140"> 140</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_140"></span><span class="anchor" id="line-140-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">10</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_141"> 141</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_141"></span><span class="anchor" id="line-141-1"></span>                (<span class="Number">10</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_142"> 142</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_142"></span><span class="anchor" id="line-142-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">5</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_143"> 143</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_143"></span><span class="anchor" id="line-143-1"></span>                (<span class="Number">5</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_144"> 144</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_144"></span><span class="anchor" id="line-144-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">1</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_145"> 145</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_145"></span><span class="anchor" id="line-145-1"></span>                (<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_146"> 146</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_146"></span><span class="anchor" id="line-146-1"></span>    <span class="ResWord">assert</span> <span class="ID">path_states</span>(<span class="ID">testpath</span>) == [(<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">5</span>]), <span class="Number">5</span>), <span class="Comment"># state 1</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_147"> 147</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_147"></span><span class="anchor" id="line-147-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">2</span>), <span class="Comment"># state 2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_148"> 148</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_148"></span><span class="anchor" id="line-148-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">5</span>]), <span class="Number">5</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_149"> 149</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_149"></span><span class="anchor" id="line-149-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_150"> 150</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_150"></span><span class="anchor" id="line-150-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>]), <span class="Number">2</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_151"> 151</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_151"></span><span class="anchor" id="line-151-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_152"> 152</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_152"></span><span class="anchor" id="line-152-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_153"> 153</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_153"></span><span class="anchor" id="line-153-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">2</span>, <span class="Number">10</span>]), <span class="Number">10</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_154"> 154</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_154"></span><span class="anchor" id="line-154-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">10</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">5</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_155"> 155</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_155"></span><span class="anchor" id="line-155-1"></span>                (<span class="ResWord">frozenset</span>([<span class="Number">2</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="Number">1</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_156"> 156</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_156"></span><span class="anchor" id="line-156-1"></span>    <span class="ResWord">assert</span> <span class="ID">path_actions</span>(<span class="ID">testpath</span>) == [(<span class="Number">5</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Comment"># action 1</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_157"> 157</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_157"></span><span class="anchor" id="line-157-1"></span>                                      (<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Comment"># action 2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_158"> 158</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_158"></span><span class="anchor" id="line-158-1"></span>                                      (<span class="Number">5</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_159"> 159</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_159"></span><span class="anchor" id="line-159-1"></span>                                      (<span class="Number">5</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_160"> 160</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_160"></span><span class="anchor" id="line-160-1"></span>                                      (<span class="Number">2</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_161"> 161</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_161"></span><span class="anchor" id="line-161-1"></span>                                      (<span class="Number">10</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_162"> 162</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_162"></span><span class="anchor" id="line-162-1"></span>                                      (<span class="Number">10</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_163"> 163</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_163"></span><span class="anchor" id="line-163-1"></span>                                      (<span class="Number">10</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_164"> 164</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_164"></span><span class="anchor" id="line-164-1"></span>                                      (<span class="Number">5</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_165"> 165</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_165"></span><span class="anchor" id="line-165-1"></span>                                      (<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_166"> 166</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_166"></span><span class="anchor" id="line-166-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_167"> 167</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_167"></span><span class="anchor" id="line-167-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_168"> 168</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_168"></span><span class="anchor" id="line-168-1"></span>    <span class="ResWord">return</span> <span class="String">'</span><span class="String">tests pass</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_169"> 169</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_169"></span><span class="anchor" id="line-169-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_170"> 170</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_170"></span><span class="anchor" id="line-170-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_171"> 171</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_171"></span><span class="anchor" id="line-171-1"></span><span class="ResWord">class</span> <span class="ID">TestBridge</span>: <span class="String">"""</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_172"> 172</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_172"></span><span class="anchor" id="line-172-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_cost(bridge_problem([1,2,5,10]))</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_173"> 173</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_173"></span><span class="anchor" id="line-173-1"></span><span class="String"></span><span class="String">17</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_174"> 174</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_174"></span><span class="anchor" id="line-174-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_175"> 175</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_175"></span><span class="anchor" id="line-175-1"></span><span class="String"></span><span class="String">## There are two equally good solutions</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_176"> 176</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_176"></span><span class="anchor" id="line-176-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; S1 = [((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 2), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 3), ((5, 10, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 13), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 15), ((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 17)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_177"> 177</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_177"></span><span class="anchor" id="line-177-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_178"> 178</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_178"></span><span class="anchor" id="line-178-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; S2 = [((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 2), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 4), ((5, 10, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 14), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 15), ((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 17)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_179"> 179</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_179"></span><span class="anchor" id="line-179-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_actions(bridge_problem([1,2,5,10])) in (S1, S2)</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_180"> 180</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_180"></span><span class="anchor" id="line-180-1"></span><span class="String"></span><span class="String">True</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_181"> 181</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_181"></span><span class="anchor" id="line-181-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_182"> 182</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_182"></span><span class="anchor" id="line-182-1"></span><span class="String"></span><span class="String">## Try some other problems</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_183"> 183</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_183"></span><span class="anchor" id="line-183-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_actions(bridge_problem([1,2,5,10,15,20]))</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_184"> 184</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_184"></span><span class="anchor" id="line-184-1"></span><span class="String"></span><span class="String">[((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 2), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 3), ((5, 10, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 13), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 15), ((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 17), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 18), ((15, 20, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 38), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 40), ((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 42)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_185"> 185</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_185"></span><span class="anchor" id="line-185-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_186"> 186</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_186"></span><span class="anchor" id="line-186-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_actions(bridge_problem([1,2,4,8,16,32]))</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_187"> 187</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_187"></span><span class="anchor" id="line-187-1"></span><span class="String"></span><span class="String">[((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 2), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 3), ((8, 4, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 11), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 13), ((1, 2, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 15), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 16), ((16, 32, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 48), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 50), ((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 52)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_188"> 188</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_188"></span><span class="anchor" id="line-188-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_189"> 189</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_189"></span><span class="anchor" id="line-189-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; [path_cost(bridge_problem([1,2,4,8,16][:N])) for N in range(6)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_190"> 190</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_190"></span><span class="anchor" id="line-190-1"></span><span class="String"></span><span class="String">[0, 1, 2, 7, 15, 28]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_191"> 191</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_191"></span><span class="anchor" id="line-191-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_192"> 192</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_192"></span><span class="anchor" id="line-192-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; [path_cost(bridge_problem([1,1,2,3,5,8,13,21][:N])) for N in range(8)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_193"> 193</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_193"></span><span class="anchor" id="line-193-1"></span><span class="String"></span><span class="String">[0, 1, 1, 2, 6, 12, 19, 30]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_194"> 194</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_194"></span><span class="anchor" id="line-194-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_195"> 195</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_195"></span><span class="anchor" id="line-195-1"></span><span class="String"></span><span class="String"># http://en.wikipedia.org/wiki/Bridge_and_torch_problem</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_196"> 196</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_196"></span><span class="anchor" id="line-196-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_actions(bridge_problem([1,2,5,8]))</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_197"> 197</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_197"></span><span class="anchor" id="line-197-1"></span><span class="String"></span><span class="String">[((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 2), ((1, 1, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 3), ((5, 8, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 11), ((2, 2, </span><span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span><span class="String">), 13), ((2, 1, </span><span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span><span class="String">), 15)]</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_198"> 198</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_198"></span><span class="anchor" id="line-198-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_199"> 199</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_199"></span><span class="anchor" id="line-199-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_cost(bridge_problem([1,2,5,8]))</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_200"> 200</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_200"></span><span class="anchor" id="line-200-1"></span><span class="String"></span><span class="String">15</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_201"> 201</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_201"></span><span class="anchor" id="line-201-1"></span><span class="String"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_202"> 202</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_202"></span><span class="anchor" id="line-202-1"></span><span class="String"></span><span class="String">&gt;&gt;&gt; path_cost(bridge_problem([5,10,20,25]))</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_203"> 203</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_203"></span><span class="anchor" id="line-203-1"></span><span class="String"></span><span class="String">60</span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_204"> 204</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_204"></span><span class="anchor" id="line-204-1"></span><span class="String"></span><span class="String">"""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_205"> 205</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_205"></span><span class="anchor" id="line-205-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_206"> 206</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_206"></span><span class="anchor" id="line-206-1"></span><span class="ResWord">print</span>(<span class="ID">test</span>())</span>
<span class="line"><span class="LineNumber"><a href="#CA-964aee10b5e25360ca860492986cabecacf549b8_207"> 207</a> </span><span class="LineAnchor" id="CA-964aee10b5e25360ca860492986cabecacf549b8_207"></span><span class="anchor" id="line-207-1"></span><span class="ResWord">print</span>(<span class="ID">doctest</span>.<span class="ID">testmod</span>())</span>
</pre></div></div><span class="anchor" id="line-222"></span><p class="line867">
</p><h2 id="pour.py">2. pour.py</h2>
<span class="anchor" id="line-223"></span><p class="line867"><span class="anchor" id="line-224"></span><span class="anchor" id="line-225"></span><span class="anchor" id="line-226"></span><span class="anchor" id="line-227"></span><span class="anchor" id="line-228"></span><span class="anchor" id="line-229"></span><span class="anchor" id="line-230"></span><span class="anchor" id="line-231"></span><span class="anchor" id="line-232"></span><span class="anchor" id="line-233"></span><span class="anchor" id="line-234"></span><span class="anchor" id="line-235"></span><span class="anchor" id="line-236"></span><span class="anchor" id="line-237"></span><span class="anchor" id="line-238"></span><span class="anchor" id="line-239"></span><span class="anchor" id="line-240"></span><span class="anchor" id="line-241"></span><span class="anchor" id="line-242"></span><span class="anchor" id="line-243"></span><span class="anchor" id="line-244"></span><span class="anchor" id="line-245"></span><span class="anchor" id="line-246"></span><span class="anchor" id="line-247"></span><span class="anchor" id="line-248"></span><span class="anchor" id="line-249"></span><span class="anchor" id="line-250"></span><span class="anchor" id="line-251"></span><span class="anchor" id="line-252"></span><span class="anchor" id="line-253"></span><span class="anchor" id="line-254"></span><span class="anchor" id="line-255"></span><span class="anchor" id="line-256"></span><span class="anchor" id="line-257"></span><span class="anchor" id="line-258"></span><span class="anchor" id="line-259"></span><span class="anchor" id="line-260"></span><span class="anchor" id="line-261"></span><span class="anchor" id="line-262"></span><span class="anchor" id="line-263"></span><span class="anchor" id="line-264"></span><span class="anchor" id="line-265"></span><span class="anchor" id="line-266"></span><span class="anchor" id="line-267"></span><span class="anchor" id="line-268"></span><span class="anchor" id="line-269"></span><span class="anchor" id="line-270"></span><span class="anchor" id="line-271"></span><span class="anchor" id="line-272"></span><span class="anchor" id="line-273"></span><span class="anchor" id="line-274"></span><span class="anchor" id="line-275"></span><span class="anchor" id="line-276"></span><span class="anchor" id="line-277"></span><span class="anchor" id="line-278"></span><span class="anchor" id="line-279"></span><span class="anchor" id="line-280"></span><span class="anchor" id="line-281"></span><span class="anchor" id="line-282"></span><span class="anchor" id="line-283"></span><span class="anchor" id="line-284"></span><span class="anchor" id="line-285"></span><span class="anchor" id="line-286"></span><span class="anchor" id="line-287"></span><span class="anchor" id="line-288"></span><span class="anchor" id="line-289"></span><span class="anchor" id="line-290"></span><span class="anchor" id="line-291"></span><span class="anchor" id="line-292"></span><span class="anchor" id="line-293"></span><span class="anchor" id="line-294"></span><span class="anchor" id="line-295"></span><span class="anchor" id="line-1-3"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-4df21f8ee8d8f8817069c9b2b60f823242126a61\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-4df21f8ee8d8f8817069c9b2b60f823242126a61', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_1">   1</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_1"></span><span class="anchor" id="line-1-4"></span><span class="ResWord">import</span> <span class="ID">doctest</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_2">   2</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_2"></span><span class="anchor" id="line-2-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_3">   3</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_3"></span><span class="anchor" id="line-3-2"></span><span class="ResWord">def</span> <span class="ID">pour_problem</span>(<span class="ID">X</span>, <span class="ID">Y</span>, <span class="ID">goal</span>, <span class="ID">start</span> = (<span class="Number">0</span>, <span class="Number">0</span>)):</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_4">   4</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_4"></span><span class="anchor" id="line-4-2"></span>    <span class="String">"""X and Y are the capacity of glasses; (x,y) is current fill levels and</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_5">   5</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_5"></span><span class="anchor" id="line-5-2"></span><span class="String">    represent a state. The goal is a level that can be in either glass. Start at</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_6">   6</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_6"></span><span class="anchor" id="line-6-2"></span><span class="String">    start state and follow successors until we reach the goal. Keep track of</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_7">   7</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_7"></span><span class="anchor" id="line-7-2"></span><span class="String">    frontier and previously explored; fail when no frontier."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_8">   8</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_8"></span><span class="anchor" id="line-8-2"></span>    <span class="ResWord">if</span> <span class="ID">goal</span> <span class="ResWord">in</span> <span class="ID">start</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_9">   9</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_9"></span><span class="anchor" id="line-9-2"></span>        <span class="ResWord">return</span> [<span class="ID">start</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_10">  10</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_10"></span><span class="anchor" id="line-10-2"></span>    <span class="ID">explored</span> = <span class="ResWord">set</span>() <span class="Comment"># set the states we have visited</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_11">  11</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_11"></span><span class="anchor" id="line-11-2"></span>    <span class="ID">frontier</span> = [ [<span class="ID">start</span>] ] <span class="Comment"># ordered list of paths we have blazed</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_12">  12</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_12"></span><span class="anchor" id="line-12-2"></span>    <span class="ResWord">while</span> <span class="ID">frontier</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_13">  13</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_13"></span><span class="anchor" id="line-13-2"></span>        <span class="ID">path</span> = <span class="ID">frontier</span>.<span class="ID">pop</span>(<span class="Number">0</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_14">  14</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_14"></span><span class="anchor" id="line-14-2"></span>        (<span class="ID">x</span>, <span class="ID">y</span>) = <span class="ID">path</span>[-<span class="Number">1</span>] <span class="Comment"># Last state in the first path of the frontier</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_15">  15</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_15"></span><span class="anchor" id="line-15-2"></span>        <span class="ResWord">for</span> (<span class="ID">state</span>, <span class="ID">action</span>) <span class="ResWord">in</span> <span class="ID">successors</span>(<span class="ID">x</span>, <span class="ID">y</span>, <span class="ID">X</span>, <span class="ID">Y</span>).<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_16">  16</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_16"></span><span class="anchor" id="line-16-2"></span>            <span class="ResWord">if</span> <span class="ID">state</span> <span class="ResWord">not</span> <span class="ResWord">in</span> <span class="ID">explored</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_17">  17</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_17"></span><span class="anchor" id="line-17-2"></span>                <span class="ID">explored</span>.<span class="ID">add</span>(<span class="ID">state</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_18">  18</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_18"></span><span class="anchor" id="line-18-2"></span>                <span class="ID">path2</span> = <span class="ID">path</span> + [<span class="ID">action</span>, <span class="ID">state</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_19">  19</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_19"></span><span class="anchor" id="line-19-2"></span>                <span class="ResWord">if</span> <span class="ID">goal</span> <span class="ResWord">in</span> <span class="ID">state</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_20">  20</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_20"></span><span class="anchor" id="line-20-2"></span>                    <span class="ResWord">return</span> <span class="ID">path2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_21">  21</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_21"></span><span class="anchor" id="line-21-2"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_22">  22</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_22"></span><span class="anchor" id="line-22-2"></span>                    <span class="ID">frontier</span>.<span class="ID">append</span>(<span class="ID">path2</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_23">  23</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_23"></span><span class="anchor" id="line-23-2"></span>    <span class="ResWord">return</span> <span class="ID">Fail</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_24">  24</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_24"></span><span class="anchor" id="line-24-2"></span><span class="ID">Fail</span> = []</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_25">  25</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_25"></span><span class="anchor" id="line-25-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_26">  26</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_26"></span><span class="anchor" id="line-26-2"></span><span class="ResWord">def</span> <span class="ID">successors</span>(<span class="ID">x</span>, <span class="ID">y</span>, <span class="ID">X</span>, <span class="ID">Y</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_27">  27</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_27"></span><span class="anchor" id="line-27-2"></span>    <span class="String">"""Return a dict of {state:action} pairs describing what can be reached from</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_28">  28</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_28"></span><span class="anchor" id="line-28-2"></span><span class="String">    the (x, y) state and how."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_29">  29</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_29"></span><span class="anchor" id="line-29-2"></span>    <span class="ResWord">assert</span> <span class="ID">x</span> &lt;= <span class="ID">X</span> <span class="ResWord">and</span> <span class="ID">y</span> &lt;= <span class="ID">Y</span> <span class="Comment">## (x, y) is glass levels; X and Y are glass sizes</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_30">  30</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_30"></span><span class="anchor" id="line-30-2"></span>    <span class="ResWord">return</span> {((<span class="Number">0</span>, <span class="ID">y</span>+<span class="ID">x</span>) <span class="ResWord">if</span> <span class="ID">y</span>+<span class="ID">x</span> &lt;= <span class="ID">Y</span> <span class="ResWord">else</span> (<span class="ID">x</span>-(<span class="ID">Y</span>-<span class="ID">y</span>), <span class="ID">y</span>+(<span class="ID">Y</span>-<span class="ID">y</span>))): <span class="String">'</span><span class="String">X-&gt;Y</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_31">  31</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_31"></span><span class="anchor" id="line-31-2"></span>            ((<span class="ID">x</span>+<span class="ID">y</span>, <span class="Number">0</span>) <span class="ResWord">if</span> <span class="ID">x</span>+<span class="ID">y</span> &lt;= <span class="ID">X</span> <span class="ResWord">else</span> (<span class="ID">x</span>+(<span class="ID">X</span>-<span class="ID">x</span>), <span class="ID">y</span>-(<span class="ID">X</span>-<span class="ID">x</span>))): <span class="String">'</span><span class="String">X&lt;-Y</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_32">  32</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_32"></span><span class="anchor" id="line-32-2"></span>            (<span class="ID">X</span>, <span class="ID">y</span>): <span class="String">'</span><span class="String">fill X</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_33">  33</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_33"></span><span class="anchor" id="line-33-2"></span>            (<span class="ID">x</span>, <span class="ID">Y</span>): <span class="String">'</span><span class="String">fill Y</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_34">  34</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_34"></span><span class="anchor" id="line-34-2"></span>            (<span class="Number">0</span>, <span class="ID">y</span>): <span class="String">'</span><span class="String">empty X</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_35">  35</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_35"></span><span class="anchor" id="line-35-2"></span>            (<span class="ID">x</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">empty Y</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_36">  36</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_36"></span><span class="anchor" id="line-36-2"></span>            }</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_37">  37</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_37"></span><span class="anchor" id="line-37-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_38">  38</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_38"></span><span class="anchor" id="line-38-2"></span><span class="ResWord">class</span> <span class="ID">Test</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_39">  39</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_39"></span><span class="anchor" id="line-39-2"></span>    <span class="String">"""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_40">  40</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_40"></span><span class="anchor" id="line-40-2"></span><span class="String">    &gt;&gt;&gt; successors(0, 0, 4, 9)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_41">  41</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_41"></span><span class="anchor" id="line-41-2"></span><span class="String">    {(0, 9): 'fill Y', (0, 0): 'empty Y', (4, 0): 'fill X'}</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_42">  42</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_42"></span><span class="anchor" id="line-42-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_43">  43</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_43"></span><span class="anchor" id="line-43-2"></span><span class="String">    &gt;&gt;&gt; successors(3, 5, 4, 9)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_44">  44</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_44"></span><span class="anchor" id="line-44-2"></span><span class="String">    {(4, 5): 'fill X', (4, 4): 'X&lt;-Y', (3, 0): 'empty Y', (3, 9): 'fill Y', (0, 5): 'empty X', (0, 8): 'X-&gt;Y'}</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_45">  45</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_45"></span><span class="anchor" id="line-45-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_46">  46</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_46"></span><span class="anchor" id="line-46-2"></span><span class="String">    &gt;&gt;&gt; successors(3, 7, 4, 9)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_47">  47</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_47"></span><span class="anchor" id="line-47-2"></span><span class="String">    {(4, 7): 'fill X', (4, 6): 'X&lt;-Y', (3, 0): 'empty Y', (0, 7): 'empty X', (3, 9): 'fill Y', (1, 9): 'X-&gt;Y'}</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_48">  48</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_48"></span><span class="anchor" id="line-48-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_49">  49</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_49"></span><span class="anchor" id="line-49-2"></span><span class="String">    &gt;&gt;&gt; pour_problem(4, 9, 6)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_50">  50</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_50"></span><span class="anchor" id="line-50-2"></span><span class="String">    [(0, 0), 'fill Y', (0, 9), 'X&lt;-Y', (4, 5), 'empty X', (0, 5), 'X&lt;-Y', (4, 1), 'empty X', (0, 1), 'X&lt;-Y', (1, 0), 'fill Y', (1, 9), 'X&lt;-Y', (4, 6)]</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_51">  51</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_51"></span><span class="anchor" id="line-51-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_52">  52</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_52"></span><span class="anchor" id="line-52-2"></span><span class="String">    ## What problem, with X, Y, and goal &lt; 10 has the longest solution?</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_53">  53</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_53"></span><span class="anchor" id="line-53-2"></span><span class="String">    ## Answer: pour_problem(7, 9, 8) with 14 steps.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_54">  54</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_54"></span><span class="anchor" id="line-54-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_55">  55</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_55"></span><span class="anchor" id="line-55-2"></span><span class="String">    &gt;&gt;&gt; def num_actions(triplet): X, Y, goal = triplet; return len(pour_problem(X, Y, goal)) / 2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_56">  56</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_56"></span><span class="anchor" id="line-56-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_57">  57</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_57"></span><span class="anchor" id="line-57-2"></span><span class="String">    &gt;&gt;&gt; def hardness(triplet): X, Y, goal = triplet; return num_actions((X, Y, goal)) - max(X, Y)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_58">  58</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_58"></span><span class="anchor" id="line-58-2"></span><span class="String">    &gt;&gt;&gt; max([(X, Y, goal) for X in range(1, 10) for Y in range(1, 10)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_59">  59</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_59"></span><span class="anchor" id="line-59-2"></span><span class="String">    ...                   for goal in range(1, max(X, Y))], key = num_actions)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_60">  60</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_60"></span><span class="anchor" id="line-60-2"></span><span class="String">    (7, 9, 8)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_61">  61</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_61"></span><span class="anchor" id="line-61-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_62">  62</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_62"></span><span class="anchor" id="line-62-2"></span><span class="String">    &gt;&gt;&gt; max([(X, Y, goal) for X in range(1, 10) for Y in range(1, 10)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_63">  63</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_63"></span><span class="anchor" id="line-63-2"></span><span class="String">    ...                   for goal in range(1, max(X, Y))], key = hardness)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_64">  64</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_64"></span><span class="anchor" id="line-64-2"></span><span class="String">    (7, 9, 8)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_65">  65</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_65"></span><span class="anchor" id="line-65-2"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_66">  66</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_66"></span><span class="anchor" id="line-66-2"></span><span class="String">    &gt;&gt;&gt; pour_problem(7, 9, 8)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_67">  67</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_67"></span><span class="anchor" id="line-67-2"></span><span class="String">    [(0, 0), 'fill Y', (0, 9), 'X&lt;-Y', (7, 2), 'empty X', (0, 2), 'X&lt;-Y', (2, 0), 'fill Y', (2, 9), 'X&lt;-Y', (7, 4), 'empty X', (0, 4), 'X&lt;-Y', (4, 0), 'fill Y', (4, 9), 'X&lt;-Y', (7, 6), 'empty X', (0, 6), 'X&lt;-Y', (6, 0), 'fill Y', (6, 9), 'X&lt;-Y', (7, 8)]</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_68">  68</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_68"></span><span class="anchor" id="line-68-2"></span><span class="String">    """</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_69">  69</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_69"></span><span class="anchor" id="line-69-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_70">  70</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_70"></span><span class="anchor" id="line-70-2"></span><span class="ResWord">print</span>(<span class="ID">doctest</span>.<span class="ID">testmod</span>())</span>
<span class="line"><span class="LineNumber"><a href="#CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_71">  71</a> </span><span class="LineAnchor" id="CA-4df21f8ee8d8f8817069c9b2b60f823242126a61_71"></span><span class="anchor" id="line-71-2"></span><span class="Comment"># TestResults(failed=0, attempted=9)</span></span>
</pre></div></div><span class="anchor" id="line-296"></span><p class="line874">Note that doctests compare the computed result and answer as strings, not Python objects. So the order of the items in the dict matter in a doctest whereas the order does not matter in an assert statement <span class="anchor" id="line-297"></span><span class="anchor" id="line-298"></span></p><p class="line867">
</p><h2 id="cannibals.py">3. cannibals.py</h2>
<span class="anchor" id="line-299"></span><p class="line862">A description of the Missionaries and Cannibals problem can be found <a class="http" href="http://en.wikipedia.org/wiki/Missionaries_and_cannibals_problem">here</a>. <span class="anchor" id="line-300"></span><span class="anchor" id="line-301"></span></p><p class="line867"><span class="anchor" id="line-302"></span><span class="anchor" id="line-303"></span><span class="anchor" id="line-304"></span><span class="anchor" id="line-305"></span><span class="anchor" id="line-306"></span><span class="anchor" id="line-307"></span><span class="anchor" id="line-308"></span><span class="anchor" id="line-309"></span><span class="anchor" id="line-310"></span><span class="anchor" id="line-311"></span><span class="anchor" id="line-312"></span><span class="anchor" id="line-313"></span><span class="anchor" id="line-314"></span><span class="anchor" id="line-315"></span><span class="anchor" id="line-316"></span><span class="anchor" id="line-317"></span><span class="anchor" id="line-318"></span><span class="anchor" id="line-319"></span><span class="anchor" id="line-320"></span><span class="anchor" id="line-321"></span><span class="anchor" id="line-322"></span><span class="anchor" id="line-323"></span><span class="anchor" id="line-324"></span><span class="anchor" id="line-325"></span><span class="anchor" id="line-326"></span><span class="anchor" id="line-327"></span><span class="anchor" id="line-328"></span><span class="anchor" id="line-329"></span><span class="anchor" id="line-330"></span><span class="anchor" id="line-331"></span><span class="anchor" id="line-332"></span><span class="anchor" id="line-333"></span><span class="anchor" id="line-334"></span><span class="anchor" id="line-335"></span><span class="anchor" id="line-336"></span><span class="anchor" id="line-337"></span><span class="anchor" id="line-338"></span><span class="anchor" id="line-339"></span><span class="anchor" id="line-340"></span><span class="anchor" id="line-341"></span><span class="anchor" id="line-342"></span><span class="anchor" id="line-343"></span><span class="anchor" id="line-344"></span><span class="anchor" id="line-345"></span><span class="anchor" id="line-346"></span><span class="anchor" id="line-347"></span><span class="anchor" id="line-348"></span><span class="anchor" id="line-349"></span><span class="anchor" id="line-350"></span><span class="anchor" id="line-351"></span><span class="anchor" id="line-352"></span><span class="anchor" id="line-353"></span><span class="anchor" id="line-354"></span><span class="anchor" id="line-355"></span><span class="anchor" id="line-356"></span><span class="anchor" id="line-357"></span><span class="anchor" id="line-358"></span><span class="anchor" id="line-359"></span><span class="anchor" id="line-360"></span><span class="anchor" id="line-361"></span><span class="anchor" id="line-362"></span><span class="anchor" id="line-363"></span><span class="anchor" id="line-364"></span><span class="anchor" id="line-365"></span><span class="anchor" id="line-366"></span><span class="anchor" id="line-367"></span><span class="anchor" id="line-368"></span><span class="anchor" id="line-369"></span><span class="anchor" id="line-370"></span><span class="anchor" id="line-371"></span><span class="anchor" id="line-372"></span><span class="anchor" id="line-373"></span><span class="anchor" id="line-374"></span><span class="anchor" id="line-375"></span><span class="anchor" id="line-376"></span><span class="anchor" id="line-377"></span><span class="anchor" id="line-378"></span><span class="anchor" id="line-379"></span><span class="anchor" id="line-380"></span><span class="anchor" id="line-381"></span><span class="anchor" id="line-382"></span><span class="anchor" id="line-383"></span><span class="anchor" id="line-384"></span><span class="anchor" id="line-385"></span><span class="anchor" id="line-386"></span><span class="anchor" id="line-387"></span><span class="anchor" id="line-388"></span><span class="anchor" id="line-389"></span><span class="anchor" id="line-390"></span><span class="anchor" id="line-391"></span><span class="anchor" id="line-1-5"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_1">   1</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_1"></span><span class="anchor" id="line-1-6"></span><span class="ResWord">import</span> <span class="ID">doctest</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_2">   2</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_2"></span><span class="anchor" id="line-2-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_3">   3</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_3"></span><span class="anchor" id="line-3-3"></span><span class="ResWord">def</span> <span class="ID">mc_problem</span>(<span class="ID">start</span> = (<span class="Number">3</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="ID">goal</span> = <span class="ResWord">None</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_4">   4</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_4"></span><span class="anchor" id="line-4-3"></span>    <span class="String">"""Solve the missionaries and cannibals problem.  State is 6 ints: (M1, C1,</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_5">   5</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_5"></span><span class="anchor" id="line-5-3"></span><span class="String">    B1, M2, C2, B2) on the start (1) and other (2) sides.  Find a path that goes</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_6">   6</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_6"></span><span class="anchor" id="line-6-3"></span><span class="String">    from the initial state to the goal state (which, if not specified, is the</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_7">   7</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_7"></span><span class="anchor" id="line-7-3"></span><span class="String">    state with no people or boats on the start side.) """</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_8">   8</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_8"></span><span class="anchor" id="line-8-3"></span>    <span class="ResWord">if</span> <span class="ID">goal</span> <span class="ResWord">is</span> <span class="ResWord">None</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_9">   9</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_9"></span><span class="anchor" id="line-9-3"></span>        <span class="ID">goal</span> = (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>) + <span class="ID">start</span>[:<span class="Number">3</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_10">  10</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_10"></span><span class="anchor" id="line-10-3"></span>    <span class="ResWord">if</span> <span class="ID">start</span> == <span class="ID">goal</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_11">  11</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_11"></span><span class="anchor" id="line-11-3"></span>        <span class="ResWord">return</span> [<span class="ID">start</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_12">  12</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_12"></span><span class="anchor" id="line-12-3"></span>    <span class="ID">explored</span> = <span class="ResWord">set</span>() <span class="Comment"># set of states we have visited</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_13">  13</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_13"></span><span class="anchor" id="line-13-3"></span>    <span class="ID">frontier</span> = [ [<span class="ID">start</span>] ] <span class="Comment"># ordered list of paths we have blazed</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_14">  14</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_14"></span><span class="anchor" id="line-14-3"></span>    <span class="ResWord">while</span> <span class="ID">frontier</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_15">  15</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_15"></span><span class="anchor" id="line-15-3"></span>        <span class="ID">path</span> = <span class="ID">frontier</span>.<span class="ID">pop</span>(<span class="Number">0</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_16">  16</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_16"></span><span class="anchor" id="line-16-3"></span>        <span class="ID">s</span> = <span class="ID">path</span>[-<span class="Number">1</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_17">  17</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_17"></span><span class="anchor" id="line-17-3"></span>        <span class="ResWord">for</span> (<span class="ID">state</span>, <span class="ID">action</span>) <span class="ResWord">in</span> <span class="ID">csuccessors</span>(<span class="ID">s</span>).<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_18">  18</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_18"></span><span class="anchor" id="line-18-3"></span>            <span class="ResWord">if</span> <span class="ID">state</span> <span class="ResWord">not</span> <span class="ResWord">in</span> <span class="ID">explored</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_19">  19</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_19"></span><span class="anchor" id="line-19-3"></span>                <span class="ID">explored</span>.<span class="ID">add</span>(<span class="ID">state</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_20">  20</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_20"></span><span class="anchor" id="line-20-3"></span>                <span class="ID">path2</span> = <span class="ID">path</span> + [<span class="ID">action</span>, <span class="ID">state</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_21">  21</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_21"></span><span class="anchor" id="line-21-3"></span>                <span class="ResWord">if</span> <span class="ID">state</span> == <span class="ID">goal</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_22">  22</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_22"></span><span class="anchor" id="line-22-3"></span>                    <span class="ResWord">return</span> <span class="ID">path2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_23">  23</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_23"></span><span class="anchor" id="line-23-3"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_24">  24</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_24"></span><span class="anchor" id="line-24-3"></span>                    <span class="ID">frontier</span>.<span class="ID">append</span>(<span class="ID">path2</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_25">  25</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_25"></span><span class="anchor" id="line-25-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_26">  26</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_26"></span><span class="anchor" id="line-26-3"></span><span class="ResWord">def</span> <span class="ID">csuccessors</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_27">  27</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_27"></span><span class="anchor" id="line-27-3"></span>    <span class="Comment"># Norvig's solution, with a check to make sure no state has negative numbers.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_28">  28</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_28"></span><span class="anchor" id="line-28-3"></span>    <span class="String">"""Find successors (including those that result in dining) to this</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_29">  29</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_29"></span><span class="anchor" id="line-29-3"></span><span class="String">    state. But a state where the cannibals can dine has no successors."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_30">  30</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_30"></span><span class="anchor" id="line-30-3"></span>    <span class="ID">M1</span>, <span class="ID">C1</span>, <span class="ID">B1</span>, <span class="ID">M2</span>, <span class="ID">C2</span>, <span class="ID">B2</span> = <span class="ID">state</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_31">  31</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_31"></span><span class="anchor" id="line-31-3"></span>    <span class="Comment">## Check for state with no successors</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_32">  32</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_32"></span><span class="anchor" id="line-32-3"></span>    <span class="ResWord">if</span> <span class="ID">C1</span> &gt; <span class="ID">M1</span> &gt; <span class="Number">0</span> <span class="ResWord">or</span> <span class="ID">C2</span> &gt; <span class="ID">M2</span> &gt; <span class="Number">0</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_33">  33</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_33"></span><span class="anchor" id="line-33-3"></span>        <span class="ResWord">return</span> {}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_34">  34</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_34"></span><span class="anchor" id="line-34-3"></span>    <span class="ID">items</span> = []</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_35">  35</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_35"></span><span class="anchor" id="line-35-3"></span>    <span class="ResWord">if</span> <span class="ID">B1</span> &gt; <span class="Number">0</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_36">  36</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_36"></span><span class="anchor" id="line-36-3"></span>        <span class="ResWord">for</span> <span class="ID">delta</span>, <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">deltas</span>.<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_37">  37</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_37"></span><span class="anchor" id="line-37-3"></span>            <span class="ID">x</span> = <span class="ID">sub</span>(<span class="ID">state</span>, <span class="ID">delta</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_38">  38</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_38"></span><span class="anchor" id="line-38-3"></span>            <span class="ResWord">if</span> <span class="ResWord">all</span>(<span class="ID">val</span> &gt;= <span class="Number">0</span> <span class="ResWord">for</span> <span class="ID">val</span> <span class="ResWord">in</span> <span class="ID">x</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_39">  39</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_39"></span><span class="anchor" id="line-39-3"></span>                <span class="ID">items</span>.<span class="ID">append</span>((<span class="ID">sub</span>(<span class="ID">state</span>, <span class="ID">delta</span>), <span class="ID">a</span> + <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_40">  40</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_40"></span><span class="anchor" id="line-40-3"></span>    <span class="ResWord">if</span> <span class="ID">B2</span> &gt; <span class="Number">0</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_41">  41</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_41"></span><span class="anchor" id="line-41-3"></span>        <span class="ResWord">for</span> <span class="ID">delta</span>, <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">deltas</span>.<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_42">  42</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_42"></span><span class="anchor" id="line-42-3"></span>            <span class="ID">x</span> = <span class="ID">add</span>(<span class="ID">state</span>, <span class="ID">delta</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_43">  43</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_43"></span><span class="anchor" id="line-43-3"></span>            <span class="ResWord">if</span> <span class="ResWord">all</span>(<span class="ID">val</span> &gt;= <span class="Number">0</span> <span class="ResWord">for</span> <span class="ID">val</span> <span class="ResWord">in</span> <span class="ID">x</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_44">  44</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_44"></span><span class="anchor" id="line-44-3"></span>                <span class="ID">items</span>.<span class="ID">append</span>((<span class="ID">add</span>(<span class="ID">state</span>, <span class="ID">delta</span>), <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span> + <span class="ID">a</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_45">  45</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_45"></span><span class="anchor" id="line-45-3"></span>    <span class="ResWord">return</span> <span class="ResWord">dict</span>(<span class="ID">items</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_46">  46</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_46"></span><span class="anchor" id="line-46-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_47">  47</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_47"></span><span class="anchor" id="line-47-3"></span><span class="ID">deltas</span> = {</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_48">  48</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_48"></span><span class="anchor" id="line-48-3"></span>    (<span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">1</span>,   -<span class="Number">2</span>,  <span class="Number">0</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">MM</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_49">  49</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_49"></span><span class="anchor" id="line-49-3"></span>    (<span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">1</span>,    <span class="Number">0</span>, -<span class="Number">2</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">CC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_50">  50</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_50"></span><span class="anchor" id="line-50-3"></span>    (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>,   -<span class="Number">1</span>, -<span class="Number">1</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">MC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_51">  51</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_51"></span><span class="anchor" id="line-51-3"></span>    (<span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>,   -<span class="Number">1</span>,  <span class="Number">0</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">M</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_52">  52</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_52"></span><span class="anchor" id="line-52-3"></span>    (<span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>,    <span class="Number">0</span>, -<span class="Number">1</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">C</span><span class="String">'</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_53">  53</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_53"></span><span class="anchor" id="line-53-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_54">  54</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_54"></span><span class="anchor" id="line-54-3"></span><span class="ResWord">def</span> <span class="ID">add</span>(<span class="ID">X</span>, <span class="ID">Y</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_55">  55</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_55"></span><span class="anchor" id="line-55-3"></span>    <span class="String">"</span><span class="String">add two vectors, X and Y.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_56">  56</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_56"></span><span class="anchor" id="line-56-3"></span>    <span class="ResWord">return</span> <span class="ResWord">tuple</span>(<span class="ID">x</span>+<span class="ID">y</span> <span class="ResWord">for</span> <span class="ID">x</span>, <span class="ID">y</span> <span class="ResWord">in</span> <span class="ResWord">zip</span>(<span class="ID">X</span>, <span class="ID">Y</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_57">  57</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_57"></span><span class="anchor" id="line-57-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_58">  58</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_58"></span><span class="anchor" id="line-58-3"></span><span class="ResWord">def</span> <span class="ID">sub</span>(<span class="ID">X</span>, <span class="ID">Y</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_59">  59</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_59"></span><span class="anchor" id="line-59-3"></span>    <span class="String">"</span><span class="String">subtract two vectors, X and Y.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_60">  60</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_60"></span><span class="anchor" id="line-60-3"></span>    <span class="ResWord">return</span> <span class="ResWord">tuple</span>(<span class="ID">x</span>-<span class="ID">y</span> <span class="ResWord">for</span> <span class="ID">x</span>, <span class="ID">y</span> <span class="ResWord">in</span> <span class="ResWord">zip</span>(<span class="ID">X</span>, <span class="ID">Y</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_61">  61</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_61"></span><span class="anchor" id="line-61-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_62">  62</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_62"></span><span class="anchor" id="line-62-3"></span><span class="ResWord">def</span> <span class="ID">test</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_63">  63</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_63"></span><span class="anchor" id="line-63-3"></span>    <span class="String">"""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_64">  64</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_64"></span><span class="anchor" id="line-64-3"></span><span class="String">    &gt;&gt;&gt; mc_problem((1, 2, 1, 0, 0, 0))</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_65">  65</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_65"></span><span class="anchor" id="line-65-3"></span><span class="String"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_66">  66</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_66"></span><span class="anchor" id="line-66-3"></span><span class="String">    """</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_67">  67</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_67"></span><span class="anchor" id="line-67-3"></span>    <span class="ResWord">assert</span> <span class="ID">csuccessors</span>((<span class="Number">2</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>)) == {(<span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>): <span class="String">'</span><span class="String">C-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_68">  68</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_68"></span><span class="anchor" id="line-68-3"></span>                                               (<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>): <span class="String">'</span><span class="String">M-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_69">  69</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_69"></span><span class="anchor" id="line-69-3"></span>                                               (<span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">1</span>): <span class="String">'</span><span class="String">MM-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_70">  70</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_70"></span><span class="anchor" id="line-70-3"></span>                                               (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>): <span class="String">'</span><span class="String">MC-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_71">  71</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_71"></span><span class="anchor" id="line-71-3"></span>                                               (<span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">1</span>): <span class="String">'</span><span class="String">CC-&gt;</span><span class="String">'</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_72">  72</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_72"></span><span class="anchor" id="line-72-2"></span>    <span class="ResWord">assert</span> <span class="ID">csuccessors</span>((<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">4</span>, <span class="Number">3</span>, <span class="Number">1</span>)) == {(<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">4</span>, <span class="Number">2</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_73">  73</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_73"></span><span class="anchor" id="line-73-2"></span>                                               (<span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">3</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-M</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_74">  74</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_74"></span><span class="anchor" id="line-74-2"></span>                                               (<span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">3</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-MM</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_75">  75</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_75"></span><span class="anchor" id="line-75-2"></span>                                               (<span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">4</span>, <span class="Number">1</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-CC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_76">  76</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_76"></span><span class="anchor" id="line-76-2"></span>                                               (<span class="Number">2</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">2</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-MC</span><span class="String">'</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_77">  77</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_77"></span><span class="anchor" id="line-77-2"></span>    <span class="ResWord">assert</span> <span class="ID">csuccessors</span>((<span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">4</span>, <span class="Number">1</span>, <span class="Number">1</span>)) == {(<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">4</span>, <span class="Number">0</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_78">  78</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_78"></span><span class="anchor" id="line-78-2"></span>                                               (<span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-M</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_79">  79</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_79"></span><span class="anchor" id="line-79-2"></span>                                               (<span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">0</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-MC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_80">  80</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_80"></span><span class="anchor" id="line-80-2"></span>                                               (<span class="Number">3</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">0</span>): <span class="String">'</span><span class="String">&lt;-MM</span><span class="String">'</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_81">  81</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_81"></span><span class="anchor" id="line-81-2"></span>    <span class="ResWord">assert</span> <span class="ID">csuccessors</span>((<span class="Number">1</span>, <span class="Number">4</span>, <span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">2</span>, <span class="Number">0</span>)) == {}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_82">  82</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_82"></span><span class="anchor" id="line-82-2"></span>    <span class="ResWord">assert</span> <span class="ID">mc_problem</span>((<span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>)) == [(<span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">M-&gt;</span><span class="String">'</span>, (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_83">  83</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_83"></span><span class="anchor" id="line-83-2"></span>    <span class="ResWord">assert</span> <span class="ID">mc_problem</span>((<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>)) == [(<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">MC-&gt;</span><span class="String">'</span>, (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_84">  84</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_84"></span><span class="anchor" id="line-84-2"></span>    <span class="ResWord">assert</span> <span class="ID">mc_problem</span>((<span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>)) == [(<span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">MC-&gt;</span><span class="String">'</span>, (<span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>), <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>, (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">MC-&gt;</span><span class="String">'</span>, (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">1</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_85">  85</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_85"></span><span class="anchor" id="line-85-2"></span>    <span class="ResWord">assert</span> <span class="ID">mc_problem</span>((<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>)) == <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_86">  86</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_86"></span><span class="anchor" id="line-86-2"></span>    <span class="ResWord">return</span> <span class="String">'</span><span class="String">tests pass</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_87">  87</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_87"></span><span class="anchor" id="line-87-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_88">  88</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_88"></span><span class="anchor" id="line-88-2"></span><span class="ResWord">print</span>(<span class="ID">doctest</span>.<span class="ID">testmod</span>())</span>
<span class="line"><span class="LineNumber"><a href="#CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_89">  89</a> </span><span class="LineAnchor" id="CA-b8b061b3cc53860b7d9744ef7802ae9764cb69a3_89"></span><span class="anchor" id="line-89-2"></span><span class="ResWord">print</span> <span class="ID">test</span>()</span>
</pre></div></div><span class="anchor" id="line-392"></span><p class="line867">
</p><h2 id="search.py">4. search.py</h2>
<span class="anchor" id="line-393"></span><p class="line867"><span class="anchor" id="line-394"></span><span class="anchor" id="line-395"></span><span class="anchor" id="line-396"></span><span class="anchor" id="line-397"></span><span class="anchor" id="line-398"></span><span class="anchor" id="line-399"></span><span class="anchor" id="line-400"></span><span class="anchor" id="line-401"></span><span class="anchor" id="line-402"></span><span class="anchor" id="line-403"></span><span class="anchor" id="line-404"></span><span class="anchor" id="line-405"></span><span class="anchor" id="line-406"></span><span class="anchor" id="line-407"></span><span class="anchor" id="line-408"></span><span class="anchor" id="line-409"></span><span class="anchor" id="line-410"></span><span class="anchor" id="line-411"></span><span class="anchor" id="line-412"></span><span class="anchor" id="line-413"></span><span class="anchor" id="line-414"></span><span class="anchor" id="line-415"></span><span class="anchor" id="line-416"></span><span class="anchor" id="line-417"></span><span class="anchor" id="line-418"></span><span class="anchor" id="line-419"></span><span class="anchor" id="line-420"></span><span class="anchor" id="line-421"></span><span class="anchor" id="line-422"></span><span class="anchor" id="line-423"></span><span class="anchor" id="line-424"></span><span class="anchor" id="line-425"></span><span class="anchor" id="line-426"></span><span class="anchor" id="line-427"></span><span class="anchor" id="line-428"></span><span class="anchor" id="line-429"></span><span class="anchor" id="line-430"></span><span class="anchor" id="line-431"></span><span class="anchor" id="line-432"></span><span class="anchor" id="line-433"></span><span class="anchor" id="line-434"></span><span class="anchor" id="line-435"></span><span class="anchor" id="line-436"></span><span class="anchor" id="line-437"></span><span class="anchor" id="line-438"></span><span class="anchor" id="line-439"></span><span class="anchor" id="line-440"></span><span class="anchor" id="line-441"></span><span class="anchor" id="line-442"></span><span class="anchor" id="line-443"></span><span class="anchor" id="line-444"></span><span class="anchor" id="line-445"></span><span class="anchor" id="line-446"></span><span class="anchor" id="line-447"></span><span class="anchor" id="line-448"></span><span class="anchor" id="line-449"></span><span class="anchor" id="line-450"></span><span class="anchor" id="line-451"></span><span class="anchor" id="line-452"></span><span class="anchor" id="line-453"></span><span class="anchor" id="line-454"></span><span class="anchor" id="line-455"></span><span class="anchor" id="line-456"></span><span class="anchor" id="line-457"></span><span class="anchor" id="line-458"></span><span class="anchor" id="line-459"></span><span class="anchor" id="line-460"></span><span class="anchor" id="line-461"></span><span class="anchor" id="line-462"></span><span class="anchor" id="line-463"></span><span class="anchor" id="line-464"></span><span class="anchor" id="line-465"></span><span class="anchor" id="line-466"></span><span class="anchor" id="line-467"></span><span class="anchor" id="line-468"></span><span class="anchor" id="line-469"></span><span class="anchor" id="line-470"></span><span class="anchor" id="line-471"></span><span class="anchor" id="line-472"></span><span class="anchor" id="line-473"></span><span class="anchor" id="line-474"></span><span class="anchor" id="line-475"></span><span class="anchor" id="line-476"></span><span class="anchor" id="line-477"></span><span class="anchor" id="line-478"></span><span class="anchor" id="line-479"></span><span class="anchor" id="line-480"></span><span class="anchor" id="line-481"></span><span class="anchor" id="line-482"></span><span class="anchor" id="line-483"></span><span class="anchor" id="line-484"></span><span class="anchor" id="line-485"></span><span class="anchor" id="line-486"></span><span class="anchor" id="line-487"></span><span class="anchor" id="line-488"></span><span class="anchor" id="line-489"></span><span class="anchor" id="line-490"></span><span class="anchor" id="line-491"></span><span class="anchor" id="line-492"></span><span class="anchor" id="line-493"></span><span class="anchor" id="line-494"></span><span class="anchor" id="line-495"></span><span class="anchor" id="line-496"></span><span class="anchor" id="line-497"></span><span class="anchor" id="line-498"></span><span class="anchor" id="line-499"></span><span class="anchor" id="line-500"></span><span class="anchor" id="line-501"></span><span class="anchor" id="line-502"></span><span class="anchor" id="line-503"></span><span class="anchor" id="line-504"></span><span class="anchor" id="line-505"></span><span class="anchor" id="line-506"></span><span class="anchor" id="line-507"></span><span class="anchor" id="line-508"></span><span class="anchor" id="line-509"></span><span class="anchor" id="line-510"></span><span class="anchor" id="line-511"></span><span class="anchor" id="line-512"></span><span class="anchor" id="line-513"></span><span class="anchor" id="line-514"></span><span class="anchor" id="line-515"></span><span class="anchor" id="line-516"></span><span class="anchor" id="line-517"></span><span class="anchor" id="line-518"></span><span class="anchor" id="line-519"></span><span class="anchor" id="line-520"></span><span class="anchor" id="line-521"></span><span class="anchor" id="line-522"></span><span class="anchor" id="line-523"></span><span class="anchor" id="line-524"></span><span class="anchor" id="line-525"></span><span class="anchor" id="line-526"></span><span class="anchor" id="line-527"></span><span class="anchor" id="line-528"></span><span class="anchor" id="line-529"></span><span class="anchor" id="line-530"></span><span class="anchor" id="line-531"></span><span class="anchor" id="line-532"></span><span class="anchor" id="line-533"></span><span class="anchor" id="line-534"></span><span class="anchor" id="line-535"></span><span class="anchor" id="line-536"></span><span class="anchor" id="line-537"></span><span class="anchor" id="line-538"></span><span class="anchor" id="line-539"></span><span class="anchor" id="line-540"></span><span class="anchor" id="line-541"></span><span class="anchor" id="line-542"></span><span class="anchor" id="line-543"></span><span class="anchor" id="line-544"></span><span class="anchor" id="line-545"></span><span class="anchor" id="line-546"></span><span class="anchor" id="line-547"></span><span class="anchor" id="line-548"></span><span class="anchor" id="line-549"></span><span class="anchor" id="line-550"></span><span class="anchor" id="line-551"></span><span class="anchor" id="line-552"></span><span class="anchor" id="line-553"></span><span class="anchor" id="line-554"></span><span class="anchor" id="line-555"></span><span class="anchor" id="line-556"></span><span class="anchor" id="line-557"></span><span class="anchor" id="line-558"></span><span class="anchor" id="line-559"></span><span class="anchor" id="line-560"></span><span class="anchor" id="line-561"></span><span class="anchor" id="line-562"></span><span class="anchor" id="line-563"></span><span class="anchor" id="line-564"></span><span class="anchor" id="line-565"></span><span class="anchor" id="line-566"></span><span class="anchor" id="line-567"></span><span class="anchor" id="line-568"></span><span class="anchor" id="line-569"></span><span class="anchor" id="line-570"></span><span class="anchor" id="line-571"></span><span class="anchor" id="line-572"></span><span class="anchor" id="line-573"></span><span class="anchor" id="line-574"></span><span class="anchor" id="line-575"></span><span class="anchor" id="line-576"></span><span class="anchor" id="line-577"></span><span class="anchor" id="line-578"></span><span class="anchor" id="line-579"></span><span class="anchor" id="line-580"></span><span class="anchor" id="line-581"></span><span class="anchor" id="line-582"></span><span class="anchor" id="line-583"></span><span class="anchor" id="line-584"></span><span class="anchor" id="line-585"></span><span class="anchor" id="line-586"></span><span class="anchor" id="line-587"></span><span class="anchor" id="line-588"></span><span class="anchor" id="line-589"></span><span class="anchor" id="line-590"></span><span class="anchor" id="line-591"></span><span class="anchor" id="line-592"></span><span class="anchor" id="line-593"></span><span class="anchor" id="line-594"></span><span class="anchor" id="line-595"></span><span class="anchor" id="line-596"></span><span class="anchor" id="line-597"></span><span class="anchor" id="line-598"></span><span class="anchor" id="line-599"></span><span class="anchor" id="line-600"></span><span class="anchor" id="line-601"></span><span class="anchor" id="line-602"></span><span class="anchor" id="line-603"></span><span class="anchor" id="line-604"></span><span class="anchor" id="line-605"></span><span class="anchor" id="line-606"></span><span class="anchor" id="line-607"></span><span class="anchor" id="line-608"></span><span class="anchor" id="line-609"></span><span class="anchor" id="line-1-7"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_1">   1</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_1"></span><span class="anchor" id="line-1-8"></span><span class="ResWord">def</span> <span class="ID">shortest_path_search</span>(<span class="ID">start</span>, <span class="ID">successors</span>, <span class="ID">is_goal</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_2">   2</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_2"></span><span class="anchor" id="line-2-4"></span>    <span class="String">"""Find the shortest path from start state to a state</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_3">   3</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_3"></span><span class="anchor" id="line-3-4"></span><span class="String">    such that is_goal(state) is true."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_4">   4</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_4"></span><span class="anchor" id="line-4-4"></span>    <span class="ResWord">if</span> <span class="ID">is_goal</span>(<span class="ID">start</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_5">   5</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_5"></span><span class="anchor" id="line-5-4"></span>        <span class="ResWord">return</span> [<span class="ID">start</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_6">   6</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_6"></span><span class="anchor" id="line-6-4"></span>    <span class="ID">explored</span> = <span class="ResWord">set</span>() <span class="Comment"># set of states we have visited</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_7">   7</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_7"></span><span class="anchor" id="line-7-4"></span>    <span class="ID">frontier</span> = [ [<span class="ID">start</span>] ] <span class="Comment"># ordered list of paths we have blazed</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_8">   8</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_8"></span><span class="anchor" id="line-8-4"></span>    <span class="ResWord">while</span> <span class="ID">frontier</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_9">   9</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_9"></span><span class="anchor" id="line-9-4"></span>        <span class="ID">path</span> = <span class="ID">frontier</span>.<span class="ID">pop</span>(<span class="Number">0</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_10">  10</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_10"></span><span class="anchor" id="line-10-4"></span>        <span class="ID">s</span> = <span class="ID">path</span>[-<span class="Number">1</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_11">  11</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_11"></span><span class="anchor" id="line-11-4"></span>        <span class="ResWord">for</span> (<span class="ID">state</span>, <span class="ID">action</span>) <span class="ResWord">in</span> <span class="ID">successors</span>(<span class="ID">s</span>).<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_12">  12</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_12"></span><span class="anchor" id="line-12-4"></span>            <span class="ResWord">if</span> <span class="ID">state</span> <span class="ResWord">not</span> <span class="ResWord">in</span> <span class="ID">explored</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_13">  13</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_13"></span><span class="anchor" id="line-13-4"></span>                <span class="ID">explored</span>.<span class="ID">add</span>(<span class="ID">state</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_14">  14</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_14"></span><span class="anchor" id="line-14-4"></span>                <span class="ID">path2</span> = <span class="ID">path</span> + [<span class="ID">action</span>, <span class="ID">state</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_15">  15</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_15"></span><span class="anchor" id="line-15-4"></span>                <span class="ResWord">if</span> <span class="ID">is_goal</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_16">  16</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_16"></span><span class="anchor" id="line-16-4"></span>                    <span class="ResWord">return</span> <span class="ID">path2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_17">  17</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_17"></span><span class="anchor" id="line-17-4"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_18">  18</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_18"></span><span class="anchor" id="line-18-4"></span>                    <span class="ID">frontier</span>.<span class="ID">append</span>(<span class="ID">path2</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_19">  19</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_19"></span><span class="anchor" id="line-19-4"></span>    <span class="ResWord">return</span> <span class="ID">Fail</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_20">  20</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_20"></span><span class="anchor" id="line-20-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_21">  21</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_21"></span><span class="anchor" id="line-21-4"></span><span class="ID">Fail</span> = []</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_22">  22</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_22"></span><span class="anchor" id="line-22-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_23">  23</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_23"></span><span class="anchor" id="line-23-4"></span><span class="Comment">################################################################################</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_24">  24</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_24"></span><span class="anchor" id="line-24-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_25">  25</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_25"></span><span class="anchor" id="line-25-4"></span><span class="ResWord">def</span> <span class="ID">lowest_cost_search</span>(<span class="ID">start</span>, <span class="ID">successors</span>, <span class="ID">is_goal</span>, <span class="ID">action_cost</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_26">  26</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_26"></span><span class="anchor" id="line-26-4"></span>    <span class="String">"""Return the lowest cost path, starting from start state,</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_27">  27</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_27"></span><span class="anchor" id="line-27-4"></span><span class="String">    and considering successors(state) =&gt; {state:action,...},</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_28">  28</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_28"></span><span class="anchor" id="line-28-4"></span><span class="String">    that ends in a state for which is_goal(state) is true,</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_29">  29</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_29"></span><span class="anchor" id="line-29-4"></span><span class="String">    where the cost of a path is the sum of action costs,</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_30">  30</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_30"></span><span class="anchor" id="line-30-4"></span><span class="String">    which are given by action_cost(action)."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_31">  31</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_31"></span><span class="anchor" id="line-31-4"></span>    <span class="ID">explored</span> = <span class="ResWord">set</span>() <span class="Comment"># set of states we have visited</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_32">  32</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_32"></span><span class="anchor" id="line-32-4"></span>    <span class="ID">frontier</span> = [ [<span class="ID">start</span>] ] <span class="Comment"># ordered list of paths we have blazed</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_33">  33</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_33"></span><span class="anchor" id="line-33-4"></span>    <span class="ResWord">while</span> <span class="ID">frontier</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_34">  34</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_34"></span><span class="anchor" id="line-34-4"></span>        <span class="ID">path</span> = <span class="ID">frontier</span>.<span class="ID">pop</span>(<span class="Number">0</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_35">  35</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_35"></span><span class="anchor" id="line-35-4"></span>        <span class="ID">state1</span> = <span class="ID">final_state</span>(<span class="ID">path</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_36">  36</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_36"></span><span class="anchor" id="line-36-4"></span>        <span class="ResWord">if</span> <span class="ID">is_goal</span>(<span class="ID">state1</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_37">  37</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_37"></span><span class="anchor" id="line-37-4"></span>            <span class="ResWord">return</span> <span class="ID">path</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_38">  38</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_38"></span><span class="anchor" id="line-38-4"></span>        <span class="ID">explored</span>.<span class="ID">add</span>(<span class="ID">state1</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_39">  39</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_39"></span><span class="anchor" id="line-39-4"></span>        <span class="ID">pcost</span> = <span class="ID">path_cost</span>(<span class="ID">path</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_40">  40</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_40"></span><span class="anchor" id="line-40-4"></span>        <span class="ResWord">for</span> (<span class="ID">state</span>, <span class="ID">action</span>) <span class="ResWord">in</span> <span class="ID">successors</span>(<span class="ID">state1</span>).<span class="ID">items</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_41">  41</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_41"></span><span class="anchor" id="line-41-4"></span>            <span class="ResWord">if</span> <span class="ID">state</span> <span class="ResWord">not</span> <span class="ResWord">in</span> <span class="ID">explored</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_42">  42</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_42"></span><span class="anchor" id="line-42-4"></span>                <span class="ID">total_cost</span> = <span class="ID">pcost</span> + <span class="ID">action_cost</span>(<span class="ID">action</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_43">  43</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_43"></span><span class="anchor" id="line-43-4"></span>                <span class="ID">path2</span> = <span class="ID">path</span> + [(<span class="ID">action</span>, <span class="ID">total_cost</span>), <span class="ID">state</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_44">  44</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_44"></span><span class="anchor" id="line-44-4"></span>                <span class="ID">add_to_frontier</span>(<span class="ID">frontier</span>, <span class="ID">path2</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_45">  45</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_45"></span><span class="anchor" id="line-45-4"></span>    <span class="ResWord">return</span> <span class="ID">Fail</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_46">  46</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_46"></span><span class="anchor" id="line-46-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_47">  47</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_47"></span><span class="anchor" id="line-47-4"></span><span class="ResWord">def</span> <span class="ID">final_state</span>(<span class="ID">path</span>): <span class="ResWord">return</span> <span class="ID">path</span>[-<span class="Number">1</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_48">  48</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_48"></span><span class="anchor" id="line-48-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_49">  49</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_49"></span><span class="anchor" id="line-49-4"></span><span class="ResWord">def</span> <span class="ID">path_cost</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_50">  50</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_50"></span><span class="anchor" id="line-50-4"></span>    <span class="String">"</span><span class="String">The total cost of a path (which is stored in a tuple with the final action).</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_51">  51</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_51"></span><span class="anchor" id="line-51-4"></span>    <span class="ResWord">if</span> <span class="ResWord">len</span>(<span class="ID">path</span>) &lt; <span class="Number">3</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_52">  52</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_52"></span><span class="anchor" id="line-52-4"></span>        <span class="ResWord">return</span> <span class="Number">0</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_53">  53</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_53"></span><span class="anchor" id="line-53-4"></span>    <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_54">  54</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_54"></span><span class="anchor" id="line-54-4"></span>        <span class="ID">action</span>, <span class="ID">total_cost</span> = <span class="ID">path</span>[-<span class="Number">2</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_55">  55</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_55"></span><span class="anchor" id="line-55-4"></span>        <span class="ResWord">return</span> <span class="ID">total_cost</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_56">  56</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_56"></span><span class="anchor" id="line-56-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_57">  57</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_57"></span><span class="anchor" id="line-57-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_58">  58</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_58"></span><span class="anchor" id="line-58-4"></span><span class="ResWord">def</span> <span class="ID">add_to_frontier</span>(<span class="ID">frontier</span>, <span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_59">  59</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_59"></span><span class="anchor" id="line-59-4"></span>    <span class="String">"</span><span class="String">Add path to frontier, replacing costlier path if there is one.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_60">  60</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_60"></span><span class="anchor" id="line-60-4"></span>    <span class="Comment"># (This could be done more efficiently.)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_61">  61</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_61"></span><span class="anchor" id="line-61-4"></span>    <span class="Comment"># Find if there is an old path to the final state of this path.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_62">  62</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_62"></span><span class="anchor" id="line-62-4"></span>    <span class="ID">old</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_63">  63</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_63"></span><span class="anchor" id="line-63-4"></span>    <span class="ResWord">for</span> <span class="ID">i</span>, <span class="ID">p</span> <span class="ResWord">in</span> <span class="ResWord">enumerate</span>(<span class="ID">frontier</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_64">  64</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_64"></span><span class="anchor" id="line-64-4"></span>        <span class="ResWord">if</span> <span class="ID">final_state</span>(<span class="ID">p</span>) == <span class="ID">final_state</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_65">  65</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_65"></span><span class="anchor" id="line-65-4"></span>            <span class="ID">old</span> = <span class="ID">i</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_66">  66</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_66"></span><span class="anchor" id="line-66-4"></span>            <span class="ResWord">break</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_67">  67</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_67"></span><span class="anchor" id="line-67-4"></span>    <span class="ResWord">if</span> <span class="ID">old</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="ResWord">None</span> <span class="ResWord">and</span> <span class="ID">path_cost</span>(<span class="ID">frontier</span>[<span class="ID">old</span>]) &lt; <span class="ID">path_cost</span>(<span class="ID">path</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_68">  68</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_68"></span><span class="anchor" id="line-68-4"></span>        <span class="ResWord">return</span> <span class="Comment"># Old path was better; do nothing</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_69">  69</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_69"></span><span class="anchor" id="line-69-4"></span>    <span class="ResWord">elif</span> <span class="ID">old</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="ResWord">None</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_70">  70</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_70"></span><span class="anchor" id="line-70-4"></span>        <span class="ResWord">del</span> <span class="ID">frontier</span>[<span class="ID">old</span>] <span class="Comment"># Old path was worse; delete it</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_71">  71</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_71"></span><span class="anchor" id="line-71-4"></span>    <span class="Comment">## Now add the new path and re-sort</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_72">  72</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_72"></span><span class="anchor" id="line-72-3"></span>    <span class="ID">frontier</span>.<span class="ID">append</span>(<span class="ID">path</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_73">  73</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_73"></span><span class="anchor" id="line-73-3"></span>    <span class="ID">frontier</span>.<span class="ID">sort</span>(<span class="ID">key</span> = <span class="ID">path_cost</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_74">  74</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_74"></span><span class="anchor" id="line-74-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_75">  75</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_75"></span><span class="anchor" id="line-75-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_76">  76</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_76"></span><span class="anchor" id="line-76-3"></span><span class="Comment">################################################################################</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_77">  77</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_77"></span><span class="anchor" id="line-77-3"></span><span class="Comment">## Example: Solving the bridge problem using lowest_cost_search</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_78">  78</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_78"></span><span class="anchor" id="line-78-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_79">  79</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_79"></span><span class="anchor" id="line-79-3"></span><span class="ResWord">def</span> <span class="ID">bridge_problem3</span>(<span class="ID">here</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_80">  80</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_80"></span><span class="anchor" id="line-80-3"></span>    <span class="String">"""Find the fastest (least elapsed time) path to</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_81">  81</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_81"></span><span class="anchor" id="line-81-3"></span><span class="String">    the goal in the bridge problem."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_82">  82</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_82"></span><span class="anchor" id="line-82-3"></span>    <span class="ID">here</span> = <span class="ResWord">frozenset</span>(<span class="ID">here</span>) | <span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>])</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_83">  83</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_83"></span><span class="anchor" id="line-83-3"></span>    <span class="ID">state</span> = (<span class="ID">here</span>, <span class="ResWord">frozenset</span>())</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_84">  84</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_84"></span><span class="anchor" id="line-84-3"></span>    <span class="ResWord">return</span> <span class="ID">lowest_cost_search</span>(<span class="ID">state</span>, <span class="ID">bsuccessors2</span>, <span class="ID">is_goal</span>, <span class="ID">bcost</span>)    </span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_85">  85</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_85"></span><span class="anchor" id="line-85-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_86">  86</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_86"></span><span class="anchor" id="line-86-3"></span><span class="ResWord">def</span> <span class="ID">is_goal</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_87">  87</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_87"></span><span class="anchor" id="line-87-3"></span>    <span class="ID">here</span>, <span class="ID">there</span> = <span class="ID">state</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_88">  88</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_88"></span><span class="anchor" id="line-88-3"></span>    <span class="ResWord">return</span> <span class="ResWord">not</span> <span class="ID">here</span> <span class="ResWord">or</span> (<span class="ResWord">len</span>(<span class="ID">here</span>) == <span class="Number">1</span> <span class="ResWord">and</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span> <span class="ResWord">in</span> <span class="ID">here</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_89">  89</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_89"></span><span class="anchor" id="line-89-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_90">  90</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_90"></span><span class="anchor" id="line-90-2"></span><span class="ResWord">def</span> <span class="ID">bsuccessors2</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_91">  91</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_91"></span><span class="anchor" id="line-91-2"></span>    <span class="String">"""Return a dict of {state:action} pairs.  A state is a (here, there) tuple,</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_92">  92</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_92"></span><span class="anchor" id="line-92-2"></span><span class="String">    where here and there are frozensets of people (indicated by their times) and/or</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_93">  93</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_93"></span><span class="anchor" id="line-93-2"></span><span class="String">    the light."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_94">  94</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_94"></span><span class="anchor" id="line-94-2"></span>    <span class="ID">here</span>, <span class="ID">there</span> = <span class="ID">state</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_95">  95</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_95"></span><span class="anchor" id="line-95-2"></span>    <span class="ResWord">if</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span> <span class="ResWord">in</span> <span class="ID">here</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_96">  96</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_96"></span><span class="anchor" id="line-96-2"></span>        <span class="ResWord">return</span> <span class="ResWord">dict</span>(((<span class="ID">here</span>  - <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_97">  97</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_97"></span><span class="anchor" id="line-97-2"></span>                      <span class="ID">there</span> | <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_98">  98</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_98"></span><span class="anchor" id="line-98-2"></span>                     (<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_99">  99</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_99"></span><span class="anchor" id="line-99-2"></span>                    <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">here</span> <span class="ResWord">if</span> <span class="ID">a</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_100"> 100</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_100"></span><span class="anchor" id="line-100-2"></span>                    <span class="ResWord">for</span> <span class="ID">b</span> <span class="ResWord">in</span> <span class="ID">here</span> <span class="ResWord">if</span> <span class="ID">b</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_101"> 101</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_101"></span><span class="anchor" id="line-101-2"></span>    <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_102"> 102</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_102"></span><span class="anchor" id="line-102-2"></span>        <span class="ResWord">return</span> <span class="ResWord">dict</span>(((<span class="ID">here</span>  | <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_103"> 103</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_103"></span><span class="anchor" id="line-103-2"></span>                      <span class="ID">there</span> - <span class="ResWord">frozenset</span>([<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_104"> 104</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_104"></span><span class="anchor" id="line-104-2"></span>                     (<span class="ID">a</span>, <span class="ID">b</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_105"> 105</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_105"></span><span class="anchor" id="line-105-2"></span>                    <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">there</span> <span class="ResWord">if</span> <span class="ID">a</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_106"> 106</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_106"></span><span class="anchor" id="line-106-2"></span>                    <span class="ResWord">for</span> <span class="ID">b</span> <span class="ResWord">in</span> <span class="ID">there</span> <span class="ResWord">if</span> <span class="ID">b</span> <span class="ResWord">is</span> <span class="ResWord">not</span> <span class="String">'</span><span class="String">light</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_107"> 107</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_107"></span><span class="anchor" id="line-107-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_108"> 108</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_108"></span><span class="anchor" id="line-108-2"></span><span class="ResWord">def</span> <span class="ID">bcost</span>(<span class="ID">action</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_109"> 109</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_109"></span><span class="anchor" id="line-109-2"></span>    <span class="String">"</span><span class="String">Returns the cost (a number) of an action in the bridge problem.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_110"> 110</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_110"></span><span class="anchor" id="line-110-2"></span>    <span class="Comment"># An action is an (a, b, arrow) tuple; a and b are times; arrow is a string</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_111"> 111</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_111"></span><span class="anchor" id="line-111-2"></span>    <span class="ID">a</span>, <span class="ID">b</span>, <span class="ID">arrow</span> = <span class="ID">action</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_112"> 112</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_112"></span><span class="anchor" id="line-112-2"></span>    <span class="ResWord">return</span> <span class="ResWord">max</span>(<span class="ID">a</span>, <span class="ID">b</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_113"> 113</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_113"></span><span class="anchor" id="line-113-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_114"> 114</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_114"></span><span class="anchor" id="line-114-2"></span><span class="Comment">################################################################################</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_115"> 115</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_115"></span><span class="anchor" id="line-115-2"></span><span class="Comment">## Example: Solving the cannibal problem using shortest_path_search</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_116"> 116</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_116"></span><span class="anchor" id="line-116-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_117"> 117</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_117"></span><span class="anchor" id="line-117-2"></span><span class="ResWord">def</span> <span class="ID">mc_problem2</span>(<span class="ID">start</span> = (<span class="Number">3</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="ID">goal</span> = <span class="ResWord">None</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_118"> 118</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_118"></span><span class="anchor" id="line-118-2"></span>    <span class="ResWord">if</span> <span class="ID">goal</span> <span class="ResWord">is</span> <span class="ResWord">None</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_119"> 119</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_119"></span><span class="anchor" id="line-119-2"></span>        <span class="ID">goal</span> = (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>) + <span class="ID">start</span>[:<span class="Number">3</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_120"> 120</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_120"></span><span class="anchor" id="line-120-2"></span>    <span class="ResWord">def</span> <span class="ID">is_goal</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_121"> 121</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_121"></span><span class="anchor" id="line-121-2"></span>        <span class="ResWord">return</span> <span class="ID">state</span> == <span class="ID">goal</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_122"> 122</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_122"></span><span class="anchor" id="line-122-2"></span>    <span class="ResWord">return</span> <span class="ID">shortest_path_search</span>(<span class="ID">start</span>, <span class="ID">csuccessors</span>, <span class="ID">is_goal</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_123"> 123</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_123"></span><span class="anchor" id="line-123-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_124"> 124</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_124"></span><span class="anchor" id="line-124-2"></span><span class="ResWord">def</span> <span class="ID">csuccessors</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_125"> 125</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_125"></span><span class="anchor" id="line-125-2"></span>    <span class="String">"""Find successors (including those that result in dining) to this</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_126"> 126</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_126"></span><span class="anchor" id="line-126-2"></span><span class="String">    state. But a state where the cannibals can dine has no successors."""</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_127"> 127</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_127"></span><span class="anchor" id="line-127-2"></span>    <span class="ID">M1</span>, <span class="ID">C1</span>, <span class="ID">B1</span>, <span class="ID">M2</span>, <span class="ID">C2</span>, <span class="ID">B2</span> = <span class="ID">state</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_128"> 128</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_128"></span><span class="anchor" id="line-128-2"></span>    <span class="Comment">## Check for state with no successors</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_129"> 129</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_129"></span><span class="anchor" id="line-129-2"></span>    <span class="ResWord">if</span> <span class="ID">C1</span> &gt; <span class="ID">M1</span> &gt; <span class="Number">0</span> <span class="ResWord">or</span> <span class="ID">C2</span> &gt; <span class="ID">M2</span> &gt; <span class="Number">0</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_130"> 130</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_130"></span><span class="anchor" id="line-130-2"></span>        <span class="ResWord">return</span> {}</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_131"> 131</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_131"></span><span class="anchor" id="line-131-2"></span>    <span class="ID">items</span> = []</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_132"> 132</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_132"></span><span class="anchor" id="line-132-2"></span>    <span class="ResWord">if</span> <span class="ID">B1</span> &gt; <span class="Number">0</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_133"> 133</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_133"></span><span class="anchor" id="line-133-2"></span>        <span class="ID">items</span> += [(<span class="ID">sub</span>(<span class="ID">state</span>, <span class="ID">delta</span>), <span class="ID">a</span> + <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_134"> 134</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_134"></span><span class="anchor" id="line-134-2"></span>                  <span class="ResWord">for</span> <span class="ID">delta</span>, <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">deltas</span>.<span class="ID">items</span>()]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_135"> 135</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_135"></span><span class="anchor" id="line-135-2"></span>    <span class="ResWord">if</span> <span class="ID">B2</span> &gt; <span class="Number">0</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_136"> 136</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_136"></span><span class="anchor" id="line-136-2"></span>        <span class="ID">items</span> += [(<span class="ID">add</span>(<span class="ID">state</span>, <span class="ID">delta</span>), <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span> + <span class="ID">a</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_137"> 137</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_137"></span><span class="anchor" id="line-137-2"></span>                  <span class="ResWord">for</span> <span class="ID">delta</span>, <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">deltas</span>.<span class="ID">items</span>()]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_138"> 138</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_138"></span><span class="anchor" id="line-138-2"></span>    <span class="ResWord">return</span> <span class="ResWord">dict</span>(<span class="ID">items</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_139"> 139</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_139"></span><span class="anchor" id="line-139-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_140"> 140</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_140"></span><span class="anchor" id="line-140-2"></span><span class="ResWord">def</span> <span class="ID">add</span>(<span class="ID">X</span>, <span class="ID">Y</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_141"> 141</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_141"></span><span class="anchor" id="line-141-2"></span>    <span class="String">"</span><span class="String">add two vectors, X and Y.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_142"> 142</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_142"></span><span class="anchor" id="line-142-2"></span>    <span class="ResWord">return</span> <span class="ResWord">tuple</span>(<span class="ID">x</span>+<span class="ID">y</span> <span class="ResWord">for</span> <span class="ID">x</span>, <span class="ID">y</span> <span class="ResWord">in</span> <span class="ResWord">zip</span>(<span class="ID">X</span>, <span class="ID">Y</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_143"> 143</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_143"></span><span class="anchor" id="line-143-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_144"> 144</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_144"></span><span class="anchor" id="line-144-2"></span><span class="ResWord">def</span> <span class="ID">sub</span>(<span class="ID">X</span>, <span class="ID">Y</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_145"> 145</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_145"></span><span class="anchor" id="line-145-2"></span>    <span class="String">"</span><span class="String">subtract vector Y from X.</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_146"> 146</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_146"></span><span class="anchor" id="line-146-2"></span>    <span class="ResWord">return</span> <span class="ResWord">tuple</span>(<span class="ID">x</span>-<span class="ID">y</span> <span class="ResWord">for</span> <span class="ID">x</span>, <span class="ID">y</span> <span class="ResWord">in</span> <span class="ResWord">zip</span>(<span class="ID">X</span>, <span class="ID">Y</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_147"> 147</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_147"></span><span class="anchor" id="line-147-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_148"> 148</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_148"></span><span class="anchor" id="line-148-2"></span><span class="ID">deltas</span> = {(<span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">1</span>,    -<span class="Number">2</span>,  <span class="Number">0</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">MM</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_149"> 149</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_149"></span><span class="anchor" id="line-149-2"></span>          (<span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">1</span>,     <span class="Number">0</span>, -<span class="Number">2</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">CC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_150"> 150</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_150"></span><span class="anchor" id="line-150-2"></span>          (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>,    -<span class="Number">1</span>, -<span class="Number">1</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">MC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_151"> 151</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_151"></span><span class="anchor" id="line-151-2"></span>          (<span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>,    -<span class="Number">1</span>,  <span class="Number">0</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">M</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_152"> 152</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_152"></span><span class="anchor" id="line-152-2"></span>          (<span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>,     <span class="Number">0</span>, -<span class="Number">1</span>, -<span class="Number">1</span>): <span class="String">'</span><span class="String">C</span><span class="String">'</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_153"> 153</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_153"></span><span class="anchor" id="line-153-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_154"> 154</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_154"></span><span class="anchor" id="line-154-2"></span><span class="Comment">################################################################################</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_155"> 155</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_155"></span><span class="anchor" id="line-155-2"></span><span class="Comment">## Example: A simple problem solved with shortest_path_search</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_156"> 156</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_156"></span><span class="anchor" id="line-156-2"></span><span class="Comment">#</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_157"> 157</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_157"></span><span class="anchor" id="line-157-2"></span><span class="Comment"># Let's say the states in an optimization problem are given by integers.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_158"> 158</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_158"></span><span class="anchor" id="line-158-2"></span><span class="Comment"># From a state, i, the only possible successors are i+1 and i-1. Given</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_159"> 159</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_159"></span><span class="anchor" id="line-159-2"></span><span class="Comment"># a starting integer, find the shortest path to the integer 8.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_160"> 160</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_160"></span><span class="anchor" id="line-160-2"></span><span class="Comment">#</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_161"> 161</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_161"></span><span class="anchor" id="line-161-2"></span><span class="Comment"># This is an overly simple example of when we can use the</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_162"> 162</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_162"></span><span class="anchor" id="line-162-2"></span><span class="Comment"># shortest_path_search function. We just need to define the appropriate</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_163"> 163</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_163"></span><span class="anchor" id="line-163-2"></span><span class="Comment"># is_goal and successors functions.</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_164"> 164</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_164"></span><span class="anchor" id="line-164-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_165"> 165</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_165"></span><span class="anchor" id="line-165-2"></span><span class="ResWord">def</span> <span class="ID">is_goal</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_166"> 166</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_166"></span><span class="anchor" id="line-166-2"></span>    <span class="ResWord">if</span> <span class="ID">state</span> == <span class="Number">8</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_167"> 167</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_167"></span><span class="anchor" id="line-167-2"></span>        <span class="ResWord">return</span> <span class="ResWord">True</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_168"> 168</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_168"></span><span class="anchor" id="line-168-2"></span>    <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_169"> 169</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_169"></span><span class="anchor" id="line-169-2"></span>        <span class="ResWord">return</span> <span class="ResWord">False</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_170"> 170</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_170"></span><span class="anchor" id="line-170-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_171"> 171</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_171"></span><span class="anchor" id="line-171-2"></span><span class="ResWord">def</span> <span class="ID">successors</span>(<span class="ID">state</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_172"> 172</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_172"></span><span class="anchor" id="line-172-2"></span>    <span class="ID">successors</span> = {<span class="ID">state</span> + <span class="Number">1</span>: <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_173"> 173</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_173"></span><span class="anchor" id="line-173-2"></span>                  <span class="ID">state</span> - <span class="Number">1</span>: <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_174"> 174</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_174"></span><span class="anchor" id="line-174-2"></span>    <span class="ResWord">return</span> <span class="ID">successors</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_175"> 175</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_175"></span><span class="anchor" id="line-175-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_176"> 176</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_176"></span><span class="anchor" id="line-176-2"></span><span class="Comment"># shortest_path_search(5, successors, is_goal)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_177"> 177</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_177"></span><span class="anchor" id="line-177-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_178"> 178</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_178"></span><span class="anchor" id="line-178-2"></span><span class="Comment">################################################################################</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_179"> 179</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_179"></span><span class="anchor" id="line-179-2"></span><span class="Comment">## Tests</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_180"> 180</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_180"></span><span class="anchor" id="line-180-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_181"> 181</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_181"></span><span class="anchor" id="line-181-2"></span><span class="ResWord">def</span> <span class="ID">test</span>():</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_182"> 182</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_182"></span><span class="anchor" id="line-182-2"></span>    <span class="ID">here</span> = [<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">5</span>, <span class="Number">10</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_183"> 183</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_183"></span><span class="anchor" id="line-183-2"></span>    <span class="ResWord">assert</span> <span class="ID">bridge_problem3</span>(<span class="ID">here</span>) == [</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_184"> 184</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_184"></span><span class="anchor" id="line-184-2"></span>            (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_185"> 185</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_185"></span><span class="anchor" id="line-185-2"></span>            ((<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Number">2</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_186"> 186</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_186"></span><span class="anchor" id="line-186-2"></span>            (<span class="ResWord">frozenset</span>([<span class="Number">10</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_187"> 187</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_187"></span><span class="anchor" id="line-187-2"></span>            ((<span class="Number">2</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>), <span class="Number">4</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_188"> 188</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_188"></span><span class="anchor" id="line-188-2"></span>            (<span class="ResWord">frozenset</span>([<span class="String">'</span><span class="String">light</span><span class="String">'</span>, <span class="Number">10</span>, <span class="Number">2</span>, <span class="Number">5</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_189"> 189</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_189"></span><span class="anchor" id="line-189-2"></span>            ((<span class="Number">5</span>, <span class="Number">10</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Number">14</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_190"> 190</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_190"></span><span class="anchor" id="line-190-2"></span>            (<span class="ResWord">frozenset</span>([<span class="Number">2</span>]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_191"> 191</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_191"></span><span class="anchor" id="line-191-2"></span>            ((<span class="Number">1</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">&lt;-</span><span class="String">'</span>), <span class="Number">15</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_192"> 192</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_192"></span><span class="anchor" id="line-192-2"></span>            (<span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">2</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]), <span class="ResWord">frozenset</span>([<span class="Number">10</span>, <span class="Number">5</span>])),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_193"> 193</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_193"></span><span class="anchor" id="line-193-2"></span>            ((<span class="Number">2</span>, <span class="Number">1</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>), <span class="Number">17</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_194"> 194</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_194"></span><span class="anchor" id="line-194-2"></span>            (<span class="ResWord">frozenset</span>([]), <span class="ResWord">frozenset</span>([<span class="Number">1</span>, <span class="Number">10</span>, <span class="Number">2</span>, <span class="Number">5</span>, <span class="String">'</span><span class="String">light</span><span class="String">'</span>]))]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_195"> 195</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_195"></span><span class="anchor" id="line-195-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_196"> 196</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_196"></span><span class="anchor" id="line-196-2"></span>    <span class="ResWord">assert</span> <span class="ID">mc_problem2</span>(<span class="ID">start</span> = (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>)) == [</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_197"> 197</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_197"></span><span class="anchor" id="line-197-2"></span>                             (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">MC-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_198"> 198</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_198"></span><span class="anchor" id="line-198-2"></span>                             (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_199"> 199</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_199"></span><span class="anchor" id="line-199-2"></span>    <span class="ResWord">assert</span> <span class="ID">mc_problem2</span>() == [(<span class="Number">3</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">CC-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_200"> 200</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_200"></span><span class="anchor" id="line-200-2"></span>                             (<span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">1</span>), <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_201"> 201</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_201"></span><span class="anchor" id="line-201-2"></span>                             (<span class="Number">3</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">CC-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_202"> 202</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_202"></span><span class="anchor" id="line-202-2"></span>                             (<span class="Number">3</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">3</span>, <span class="Number">1</span>), <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_203"> 203</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_203"></span><span class="anchor" id="line-203-2"></span>                             (<span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">MM-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_204"> 204</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_204"></span><span class="anchor" id="line-204-2"></span>                             (<span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">2</span>, <span class="Number">1</span>), <span class="String">'</span><span class="String">&lt;-MC</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_205"> 205</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_205"></span><span class="anchor" id="line-205-2"></span>                             (<span class="Number">2</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">1</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">MM-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_206"> 206</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_206"></span><span class="anchor" id="line-206-2"></span>                             (<span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">0</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">1</span>), <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_207"> 207</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_207"></span><span class="anchor" id="line-207-2"></span>                             (<span class="Number">0</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">0</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">CC-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_208"> 208</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_208"></span><span class="anchor" id="line-208-1"></span>                             (<span class="Number">0</span>, <span class="Number">1</span>, <span class="Number">0</span>, <span class="Number">3</span>, <span class="Number">2</span>, <span class="Number">1</span>), <span class="String">'</span><span class="String">&lt;-C</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_209"> 209</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_209"></span><span class="anchor" id="line-209-1"></span>                             (<span class="Number">0</span>, <span class="Number">2</span>, <span class="Number">1</span>, <span class="Number">3</span>, <span class="Number">1</span>, <span class="Number">0</span>), <span class="String">'</span><span class="String">CC-&gt;</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_210"> 210</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_210"></span><span class="anchor" id="line-210-1"></span>                             (<span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">0</span>, <span class="Number">3</span>, <span class="Number">3</span>, <span class="Number">1</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_211"> 211</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_211"></span><span class="anchor" id="line-211-1"></span>    <span class="ResWord">assert</span> <span class="ID">shortest_path_search</span>(<span class="Number">5</span>, <span class="ID">successors</span>, <span class="ID">is_goal</span>) == [<span class="Number">5</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>, <span class="Number">6</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>, <span class="Number">7</span>, <span class="String">'</span><span class="String">-&gt;</span><span class="String">'</span>, <span class="Number">8</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_212"> 212</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_212"></span><span class="anchor" id="line-212-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_213"> 213</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_213"></span><span class="anchor" id="line-213-1"></span>    <span class="ResWord">return</span> <span class="String">'</span><span class="String">tests pass</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_214"> 214</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_214"></span><span class="anchor" id="line-214-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_215"> 215</a> </span><span class="LineAnchor" id="CA-291694f4ac35c8fe2145412204e0cf9e05cf9fb2_215"></span><span class="anchor" id="line-215-1"></span><span class="ResWord">print</span> <span class="ID">test</span>()</span>
</pre></div></div><span class="anchor" id="line-610"></span><span class="anchor" id="bottom"></span></div><div id="pagebottom"></div>
</div>
</div><div class="footer"><span class="time" lang="ru" dir="ltr">–ø–æ—Å–ª–µ–¥–Ω–∏–º –∏—Å–ø—Ä–∞–≤–ª—è–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <span title="Gary Landers @ 50.116.54.191[50.116.54.191]"><a class="nonexistent" href="/Gary%20Landers" title="Gary Landers @ 50.116.54.191[50.116.54.191]">Gary Landers</a></span> 2012-05-19 00:51:48</span>
</div>
<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-29218959-1']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>



</body></html>Ytext/html_/http://wiki.udacity.com/CS212%20Unit%204%20Code            1   7   @   R   h   ~   ç  è∞  è¬  îU  î}  îÜ VB V] Zã Z‚ ZÎ »* »E ÃW Ãí Ãõ ˙# ˙, ˛+ ˛e ˛n & 0  J U l ä í ò km kw             )             k©