bplist00“!_WebSubresources_WebMainResource•‘	
_WebResourceData_WebResourceMIMEType_WebResourceResponse^WebResourceURLOè(function(){var g=void 0,h=!0,i=null,k=!1,aa=encodeURIComponent,ba=Infinity,ea=setTimeout,fa=decodeURIComponent,l=Math;function ga(a,b){return a.name=b}
var m="push",ha="test",ia="slice",n="replace",ja="load",ka="floor",la="charAt",ma="value",p="indexOf",na="match",oa="port",pa="createElement",qa="path",q="name",t="host",u="toString",v="length",w="prototype",ra="clientWidth",x="split",ta="stopPropagation",ua="scope",y="location",va="search",z="protocol",wa="clientHeight",xa="href",A="substring",ya="apply",za="navigator",B="join",C="toLowerCase",D;function Aa(a,b){switch(b){case 0:return""+a;case 1:return 1*a;case 2:return!!a;case 3:return 1E3*a}return a}function Ba(a){return"function"==typeof a}function Ca(a){return a!=g&&-1<(a.constructor+"")[p]("String")}function E(a,b){return g==a||"-"==a&&!b||""==a}function Da(a){if(!a||""==a)return"";for(;a&&-1<" \n\r\t"[p](a[la](0));)a=a[A](1);for(;a&&-1<" \n\r\t"[p](a[la](a[v]-1));)a=a[A](0,a[v]-1);return a}
function F(a){var b=1,c=0,d;if(!E(a)){b=0;for(d=a[v]-1;0<=d;d--)c=a.charCodeAt(d),b=(b<<6&268435455)+c+(c<<14),c=b&266338304,b=0!=c?b^c>>21:b}return b}function Ea(){return l.round(2147483647*l.random())}function Fa(){}function G(a,b){if(aa instanceof Function)return b?encodeURI(a):aa(a);H(68);return escape(a)}function I(a){a=a[x]("+")[B](" ");if(fa instanceof Function)try{return fa(a)}catch(b){H(17)}else H(68);return unescape(a)}
var Ga=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,!!d):a.attachEvent&&a.attachEvent("on"+b,c)},Ha=function(a,b,c,d){a.removeEventListener?a.removeEventListener(b,c,!!d):a.detachEvent&&a.detachEvent("on"+b,c)};function Ia(a,b){if(a){var c=J[pa]("script");c.type="text/javascript";c.async=h;c.src=a;c.id=b;var d=J.getElementsByTagName("script")[0];d.parentNode.insertBefore(c,d);return c}}function K(a){return a&&0<a[v]?a[0]:""}function Ja(a){var b=a?a[v]:0;return 0<b?a[b-1]:""}
var Ka=function(){this.prefix="ga.";this.R={}};Ka[w].set=function(a,b){this.R[this.prefix+a]=b};Ka[w].get=function(a){return this.R[this.prefix+a]};Ka[w].contains=function(a){return this.get(a)!==g};function La(a){0==a[p]("www.")&&(a=a[A](4));return a[C]()}function Ma(a,b){var c,d={url:a,protocol:"http",host:"",path:"",d:new Ka,anchor:""};if(!a)return d;c=a[p]("://");0<=c&&(d.protocol=a[A](0,c),a=a[A](c+3));c=a[va]("/|\\?|#");if(0<=c)d.host=a[A](0,c)[C](),a=a[A](c);else return d.host=a[C](),d;c=a[p]("#");0<=c&&(d.anchor=a[A](c+1),a=a[A](0,c));c=a[p]("?");0<=c&&(Na(d.d,a[A](c+1)),a=a[A](0,c));d.anchor&&b&&Na(d.d,d.anchor);a&&"/"==a[la](0)&&(a=a[A](1));d.path=a;return d}
function Oa(a,b){function c(a){var b=(a.hostname||"")[x](":")[0][C](),c=(a[z]||"")[C](),c=1*a[oa]||("http:"==c?80:"https:"==c?443:""),a=a.pathname||"";0==a[p]("/")||(a="/"+a);return[b,""+c,a]}var d=b||J[pa]("a");d.href=J[y][xa];var e=(d[z]||"")[C](),f=c(d),j=d[va]||"",o=e+"//"+f[0]+(f[1]?":"+f[1]:"");0==a[p]("//")?a=e+a:0==a[p]("/")?a=o+a:!a||0==a[p]("?")?a=o+f[2]+(a||j):0>a[x]("/")[0][p](":")&&(a=o+f[2][A](0,f[2].lastIndexOf("/"))+"/"+a);d.href=a;e=c(d);return{protocol:(d[z]||"")[C](),host:e[0],
port:e[1],path:e[2],Ia:d[va]||"",url:a||""}}function Na(a,b){function c(b,c){a.contains(b)||a.set(b,[]);a.get(b)[m](c)}for(var d=Da(b)[x]("&"),e=0;e<d[v];e++)if(d[e]){var f=d[e][p]("=");0>f?c(d[e],"1"):c(d[e][A](0,f),d[e][A](f+1))}}function Pa(a,b){if(E(a)||"["==a[la](0)&&"]"==a[la](a[v]-1))return"-";var c=J.domain;return a[p](c+(b&&"/"!=b?b:""))==(0==a[p]("http://")?7:0==a[p]("https://")?8:0)?"0":a};var Ra=0;function Sa(a,b,c){!(1<=Ra)&&!(1<=100*l.random())&&(a=["utmt=error","utmerr="+a,"utmwv=5.3.2","utmn="+Ea(),"utmsp=1"],b&&a[m]("api="+b),c&&a[m]("msg="+G(c[A](0,100))),L.A&&a[m]("aip=1"),Ta(a[B]("&")),Ra++)};var Ua=0,Va={};function M(a){return Wa("x"+Ua++,a)}function Wa(a,b){Va[a]=!!b;return a}
var N=M(),Xa=M(),Ya=M(),Za=M(),$a=M(),O=M(),P=M(),ab=M(),bb=M(),cb=M(),db=M(),eb=M(),fb=M(),gb=M(),hb=M(),ib=M(),jb=M(),kb=M(),lb=M(),mb=M(),nb=M(),ob=M(),pb=M(),qb=M(),rb=M(),sb=M(),tb=M(),ub=M(),vb=M(),wb=M(),xb=M(),yb=M(),zb=M(),Ab=M(),Bb=M(),Q=M(h),Cb=Wa("page"),Db=Wa("title"),Eb=M(),Fb=M(),Gb=M(),Hb=M(),Ib=M(),Jb=M(),Kb=M(),Lb=M(),Mb=M(),R=M(h),Nb=M(h),Ob=M(h),Rb=M(h),Sb=M(h),Tb=M(h),Ub=M(h),Vb=M(h),Wb=M(h),Xb=M(h),Yb=M(h),S=M(h),Zb=M(h),$b=M(h),ac=M(h),bc=M(h),cc=M(h),dc=M(h),ec=M(h),fc=M(h),
gc=M(h),hc=M(h),ic=M(h),jc=M(h),kc=M(h),lc=Wa("campaignParams"),mc=M(),nc=Wa("hitCallback"),oc=M();M();var pc=M(),qc=M(),rc=M(),sc=M(),tc=M(),uc=M(),vc=M(),wc=M(),xc=M(),yc=M(),zc=M(),Dc=M();M();var Ec=M(),Fc=M(),Gc=M();var Jc=function(){function a(a,c,d){T(U[w],a,c,d)}Hc("_getName",Ya,58);Hc("_getAccount",N,64);Hc("_visitCode",R,54);Hc("_getClientInfo",gb,53,1);Hc("_getDetectTitle",jb,56,1);Hc("_getDetectFlash",hb,65,1);Hc("_getLocalGifPath",tb,57);Hc("_getServiceMode",ub,59);V("_setClientInfo",gb,66,2);V("_setAccount",N,3);V("_setNamespace",Xa,48);V("_setAllowLinker",db,11,2);V("_setDetectFlash",hb,61,2);V("_setDetectTitle",jb,62,2);V("_setLocalGifPath",tb,46,0);V("_setLocalServerMode",ub,92,g,0);V("_setRemoteServerMode",
ub,63,g,1);V("_setLocalRemoteServerMode",ub,47,g,2);V("_setSampleRate",sb,45,1);V("_setCampaignTrack",ib,36,2);V("_setAllowAnchor",eb,7,2);V("_setCampNameKey",lb,41);V("_setCampContentKey",qb,38);V("_setCampIdKey",kb,39);V("_setCampMediumKey",ob,40);V("_setCampNOKey",rb,42);V("_setCampSourceKey",nb,43);V("_setCampTermKey",pb,44);V("_setCampCIdKey",mb,37);V("_setCookiePath",P,9,0);V("_setMaxCustomVariables",vb,0,1);V("_setVisitorCookieTimeout",ab,28,1);V("_setSessionCookieTimeout",bb,26,1);V("_setCampaignCookieTimeout",
cb,29,1);V("_setReferrerOverride",Eb,49);V("_setSiteSpeedSampleRate",xc,132);a("_trackPageview",U[w].ya,1);a("_trackEvent",U[w].D,4);a("_trackPageLoadTime",U[w].xa,100);a("_trackSocial",U[w].za,104);a("_trackTrans",U[w].Ba,18);a("_sendXEvent",U[w].t,78);a("_createEventTracker",U[w].ea,74);a("_getVersion",U[w].ja,60);a("_setDomainName",U[w].C,6);a("_setAllowHash",U[w].oa,8);a("_getLinkerUrl",U[w].ia,52);a("_link",U[w].link,101);a("_linkByPost",U[w].na,102);a("_setTrans",U[w].sa,20);a("_addTrans",U[w].Y,
21);a("_addItem",U[w].W,19);a("_setTransactionDelim",U[w].ta,82);a("_setCustomVar",U[w].pa,10);a("_deleteCustomVar",U[w].ga,35);a("_getVisitorCustomVar",U[w].ka,50);a("_setXKey",U[w].va,83);a("_setXValue",U[w].wa,84);a("_getXKey",U[w].la,76);a("_getXValue",U[w].ma,77);a("_clearXKey",U[w].ba,72);a("_clearXValue",U[w].ca,73);a("_createXObj",U[w].fa,75);a("_addIgnoredOrganic",U[w].U,15);a("_clearIgnoredOrganic",U[w].Z,97);a("_addIgnoredRef",U[w].V,31);a("_clearIgnoredRef",U[w].$,32);a("_addOrganic",
U[w].X,14);a("_clearOrganic",U[w].aa,70);a("_cookiePathCopy",U[w].da,30);a("_get",U[w].ha,106);a("_set",U[w].qa,107);a("_addEventListener",U[w].addEventListener,108);a("_removeEventListener",U[w].removeEventListener,109);a("_addDevId",U[w].T);a("_getPlugin",Ic,122);a("_setPageGroup",U[w].ra,126);a("_trackTiming",U[w].Aa,124);a("_initData",U[w].u,2);a("_setVar",U[w].ua,22);V("_setSessionTimeout",bb,27,3);V("_setCookieTimeout",cb,25,3);V("_setCookiePersistence",ab,24,1);a("_setAutoTrackOutbound",Fa,
79);a("_setTrackOutboundSubdomains",Fa,81);a("_setHrefExamineLimit",Fa,80)};function Ic(a){var b=this.plugins_;if(b)return b.get(a)}
var T=function(a,b,c,d){a[b]=function(){try{return d!=g&&H(d),c[ya](this,arguments)}catch(a){throw Sa("exc",b,a&&a[q]),a;}}},Hc=function(a,b,c,d){U[w][a]=function(){try{return H(c),Aa(this.a.get(b),d)}catch(e){throw Sa("exc",a,e&&e[q]),e;}}},V=function(a,b,c,d,e){U[w][a]=function(f){try{H(c),e==g?this.a.set(b,Aa(f,d)):this.a.set(b,e)}catch(j){throw Sa("exc",a,j&&j[q]),j;}}},Kc=function(a,b){return{type:b,target:a,stopPropagation:function(){throw"aborted";}}};var Lc=RegExp(/(^|\.)doubleclick\.net$/i),Mc=function(a,b){return Lc[ha](J[y].hostname)?h:"/"!==b?k:(0==a[p]("www.google.")||0==a[p](".google.")||0==a[p]("google."))&&!(-1<a[p]("google.org"))?h:k},Nc=function(a){var b=a.get($a),c=a.c(P,"/");Mc(b,c)&&a[ta]()};var Sc=function(){var a={},b={},c=new Oc;this.j=function(a,b){c.add(a,b)};var d=new Oc;this.e=function(a,b){d.add(a,b)};var e=k,f=k,j=h;this.S=function(){e=h};this.i=function(a){this[ja]();this.set(mc,a,h);a=new Pc(this);e=k;d.execute(this);e=h;b={};this.n();a.Ca()};this.load=function(){e&&(e=k,this.Da(),Qc(this),f||(f=h,c.execute(this),Rc(this),Qc(this)),e=h)};this.n=function(){if(e)if(f)e=k,Rc(this),e=h;else this[ja]()};this.get=function(c){Va[c]&&this[ja]();return b[c]!==g?b[c]:a[c]};this.set=
function(c,d,e){Va[c]&&this[ja]();e?b[c]=d:a[c]=d;Va[c]&&this.n()};this.v=function(b){a[b]=this.b(b,0)+1};this.b=function(a,b){var c=this.get(a);return c==g||""===c?b:1*c};this.c=function(a,b){var c=this.get(a);return c==g?b:c+""};this.Da=function(){if(j){var b=this.c($a,""),c=this.c(P,"/");Mc(b,c)||(a[O]=a[fb]&&""!=b?F(b):1,j=k)}}};Sc[w].stopPropagation=function(){throw"aborted";};
var Pc=function(a){var b=this;this.q=0;var c=a.get(nc);this.Sa=function(){0<b.q&&c&&(b.q--,b.q||c())};this.Ca=function(){!b.q&&c&&ea(c,10)};a.set(oc,b,h)};function Tc(a,b){for(var b=b||[],c=0;c<b[v];c++){var d=b[c];if(""+a==d||0==d[p](a+"."))return d}return"-"}
var Vc=function(a,b,c){c=c?"":a.c(O,"1");b=b[x](".");if(6!==b[v]||Uc(b[0],c))return k;var c=1*b[1],d=1*b[2],e=1*b[3],f=1*b[4],b=1*b[5];if(!(0<=c&&0<d&&0<e&&0<f&&0<=b))return H(110),k;a.set(R,c);a.set(Sb,d);a.set(Tb,e);a.set(Ub,f);a.set(Vb,b);return h},Wc=function(a){var b=a.get(R),c=a.get(Sb),d=a.get(Tb),e=a.get(Ub),f=a.b(Vb,1);b==g?H(113):NaN==b&&H(114);0<=b&&0<c&&0<d&&0<e&&0<=f||H(115);return[a.b(O,1),b!=g?b:"-",c||"-",d||"-",e||"-",f][B](".")},Xc=function(a){return[a.b(O,1),a.b(Yb,0),a.b(S,1),
a.b(Zb,0)][B](".")},Yc=function(a,b,c){var c=c?"":a.c(O,"1"),d=b[x](".");if(4!==d[v]||Uc(d[0],c))d=i;a.set(Yb,d?1*d[1]:0);a.set(S,d?1*d[2]:10);a.set(Zb,d?1*d[3]:a.get(Za));return d!=i||!Uc(b,c)},Zc=function(a,b){var c=G(a.c(Ob,"")),d=[],e=a.get(Q);if(!b&&e){for(var f=0;f<e[v];f++){var j=e[f];j&&1==j[ua]&&d[m](f+"="+G(j[q])+"="+G(j[ma])+"=1")}0<d[v]&&(c+="|"+d[B]("^"))}return c?a.b(O,1)+"."+c:i},$c=function(a,b,c){c=c?"":a.c(O,"1");b=b[x](".");if(2>b[v]||Uc(b[0],c))return k;b=b[ia](1)[B](".")[x]("|");
0<b[v]&&a.set(Ob,I(b[0]));if(1>=b[v])return h;b=b[1][x](-1==b[1][p](",")?"^":",");for(c=0;c<b[v];c++){var d=b[c][x]("=");if(4==d[v]){var e={};ga(e,I(d[1]));e.value=I(d[2]);e.scope=1;a.get(Q)[d[0]]=e}}return h},bd=function(a,b){var c=ad(a,b);return c?[a.b(O,1),a.b($b,0),a.b(ac,1),a.b(bc,1),c][B]("."):""},ad=function(a){function b(b,e){if(!E(a.get(b))){var f=a.c(b,""),f=f[x](" ")[B]("%20"),f=f[x]("+")[B]("%20");c[m](e+"="+f)}}var c=[];b(dc,"utmcid");b(hc,"utmcsr");b(fc,"utmgclid");b(gc,"utmdclid");
b(ec,"utmccn");b(ic,"utmcmd");b(jc,"utmctr");b(kc,"utmcct");return c[B]("|")},dd=function(a,b,c){c=c?"":a.c(O,"1");b=b[x](".");if(5>b[v]||Uc(b[0],c))return a.set($b,g),a.set(ac,g),a.set(bc,g),a.set(dc,g),a.set(ec,g),a.set(hc,g),a.set(ic,g),a.set(jc,g),a.set(kc,g),a.set(fc,g),a.set(gc,g),k;a.set($b,1*b[1]);a.set(ac,1*b[2]);a.set(bc,1*b[3]);cd(a,b[ia](4)[B]("."));return h},cd=function(a,b){function c(a){return(a=b[na](a+"=(.*?)(?:\\|utm|$)"))&&2==a[v]?a[1]:g}function d(b,c){c&&(c=e?I(c):c[x]("%20")[B](" "),
a.set(b,c))}-1==b[p]("=")&&(b=I(b));var e="2"==c("utmcvr");d(dc,c("utmcid"));d(ec,c("utmccn"));d(hc,c("utmcsr"));d(ic,c("utmcmd"));d(jc,c("utmctr"));d(kc,c("utmcct"));d(fc,c("utmgclid"));d(gc,c("utmdclid"))},Uc=function(a,b){return b?a!=b:!/^\d+$/[ha](a)};var Oc=function(){this.B=[]};Oc[w].add=function(a,b){this.B[m]({name:a,r:b})};Oc[w].execute=function(a){try{for(var b=0;b<this.B[v];b++)this.B[b].r.call(W,a)}catch(c){}};function ed(a){100!=a.get(sb)&&a.get(R)%1E4>=100*a.get(sb)&&a[ta]()}function fd(a){gd(a.get(N))&&a[ta]()}function hd(a){"file:"==J[y][z]&&a[ta]()}function id(a){a.get(Db)||a.set(Db,J.title,h);a.get(Cb)||a.set(Cb,J[y].pathname+J[y][va],h)};var jd=new function(){var a=[];this.set=function(b){a[b]=h};this.Va=function(){for(var b=[],c=0;c<a[v];c++)a[c]&&(b[l[ka](c/6)]=b[l[ka](c/6)]^1<<c%6);for(c=0;c<b[v];c++)b[c]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"[la](b[c]||0);return b[B]("")+"~"}};function H(a){jd.set(a)};var W=window,J=document,gd=function(a){var b=W._gaUserPrefs;return b&&b.ioo&&b.ioo()||!!a&&W["ga-disable-"+a]===h},kd=function(a,b){ea(a,b)},ld=function(a){for(var b=[],c=J.cookie[x](";"),a=RegExp("^\\s*"+a+"=\\s*(.*?)\\s*$"),d=0;d<c[v];d++){var e=c[d][na](a);e&&b[m](e[1])}return b},X=function(a,b,c,d,e,f){e=gd(e)?k:Mc(d,c)?k:h;if(e){if(b&&0<=W[za].userAgent[p]("Firefox"))for(var b=b[n](/\n|\r/g," "),e=0,j=b[v];e<j;++e){var o=b.charCodeAt(e)&255;if(10==o||13==o)b=b[A](0,e)+"?"+b[A](e+1)}b&&2E3<b[v]&&
(b=b[A](0,2E3),H(69));a=a+"="+b+"; path="+c+"; ";f&&(a+="expires="+(new Date((new Date).getTime()+f)).toGMTString()+"; ");d&&(a+="domain="+d+";");J.cookie=a}};var md,nd,od=function(){if(!md){var a={},b=W[za],c=W.screen;a.Q=c?c.width+"x"+c.height:"-";a.P=c?c.colorDepth+"-bit":"-";a.language=(b&&(b.language||b.browserLanguage)||"-")[C]();a.javaEnabled=b&&b.javaEnabled()?1:0;a.characterSet=J.characterSet||J.charset||"-";try{var d=J.documentElement,e=J.body,f=e&&e[ra]&&e[wa],b=[];d&&(d[ra]&&d[wa])&&("CSS1Compat"===J.compatMode||!f)?b=[d[ra],d[wa]]:f&&(b=[e[ra],e[wa]]);a.Ua=b[B]("x")}catch(j){H(135)}md=a}},pd=function(){od();for(var a=md,b=W[za],a=b.appName+
b.version+a.language+b.platform+b.userAgent+a.javaEnabled+a.Q+a.P+(J.cookie?J.cookie:"")+(J.referrer?J.referrer:""),b=a[v],c=W.history[v];0<c;)a+=c--^b++;return F(a)},qd=function(a){od();var b=md;a.set(Gb,b.Q);a.set(Hb,b.P);a.set(Kb,b.language);a.set(Lb,b.characterSet);a.set(Ib,b.javaEnabled);a.set(Mb,b.Ua);if(a.get(gb)&&a.get(hb)){if(!(b=nd)){var c,d,e;d="ShockwaveFlash";if((b=(b=W[za])?b.plugins:g)&&0<b[v])for(c=0;c<b[v]&&!e;c++)d=b[c],-1<d[q][p]("Shockwave Flash")&&(e=d.description[x]("Shockwave Flash ")[1]);
else{d=d+"."+d;try{c=new ActiveXObject(d+".7"),e=c.GetVariable("$version")}catch(f){}if(!e)try{c=new ActiveXObject(d+".6"),e="WIN 6,0,21,0",c.AllowScriptAccess="always",e=c.GetVariable("$version")}catch(j){}if(!e)try{c=new ActiveXObject(d),e=c.GetVariable("$version")}catch(o){}e&&(e=e[x](" ")[1][x](","),e=e[0]+"."+e[1]+" r"+e[2])}b=e?e:"-"}nd=b;a.set(Jb,nd)}else a.set(Jb,"-")};var rd=function(a){if(Ba(a))this.r=a;else{var b=a[0],c=b.lastIndexOf(":"),d=b.lastIndexOf(".");this.g=this.h=this.l="";-1==c&&-1==d?this.g=b:-1==c&&-1!=d?(this.h=b[A](0,d),this.g=b[A](d+1)):-1!=c&&-1==d?(this.l=b[A](0,c),this.g=b[A](c+1)):c>d?(this.h=b[A](0,d),this.l=b[A](d+1,c),this.g=b[A](c+1)):(this.h=b[A](0,d),this.g=b[A](d+1));this.k=a[ia](1);this.Fa=!this.l&&"_require"==this.g;this.H=!this.h&&!this.l&&"_provide"==this.g}},Y=function(){T(Y[w],"push",Y[w][m],5);T(Y[w],"_getPlugin",Ic,121);T(Y[w],
"_createAsyncTracker",Y[w].Qa,33);T(Y[w],"_getAsyncTracker",Y[w].Ra,34);this.G=new Ka;this.p=[]};D=Y[w];D.Ha=function(a,b,c){var d=this.G.get(a);if(!Ba(d))return k;b.plugins_=b.plugins_||new Ka;b.plugins_.set(a,new d(b,c||{}));return h};D.push=function(a){var b=Z.Ta[ya](this,arguments),b=Z.p.concat(b);for(Z.p=[];0<b[v]&&!Z.O(b[0])&&!(b.shift(),0<Z.p[v]););Z.p=Z.p.concat(b);return 0};D.Ta=function(a){for(var b=[],c=0;c<arguments[v];c++)try{var d=new rd(arguments[c]);d.H?this.O(d):b[m](d)}catch(e){}return b};
D.O=function(a){try{if(a.r)a.r[ya](W);else if(a.H)this.G.set(a.k[0],a.k[1]);else{var b="_gat"==a.h?L:"_gaq"==a.h?Z:L.w(a.h);if(a.Fa){if(!this.Ha(a.k[0],b,a.k[2])){if(!a.Ja){var c=Oa(""+a.k[1]);var d=c[z],e=J[y][z];var f;if(f="https:"==d||d==e?h:"http:"!=d?k:"http:"==e){var j;a:{var o=Oa(J[y][xa]);if(!(c.Ia||0<=c.url[p]("?")||0<=c[qa][p]("://")||c[t]==o[t]&&c[oa]==o[oa]))for(var r="http:"==c[z]?80:443,s=L.Ea,b=0;b<s[v];b++)if(c[t]==s[b][0]&&(c[oa]||r)==(s[b][1]||r)&&0==c[qa][p](s[b][2])){j=h;break a}j=
k}f=j&&!gd()}f&&(a.Ja=Ia(c.url))}return h}}else a.l&&(b=b.plugins_.get(a.l)),b[a.g][ya](b,a.k)}}catch(Qa){}};D.Qa=function(a,b){return L.s(a,b||"")};D.Ra=function(a){return L.w(a)};var vd=function(){function a(a,b,c,d){g==f[a]&&(f[a]={});g==f[a][b]&&(f[a][b]=[]);f[a][b][c]=d}function b(a,b,c){if(g!=f[a]&&g!=f[a][b])return f[a][b][c]}function c(a,b){if(g!=f[a]&&g!=f[a][b]){f[a][b]=g;var c=h,d;for(d=0;d<j[v];d++)if(g!=f[a][j[d]]){c=k;break}c&&(f[a]=g)}}function d(a){var b="",c=k,d,e;for(d=0;d<j[v];d++)if(e=a[j[d]],g!=e){c&&(b+=j[d]);for(var c=[],f=g,da=g,da=0;da<e[v];da++)if(g!=e[da]){f="";da!=Pb&&g==e[da-1]&&(f+=da[u]()+Qa);for(var td=e[da],Ac="",Qb=g,Bc=g,Cc=g,Qb=0;Qb<td[v];Qb++)Bc=
td[la](Qb),Cc=sa[Bc],Ac+=g!=Cc?Cc:Bc;f+=Ac;c[m](f)}b+=o+c[B](s)+r;c=k}else c=h;return b}var e=this,f=[],j=["k","v"],o="(",r=")",s="*",Qa="!",sa={"'":"'0"};sa[r]="'1";sa[s]="'2";sa[Qa]="'3";var Pb=1;e.La=function(a){return g!=f[a]};e.z=function(){for(var a="",b=0;b<f[v];b++)g!=f[b]&&(a+=b[u]()+d(f[b]));return a};e.Ka=function(a){if(a==g)return e.z();for(var b=a.z(),c=0;c<f[v];c++)g!=f[c]&&!a.La(c)&&(b+=c[u]()+d(f[c]));return b};e.f=function(b,c,d){if(!sd(d))return k;a(b,"k",c,d);return h};e.o=function(b,
c,d){if(!ud(d))return k;a(b,"v",c,d[u]());return h};e.getKey=function(a,c){return b(a,"k",c)};e.L=function(a,c){return b(a,"v",c)};e.J=function(a){c(a,"k")};e.K=function(a){c(a,"v")};T(e,"_setKey",e.f,89);T(e,"_setValue",e.o,90);T(e,"_getKey",e.getKey,87);T(e,"_getValue",e.L,88);T(e,"_clearKey",e.J,85);T(e,"_clearValue",e.K,86)};function sd(a){return"string"==typeof a}function ud(a){return"number"!=typeof a&&(g==Number||!(a instanceof Number))||l.round(a)!=a||NaN==a||a==ba?k:h};var wd=function(a){var b=W.gaGlobal;a&&!b&&(W.gaGlobal=b={});return b},xd=function(){var a=wd(h).hid;a==i&&(a=Ea(),wd(h).hid=a);return a},yd=function(a){a.set(Fb,xd());var b=wd();if(b&&b.dh==a.get(O)){var c=b.sid;c&&("0"==c&&H(112),a.set(Ub,c),a.get(Nb)&&a.set(Tb,c));b=b.vid;a.get(Nb)&&b&&(b=b[x]("."),1*b[1]||H(112),a.set(R,1*b[0]),a.set(Sb,1*b[1]))}};var zd,Ad=function(a,b,c){var d=a.c($a,""),e=a.c(P,"/"),f=a.b(ab,0),a=a.c(N,"");X(b,c,e,d,a,f)},Rc=function(a){var b=a.c($a,"");a.b(O,1);var c=a.c(P,"/"),d=a.c(N,"");X("__utma",Wc(a),c,b,d,a.get(ab));X("__utmb",Xc(a),c,b,d,a.get(bb));X("__utmc",""+a.b(O,1),c,b,d);var e=bd(a,h);e?X("__utmz",e,c,b,d,a.get(cb)):X("__utmz","",c,b,"",-1);(e=Zc(a,k))?X("__utmv",e,c,b,d,a.get(ab)):X("__utmv","",c,b,"",-1)},Qc=function(a){var b=a.b(O,1);if(!Vc(a,Tc(b,ld("__utma"))))return a.set(Rb,h),k;var c=!Yc(a,Tc(b,ld("__utmb")));
a.set(Xb,c);dd(a,Tc(b,ld("__utmz")));$c(a,Tc(b,ld("__utmv")));zd=!c;return h},Bd=function(a){!zd&&!(0<ld("__utmb")[v])&&(X("__utmd","1",a.c(P,"/"),a.c($a,""),a.c(N,""),1E4),0==ld("__utmd")[v]&&a[ta]())};var Ed=function(a){a.get(R)==g?Cd(a):a.get(Rb)&&!a.get(Ec)?Cd(a):a.get(Xb)&&Dd(a)},Fd=function(a){a.get(cc)&&!a.get(Wb)&&(Dd(a),a.set(ac,a.get(Vb)))},Cd=function(a){var b=a.get(Za);a.set(Nb,h);a.set(R,Ea()^pd(a)&2147483647);a.set(Ob,"");a.set(Sb,b);a.set(Tb,b);a.set(Ub,b);a.set(Vb,1);a.set(Wb,h);a.set(Yb,0);a.set(S,10);a.set(Zb,b);a.set(Q,[]);a.set(Rb,k);a.set(Xb,k)},Dd=function(a){a.set(Tb,a.get(Ub));a.set(Ub,a.get(Za));a.v(Vb);a.set(Wb,h);a.set(Yb,0);a.set(S,10);a.set(Zb,a.get(Za));a.set(Xb,k)};var Gd="daum:q eniro:search_word naver:query pchome:q images.google:q google:q yahoo:p yahoo:q msn:q bing:q aol:query aol:q lycos:q lycos:query ask:q netscape:query cnn:query about:terms mamma:q voila:rdata virgilio:qs live:q baidu:wd alice:qs yandex:text najdi:q seznam:q rakuten:qt biglobe:q goo.ne:MT wp:szukaj onet:qt yam:k kvasir:q ozu:q terra:query rambler:query conduit:q babylon:q search-results:q avg:q comcast:q incredimail:q startsiden:q go.mail.ru:q search.centrum.cz:q".split(" "),Md=function(a){if(a.get(ib)&&
!a.get(Ec)){for(var b=!E(a.get(dc))||!E(a.get(hc))||!E(a.get(fc))||!E(a.get(gc)),c={},d=0;d<Hd[v];d++){var e=Hd[d];c[e]=a.get(e)}(d=a.get(lc))?(H(149),e=new Ka,Na(e,d),d=e):d=Ma(J[y][xa],a.get(eb)).d;if(!("1"==Ja(d.get(a.get(rb)))&&b)&&(d=Id(a,d)||Jd(a),!d&&(!b&&a.get(Wb))&&(Kd(a,g,"(direct)",g,g,"(direct)","(none)",g,g),d=h),d))if(a.set(cc,Ld(a,c)),b="(direct)"==a.get(hc)&&"(direct)"==a.get(ec)&&"(none)"==a.get(ic),a.get(cc)||a.get(Wb)&&!b)a.set($b,a.get(Za)),a.set(ac,a.get(Vb)),a.v(bc)}},Id=function(a,
b){function c(c,d){var d=d||"-",e=Ja(b.get(a.get(c)));return e&&"-"!=e?I(e):d}var d=Ja(b.get(a.get(kb)))||"-",e=Ja(b.get(a.get(nb)))||"-",f=Ja(b.get(a.get(mb)))||"-",j=Ja(b.get("dclid"))||"-",o=c(lb,"(not set)"),r=c(ob,"(not set)"),s=c(pb),Qa=c(qb);if(E(d)&&E(f)&&E(j)&&E(e))return k;var sa=!E(j)&&E(e),Pb=E(s);if(sa||Pb){var ca=Nd(a),ca=Ma(ca,h);if((ca=Od(a,ca))&&!E(ca[1]&&!ca[2]))sa&&(e=ca[0]),Pb&&(s=ca[1])}Kd(a,d,e,f,j,o,r,s,Qa);return h},Jd=function(a){var b=Nd(a),c=Ma(b,h);if(!(b!=g&&b!=i&&""!=
b&&"0"!=b&&"-"!=b&&0<=b[p]("://"))||c&&-1<c[t][p]("google")&&c.d.contains("q")&&"cse"==c[qa])return k;if((b=Od(a,c))&&!b[2])return Kd(a,g,b[0],g,g,"(organic)","organic",b[1],g),h;if(b||!a.get(Wb))return k;a:{for(var b=a.get(yb),d=La(c[t]),e=0;e<b[v];++e)if(-1<d[p](b[e])){a=k;break a}Kd(a,g,d,g,g,"(referral)","referral",g,"/"+c[qa]);a=h}return a},Od=function(a,b){for(var c=a.get(wb),d=0;d<c[v];++d){var e=c[d][x](":");if(-1<b[t][p](e[0][C]())){var f=b.d.get(e[1]);if(f&&(f=K(f),!f&&-1<b[t][p]("google.")&&
(f="(not provided)"),!e[3]||-1<b.url[p](e[3]))){a:{for(var c=f,d=a.get(xb),c=I(c)[C](),j=0;j<d[v];++j)if(c==d[j]){c=h;break a}c=k}return[e[2]||e[0],f,c]}}}return i},Kd=function(a,b,c,d,e,f,j,o,r){a.set(dc,b);a.set(hc,c);a.set(fc,d);a.set(gc,e);a.set(ec,f);a.set(ic,j);a.set(jc,o);a.set(kc,r)},Hd=[ec,dc,fc,gc,hc,ic,jc,kc],Ld=function(a,b){function c(a){a=(""+a)[x]("+")[B]("%20");return a=a[x](" ")[B]("%20")}function d(c){var d=""+(a.get(c)||""),c=""+(b[c]||"");return 0<d[v]&&d==c}if(d(fc)||d(gc))return H(131),
k;for(var e=0;e<Hd[v];e++){var f=Hd[e],j=b[f]||"-",f=a.get(f)||"-";if(c(j)!=c(f))return h}return k},Pd=RegExp(/^https:\/\/(www\.)?google(\.com?)?(\.[a-z]{2}t?)?\/?$/i),Nd=function(a){a=Pa(a.get(Eb),a.get(P));try{if(Pd[ha](a))return H(136),a+"?q="}catch(b){H(145)}return a};var Rd=function(a){Qd(a,J[y][xa])?(a.set(Ec,h),H(12)):a.set(Ec,k)},Qd=function(a,b){if(!a.get(db))return k;var c=Ma(b,a.get(eb)),d=K(c.d.get("__utma")),e=K(c.d.get("__utmb")),f=K(c.d.get("__utmc")),j=K(c.d.get("__utmx")),o=K(c.d.get("__utmz")),r=K(c.d.get("__utmv")),c=K(c.d.get("__utmk"));if(F(""+d+e+f+j+o+r)!=c){d=I(d);e=I(e);f=I(f);j=I(j);f=Sd(d+e+f+j,o,r,c);if(!f)return k;o=f[0];r=f[1]}if(!Vc(a,d,h))return k;Yc(a,e,h);dd(a,o,h);$c(a,r,h);Td(a,j,h);return h},Vd=function(a,b,c){var d;d=Wc(a)||"-";
var e=Xc(a)||"-",f=""+a.b(O,1)||"-",j=Ud(a)||"-",o=bd(a,k)||"-",a=Zc(a,k)||"-",r=F(""+d+e+f+j+o+a),s=[];s[m]("__utma="+d);s[m]("__utmb="+e);s[m]("__utmc="+f);s[m]("__utmx="+j);s[m]("__utmz="+o);s[m]("__utmv="+a);s[m]("__utmk="+r);d=s[B]("&");if(!d)return b;e=b[p]("#");if(c)return 0>e?b+"#"+d:b+"&"+d;c="";f=b[p]("?");0<e&&(c=b[A](e),b=b[A](0,e));return 0>f?b+"?"+d+c:b+"&"+d+c},Sd=function(a,b,c,d){for(var e=0;3>e;e++){for(var f=0;3>f;f++){if(d==F(a+b+c))return H(127),[b,c];var j=b[n](/ /g,"%20"),o=
c[n](/ /g,"%20");if(d==F(a+j+o))return H(128),[j,o];j=j[n](/\+/g,"%20");o=o[n](/\+/g,"%20");if(d==F(a+j+o))return H(129),[j,o];try{var r=b[na]("utmctr=(.*?)(?:\\|utm|$)");if(r&&2==r[v]&&(j=b[n](r[1],G(I(r[1]))),d==F(a+j+c)))return H(139),[j,c]}catch(s){}b=I(b)}c=I(c)}};var Wd="|",Yd=function(a,b,c,d,e,f,j,o,r){var s=Xd(a,b);s||(s={},a.get(zb)[m](s));s.id_=b;s.affiliation_=c;s.total_=d;s.tax_=e;s.shipping_=f;s.city_=j;s.state_=o;s.country_=r;s.items_=s.items_||[];return s},Zd=function(a,b,c,d,e,f,j){var a=Xd(a,b)||Yd(a,b,"",0,0,0,"","",""),o;a:{if(a&&a.items_){o=a.items_;for(var r=0;r<o[v];r++)if(o[r].sku_==c){o=o[r];break a}}o=i}r=o||{};r.transId_=b;r.sku_=c;r.name_=d;r.category_=e;r.price_=f;r.quantity_=j;o||a.items_[m](r);return r},Xd=function(a,b){for(var c=
a.get(zb),d=0;d<c[v];d++)if(c[d].id_==b)return c[d];return i};var $d,ae=function(a){if(!$d){var b;b=J[y].hash;var c=W[q],d=/^#?gaso=([^&]*)/;if(c=(b=(b=b&&b[na](d)||c&&c[na](d))?b[1]:K(ld("GASO")))&&b[na](/^(?:[|!]([-0-9a-z.]{1,40})[|!])?([-.\w]{10,1200})$/i))Ad(a,"GASO",""+b),L._gasoDomain=a.get($a),L._gasoCPath=a.get(P),a=c[1],Ia("https://www.google.com/analytics/web/inpage/pub/inpage.js?"+(a?"prefix="+a+"&":"")+Ea(),"_gasojs");$d=h}};var Td=function(a,b,c){c&&(b=I(b));c=a.b(O,1);b=b[x](".");!(2>b[v])&&/^\d+$/[ha](b[0])&&(b[0]=""+c,Ad(a,"__utmx",b[B](".")))},Ud=function(a,b){var c=Tc(a.get(O),ld("__utmx"));"-"==c&&(c="");return b?G(c):c},be=function(a){try{var b=Ma(J[y][xa],k),c=fa(Ja(b.d.get("utm_referrer")))||"";c&&a.set(Eb,c);var d=fa(K(b.d.get("utm_expid")));d&&a.set(Gc,d)}catch(e){H(146)}};var ge=function(a,b){var c=l.min(a.b(xc,0),100);if(a.b(R,0)%100>=c)return k;c=ce()||de();if(c==g)return k;var d=c[0];if(d==g||d==ba||isNaN(d))return k;0<d?ee(c)?b(fe(c)):b(fe(c[ia](0,1))):Ga(W,"load",function(){ge(a,b)},k);return h},ie=function(a,b,c,d){var e=new vd;e.f(14,90,b[A](0,64));e.f(14,91,a[A](0,64));e.f(14,92,""+he(c));d!=g&&e.f(14,93,d[A](0,64));e.o(14,90,c);return e},ee=function(a){for(var b=1;b<a[v];b++)if(isNaN(a[b])||a[b]==ba||0>a[b])return k;return h},he=function(a){return isNaN(a)||
0>a?0:5E3>a?10*l[ka](a/10):5E4>a?100*l[ka](a/100):41E5>a?1E3*l[ka](a/1E3):41E5},fe=function(a){for(var b=new vd,c=0;c<a[v];c++)b.f(14,c+1,""+he(a[c])),b.o(14,c+1,a[c]);return b},ce=function(){var a=W.performance||W.webkitPerformance;if(a=a&&a.timing){var b=a.navigationStart;if(0==b)H(133);else return[a.loadEventStart-b,a.domainLookupEnd-a.domainLookupStart,a.connectEnd-a.connectStart,a.responseStart-a.requestStart,a.responseEnd-a.responseStart,a.fetchStart-b]}},de=function(){if(W.top==W){var a=W.external,
b=a&&a.onloadT;a&&!a.isValidLoadTime&&(b=g);2147483648<b&&(b=g);0<b&&a.setPageReadyTime();return b==g?g:[b]}};var U=function(a,b,c){function d(a){return function(b){if((b=b.get(Fc)[a])&&b[v])for(var c=Kc(e,a),d=0;d<b[v];d++)b[d].call(e,c)}}var e=this;this.a=new Sc;this.get=function(a){return this.a.get(a)};this.set=function(a,b,c){this.a.set(a,b,c)};this.set(N,b||"UA-XXXXX-X");this.set(Ya,a||"");this.set(Xa,c||"");this.set(Za,l.round((new Date).getTime()/1E3));this.set(P,"/");this.set(ab,63072E6);this.set(cb,15768E6);this.set(bb,18E5);this.set(db,k);this.set(vb,50);this.set(eb,k);this.set(fb,h);this.set(gb,
h);this.set(hb,h);this.set(ib,h);this.set(jb,h);this.set(lb,"utm_campaign");this.set(kb,"utm_id");this.set(mb,"gclid");this.set(nb,"utm_source");this.set(ob,"utm_medium");this.set(pb,"utm_term");this.set(qb,"utm_content");this.set(rb,"utm_nooverride");this.set(sb,100);this.set(xc,1);this.set(yc,k);this.set(tb,"/__utm.gif");this.set(ub,1);this.set(zb,[]);this.set(Q,[]);this.set(wb,Gd[ia](0));this.set(xb,[]);this.set(yb,[]);this.C("auto");this.set(Eb,J.referrer);be(this.a);this.set(Fc,{hit:[],load:[]});
this.a.j("0",Rd);this.a.j("1",Ed);this.a.j("2",Md);this.a.j("3",Fd);this.a.j("4",d("load"));this.a.j("5",ae);this.a.e("A",fd);this.a.e("B",hd);this.a.e("C",Ed);this.a.e("D",ed);this.a.e("E",Nc);this.a.e("F",je);this.a.e("G",Bd);this.a.e("H",id);this.a.e("I",qd);this.a.e("J",yd);this.a.e("K",d("hit"));this.a.e("L",ke);this.a.e("M",le);0===this.get(Za)&&H(111);this.a.S();this.F=g};D=U[w];D.m=function(){var a=this.get(Ab);a||(a=new vd,this.set(Ab,a));return a};
D.Ga=function(a){for(var b in a){var c=a[b];a.hasOwnProperty(b)&&this.set(b,c,h)}};D.I=function(a){if(this.get(yc))return k;var b=this,c=ge(this.a,function(c){b.set(Cb,a,h);b.t(c)});this.set(yc,c);return c};D.ya=function(a){a&&Ca(a)?(H(13),this.set(Cb,a,h)):"object"===typeof a&&a!==i&&this.Ga(a);this.F=a=this.get(Cb);this.a.i("page");this.I(a)};
D.D=function(a,b,c,d,e){if(""==a||(!sd(a)||""==b||!sd(b))||c!=g&&!sd(c)||d!=g&&!ud(d))return k;this.set(qc,a,h);this.set(rc,b,h);this.set(sc,c,h);this.set(tc,d,h);this.set(pc,!!e,h);this.a.i("event");return h};D.Aa=function(a,b,c,d,e){var f=this.a.b(xc,0);1*e===e&&(f=e);if(this.a.b(R,0)%100>=f)return k;c=1*(""+c);if(""==a||(!sd(a)||""==b||!sd(b)||!ud(c)||isNaN(c)||0>c||0>f||100<f)||d!=g&&(""==d||!sd(d)))return k;this.t(ie(a,b,c,d));return h};
D.za=function(a,b,c,d){if(!a||!b)return k;this.set(uc,a,h);this.set(vc,b,h);this.set(wc,c||J[y][xa],h);d&&this.set(Cb,d,h);this.a.i("social");return h};D.xa=function(){this.set(xc,10);this.I(this.F)};D.Ba=function(){this.a.i("trans")};D.t=function(a){this.set(Bb,a,h);this.a.i("event")};D.ea=function(a){this.u();var b=this;return{_trackEvent:function(c,d,e){H(91);b.D(a,c,d,e)}}};D.ha=function(a){return this.get(a)};
D.qa=function(a,b){if(a)if(Ca(a))this.set(a,b);else if("object"==typeof a)for(var c in a)a.hasOwnProperty(c)&&this.set(c,a[c])};D.addEventListener=function(a,b){var c=this.get(Fc)[a];c&&c[m](b)};D.removeEventListener=function(a,b){for(var c=this.get(Fc)[a],d=0;c&&d<c[v];d++)if(c[d]==b){c.splice(d,1);break}};D.ja=function(){return"5.3.2"};D.C=function(a){this.get(fb);a="auto"==a?La(J.domain):!a||"-"==a||"none"==a?"":a[C]();this.set($a,a)};D.oa=function(a){this.set(fb,!!a)};
D.ia=function(a,b){return Vd(this.a,a,b)};D.link=function(a,b){if(this.a.get(db)&&a){var c=Vd(this.a,a,b);J[y].href=c}};D.na=function(a,b){this.a.get(db)&&(a&&a.action)&&(a.action=Vd(this.a,a.action,b))};
D.sa=function(){this.u();var a=this.a,b=J.getElementById?J.getElementById("utmtrans"):J.utmform&&J.utmform.utmtrans?J.utmform.utmtrans:i;if(b&&b[ma]){a.set(zb,[]);for(var b=b[ma][x]("UTM:"),c=0;c<b[v];c++){b[c]=Da(b[c]);for(var d=b[c][x](Wd),e=0;e<d[v];e++)d[e]=Da(d[e]);"T"==d[0]?Yd(a,d[1],d[2],d[3],d[4],d[5],d[6],d[7],d[8]):"I"==d[0]&&Zd(a,d[1],d[2],d[3],d[4],d[5],d[6])}}};D.Y=function(a,b,c,d,e,f,j,o){return Yd(this.a,a,b,c,d,e,f,j,o)};D.W=function(a,b,c,d,e,f){return Zd(this.a,a,b,c,d,e,f)};
D.ta=function(a){Wd=a||"|"};D.pa=function(a,b,c,d){var e=this.a;if(0>=a||a>e.get(vb))a=k;else if(!b||!c||128<b[v]+c[v])a=k;else{1!=d&&2!=d&&(d=3);var f={};ga(f,b);f.value=c;f.scope=d;e.get(Q)[a]=f;a=h}a&&this.a.n();return a};D.ga=function(a){this.a.get(Q)[a]=g;this.a.n()};D.ka=function(a){return(a=this.a.get(Q)[a])&&1==a[ua]?a[ma]:g};D.va=function(a,b,c){this.m().f(a,b,c)};D.wa=function(a,b,c){this.m().o(a,b,c)};D.la=function(a,b){return this.m().getKey(a,b)};
D.ma=function(a,b){return this.m().L(a,b)};D.ba=function(a){this.m().J(a)};D.ca=function(a){this.m().K(a)};D.fa=function(){return new vd};D.U=function(a){a&&this.get(xb)[m](a[C]())};D.Z=function(){this.set(xb,[])};D.V=function(a){a&&this.get(yb)[m](a[C]())};D.$=function(){this.set(yb,[])};D.X=function(a,b,c,d,e){if(a&&b){a=[a,b[C]()][B](":");if(d||e)a=[a,d,e][B](":");d=this.get(wb);d.splice(c?0:d[v],0,a)}};D.aa=function(){this.set(wb,[])};
D.da=function(a){this.a[ja]();var b=this.get(P),c=Ud(this.a);this.set(P,a);this.a.n();Td(this.a,c);this.set(P,b)};D.ra=function(a,b){if(0<a&&5>=a&&Ca(b)&&""!=b){var c=this.get(zc)||[];c[a]=b;this.set(zc,c)}};D.T=function(a){a=""+a;if(a[na](/^[A-Za-z0-9]{1,5}$/)){var b=this.get(Dc)||[];b[m](a);this.set(Dc,b)}};D.u=function(){this.a[ja]()};D.ua=function(a){a&&""!=a&&(this.set(Ob,a),this.a.i("var"))};var je=function(a){"trans"!==a.get(mc)&&500<=a.b(Yb,0)&&a[ta]();if("event"===a.get(mc)){var b=(new Date).getTime(),c=a.b(Zb,0),d=a.b(Ub,0),c=l[ka](1*((b-(c!=d?c:1E3*c))/1E3));0<c&&(a.set(Zb,b),a.set(S,l.min(10,a.b(S,0)+c)));0>=a.b(S,0)&&a[ta]()}},le=function(a){"event"===a.get(mc)&&a.set(S,l.max(0,a.b(S,10)-1))};var me=function(){var a=[];this.add=function(b,c,d){d&&(c=G(""+c));a[m](b+"="+c)};this.toString=function(){return a[B]("&")}},ne=function(a,b){(b||2!=a.get(ub))&&a.v(Yb)},oe=function(a,b){b.add("utmwv","5.3.2");b.add("utms",a.get(Yb));b.add("utmn",Ea());var c=J[y].hostname;E(c)||b.add("utmhn",c,h);c=a.get(sb);100!=c&&b.add("utmsp",c,h)},qe=function(a,b){b.add("utmac",Da(a.get(N)));a.get(Gc)&&b.add("utmxkey",a.get(Gc),h);a.get(pc)&&b.add("utmni",1);var c=a.get(Dc);c&&0<c[v]&&b.add("utmdid",c[B]("."));
pe(a,b);L.A&&b.add("aip",1);b.add("utmu",jd.Va())},re=function(a,b){for(var c=a.get(zc)||[],d=[],e=1;e<c[v];e++)c[e]&&d[m](e+":"+G(c[e][n](/%/g,"%25")[n](/:/g,"%3A")[n](/,/g,"%2C")));d[v]&&b.add("utmpg",d[B](","))},pe=function(a,b){function c(a,b){b&&d[m](a+"="+b+";")}var d=[];c("__utma",Wc(a));c("__utmz",bd(a,k));c("__utmv",Zc(a,h));c("__utmx",Ud(a));b.add("utmcc",d[B]("+"),h)},se=function(a,b){a.get(gb)&&(b.add("utmcs",a.get(Lb),h),b.add("utmsr",a.get(Gb)),a.get(Mb)&&b.add("utmvp",a.get(Mb)),b.add("utmsc",
a.get(Hb)),b.add("utmul",a.get(Kb)),b.add("utmje",a.get(Ib)),b.add("utmfl",a.get(Jb),h))},te=function(a,b){a.get(jb)&&a.get(Db)&&b.add("utmdt",a.get(Db),h);b.add("utmhid",a.get(Fb));b.add("utmr",Pa(a.get(Eb),a.get(P)),h);b.add("utmp",G(a.get(Cb),h),h)},ue=function(a,b){for(var c=a.get(Ab),d=a.get(Bb),e=a.get(Q)||[],f=0;f<e[v];f++){var j=e[f];j&&(c||(c=new vd),c.f(8,f,j[q]),c.f(9,f,j[ma]),3!=j[ua]&&c.f(11,f,""+j[ua]))}!E(a.get(qc))&&!E(a.get(rc),h)&&(c||(c=new vd),c.f(5,1,a.get(qc)),c.f(5,2,a.get(rc)),
e=a.get(sc),e!=g&&c.f(5,3,e),e=a.get(tc),e!=g&&c.o(5,1,e));c?b.add("utme",c.Ka(d),h):d&&b.add("utme",d.z(),h)},ve=function(a,b,c){var d=new me;ne(a,c);oe(a,d);d.add("utmt","tran");d.add("utmtid",b.id_,h);d.add("utmtst",b.affiliation_,h);d.add("utmtto",b.total_,h);d.add("utmttx",b.tax_,h);d.add("utmtsp",b.shipping_,h);d.add("utmtci",b.city_,h);d.add("utmtrg",b.state_,h);d.add("utmtco",b.country_,h);c||(re(a,d),qe(a,d));return d[u]()},we=function(a,b,c){var d=new me;ne(a,c);oe(a,d);d.add("utmt","item");
d.add("utmtid",b.transId_,h);d.add("utmipc",b.sku_,h);d.add("utmipn",b.name_,h);d.add("utmiva",b.category_,h);d.add("utmipr",b.price_,h);d.add("utmiqt",b.quantity_,h);c||(re(a,d),qe(a,d));return d[u]()},xe=function(a,b){var c=a.get(mc);if("page"==c)c=new me,ne(a,b),oe(a,c),ue(a,c),se(a,c),te(a,c),b||(re(a,c),qe(a,c)),c=[c[u]()];else if("event"==c)c=new me,ne(a,b),oe(a,c),c.add("utmt","event"),ue(a,c),se(a,c),te(a,c),b||(re(a,c),qe(a,c)),c=[c[u]()];else if("var"==c)c=new me,ne(a,b),oe(a,c),c.add("utmt",
"var"),!b&&qe(a,c),c=[c[u]()];else if("trans"==c)for(var c=[],d=a.get(zb),e=0;e<d[v];++e){c[m](ve(a,d[e],b));for(var f=d[e].items_,j=0;j<f[v];++j)c[m](we(a,f[j],b))}else"social"==c?b?c=[]:(c=new me,ne(a,b),oe(a,c),c.add("utmt","social"),c.add("utmsn",a.get(uc),h),c.add("utmsa",a.get(vc),h),c.add("utmsid",a.get(wc),h),ue(a,c),se(a,c),te(a,c),re(a,c),qe(a,c),c=[c[u]()]):c=[];return c},ke=function(a){var b,c=a.get(ub),d=a.get(oc),e=d&&d.Sa,f=0;if(0==c||2==c){var j=a.get(tb)+"?";b=xe(a,h);for(var o=0,
r=b[v];o<r;o++)Ta(b[o],e,j,h),f++}if(1==c||2==c){b=xe(a);o=0;for(r=b[v];o<r;o++)try{Ta(b[o],e),f++}catch(s){s&&Sa(s[q],g,s.message)}}d&&(d.q=f)};var ye="https:"==J[y][z]?"https://ssl.google-analytics.com":"http://www.google-analytics.com",ze=function(a){ga(this,"len");this.message=a+"-8192"},Ae=function(a){ga(this,"ff2post");this.message=a+"-2036"},Ta=function(a,b,c,d){b=b||Fa;if(d||2036>=a[v])Be(a,b,c);else if(8192>=a[v]){if(0<=W[za].userAgent[p]("Firefox")&&![].reduce)throw new Ae(a[v]);Ce(a,b)||De(a,b)}else throw new ze(a[v]);},Be=function(a,b,c){var c=c||ye+"/__utm.gif?",d=new Image(1,1);d.src=c+a;d.onload=function(){d.onload=i;d.onerror=
i;b()};d.onerror=function(){d.onload=i;d.onerror=i;b()}},Ce=function(a,b){var c,d=ye+"/p/__utm.gif",e=W.XDomainRequest;if(e)c=new e,c.open("POST",d);else if(e=W.XMLHttpRequest)e=new e,"withCredentials"in e&&(c=e,c.open("POST",d,h),c.setRequestHeader("Content-Type","text/plain"));if(c)return c.onreadystatechange=function(){4==c.readyState&&(b(),c=i)},c.send(a),h},De=function(a,b){if(J.body){a=aa(a);try{var c=J[pa]('<iframe name="'+a+'"></iframe>')}catch(d){c=J[pa]("iframe"),ga(c,a)}c.height="0";c.width=
"0";c.style.display="none";c.style.visibility="hidden";var e=J[y],e=ye+"/u/post_iframe.html#"+aa(e[z]+"//"+e[t]+"/favicon.ico"),f=function(){c.src="";c.parentNode&&c.parentNode.removeChild(c)};Ga(W,"beforeunload",f);var j=k,o=0,r=function(){if(!j){try{if(9<o||c.contentWindow[y][t]==J[y][t]){j=h;f();Ha(W,"beforeunload",f);b();return}}catch(a){}o++;ea(r,200)}};Ga(c,"load",r);J.body.appendChild(c);c.src=e}else kd(function(){De(a,b)},100)};var $=function(){this.A=k;this.M={};this.N=[];this.Ma=0;this.Ea=[["www.google-analytics.com","","/plugins/"]];this._gasoCPath=this._gasoDomain=g;T($[w],"_createTracker",$[w].s,55);T($[w],"_getTracker",$[w].Oa,0);T($[w],"_getTrackerByName",$[w].w,51);T($[w],"_getTrackers",$[w].Pa,130);T($[w],"_anonymizeIp",$[w].Na,16);T($[w],"_getPlugin",Ic,120);Jc()};D=$[w];D.Oa=function(a,b){return this.s(a,g,b)};D.s=function(a,b,c){b&&H(23);c&&H(67);b==g&&(b="~"+L.Ma++);a=new U(b,a,c);L.M[b]=a;L.N[m](a);return a};
D.w=function(a){a=a||"";return L.M[a]||L.s(g,a)};D.Pa=function(){return L.N[ia](0)};D.Na=function(){this.A=h};var Ee=function(a){if("prerender"==J.webkitVisibilityState)return k;a();return h};var L=new $;var Fe=W._gat;Fe&&Ba(Fe._getTracker)?L=Fe:W._gat=L;var Z=new Y;(function(a){if(!Ee(a)){H(123);var b=k,c=function(){!b&&Ee(a)&&(b=h,Ha(J,"webkitvisibilitychange",c))};Ga(J,"webkitvisibilitychange",c)}})(function(){var a=W._gaq,b=k;if(a&&Ba(a[m])&&(b="[object Array]"==Object[w][u].call(Object(a)),!b)){Z=a;return}W._gaq=Z;b&&Z[m][ya](Z,a)});})();
_text/javascriptOèbplist00‘noX$versionX$objectsY$archiverT$top Ü†Ø""()012NOPQRSTUVWXYZ[\]^_`abcdhiU$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ Ä Ä!ÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _%http://www.google-analytics.com/ga.js“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#AµvÉñ•∫√»”3456BWNS.keysZNS.objectsÄ´789:;<=>?@AÄ	Ä
ÄÄÄÄÄÄÄÄÄ´CDEFGHIJKLMÄÄÄÄÄÄÄÄÄÄÄVServer]Cache-Control\Content-TypeWExpiresTDate^Content-Length]Last-Modified_Content-Encoding_X-Content-Type-OptionsTVarySAgeWGFE/2.0_max-age=43200, public_text/javascript_Wed, 30 May 2012 20:40:33 GMT_Wed, 30 May 2012 08:40:33 GMTU14688_Tue, 22 May 2012 00:49:03 GMTTgzip_nosniff, nosniff_Accept-EncodingU28437“*+ef_NSMutableDictionary£eg/\NSDictionaryè“*+jk_NSHTTPURLResponse£lm/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—pq_WebResourceResponseÄ    # - 2 7 \ b } Ä Ñ á ä ç ë î õ û ° § ß ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º æ ¿ ¬ … ’ › ﬂ · „$*-3<EGNVacoqsuwy{}ÅÉÖëìïóôõùü°£•ßÆº…—÷ÂÛ$(0HZzö†¿≈ÿÍı$8<P^psâ             r              ã_%http://www.google-analytics.com/ga.js‘O¡∏/*************************************************************
 *
 *  MathJax.js
 *  
 *  The main code for the MathJax math-typesetting library.  See 
 *  http://www.mathjax.org/ for details.
 *  
 *  ---------------------------------------------------------------------
 *  
 *  Copyright (c) 2009-2012 Design Science, Inc.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

if (!window.MathJax) {window.MathJax = {}}

MathJax.isPacked = true;

if(document.getElementById&&document.childNodes&&document.createElement){if(!window.MathJax){window.MathJax={}}if(!MathJax.Hub){MathJax.version="2.0";MathJax.fileversion="2.0";(function(d){var b=window[d];if(!b){b=window[d]={}}var f=[];var c=function(g){var h=g.constructor;if(!h){h=new Function("")}for(var i in g){if(i!=="constructor"&&g.hasOwnProperty(i)){h[i]=g[i]}}return h};var a=function(){return new Function("return arguments.callee.Init.call(this,arguments)")};var e=a();e.prototype={bug_test:1};if(!e.prototype.bug_test){a=function(){return function(){return arguments.callee.Init.call(this,arguments)}}}b.Object=c({constructor:a(),Subclass:function(g,i){var h=a();h.SUPER=this;h.Init=this.Init;h.Subclass=this.Subclass;h.Augment=this.Augment;h.protoFunction=this.protoFunction;h.can=this.can;h.has=this.has;h.isa=this.isa;h.prototype=new this(f);h.prototype.constructor=h;h.Augment(g,i);return h},Init:function(g){var h=this;if(g.length===1&&g[0]===f){return h}if(!(h instanceof g.callee)){h=new g.callee(f)}return h.Init.apply(h,g)||h},Augment:function(g,h){var i;if(g!=null){for(i in g){if(g.hasOwnProperty(i)){this.protoFunction(i,g[i])}}if(g.toString!==this.prototype.toString&&g.toString!=={}.toString){this.protoFunction("toString",g.toString)}}if(h!=null){for(i in h){if(h.hasOwnProperty(i)){this[i]=h[i]}}}return this},protoFunction:function(h,g){this.prototype[h]=g;if(typeof g==="function"){g.SUPER=this.SUPER.prototype}},prototype:{Init:function(){},SUPER:function(g){return g.callee.SUPER},can:function(g){return typeof(this[g])==="function"},has:function(g){return typeof(this[g])!=="undefined"},isa:function(g){return(g instanceof Object)&&(this instanceof g)}},can:function(g){return this.prototype.can.call(this,g)},has:function(g){return this.prototype.has.call(this,g)},isa:function(h){var g=this;while(g){if(g===h){return true}else{g=g.SUPER}}return false},SimpleSUPER:c({constructor:function(g){return this.SimpleSUPER.define(g)},define:function(g){var i={};if(g!=null){for(var h in g){if(g.hasOwnProperty(h)){i[h]=this.wrap(h,g[h])}}if(g.toString!==this.prototype.toString&&g.toString!=={}.toString){i.toString=this.wrap("toString",g.toString)}}return i},wrap:function(i,h){if(typeof(h)==="function"&&h.toString().match(/\.\s*SUPER\s*\(/)){var g=new Function(this.wrapper);g.label=i;g.original=h;h=g;g.toString=this.stringify}return h},wrapper:function(){var h=arguments.callee;this.SUPER=h.SUPER[h.label];try{var g=h.original.apply(this,arguments)}catch(i){delete this.SUPER;throw i}delete this.SUPER;return g}.toString().replace(/^\s*function\s*\(\)\s*\{\s*/i,"").replace(/\s*\}\s*$/i,""),toString:function(){return this.original.toString.apply(this.original,arguments)}})})})("MathJax");(function(BASENAME){var BASE=window[BASENAME];if(!BASE){BASE=window[BASENAME]={}}var CALLBACK=function(data){var cb=new Function("return arguments.callee.execute.apply(arguments.callee,arguments)");for(var id in CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(data[id])!=="undefined"){cb[id]=data[id]}else{cb[id]=CALLBACK.prototype[id]}}}cb.toString=CALLBACK.prototype.toString;return cb};CALLBACK.prototype={isCallback:true,hook:function(){},data:[],object:window,execute:function(){if(!this.called||this.autoReset){this.called=!this.autoReset;return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))}},reset:function(){delete this.called},toString:function(){return this.hook.toString.apply(this.hook,arguments)}};var ISCALLBACK=function(f){return(typeof(f)==="function"&&f.isCallback)};var EVAL=function(code){return eval.call(window,code)};EVAL("var __TeSt_VaR__ = 1");if(window.__TeSt_VaR__){try{delete window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=null}}else{if(window.execScript){EVAL=function(code){BASE.__code=code;code="try {"+BASENAME+".__result = eval("+BASENAME+".__code)} catch(err) {"+BASENAME+".__result = err}";window.execScript(code);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}else{EVAL=function(code){BASE.__code=code;code="try {"+BASENAME+".__result = eval("+BASENAME+".__code)} catch(err) {"+BASENAME+".__result = err}";var head=(document.getElementsByTagName("head"))[0];if(!head){head=document.body}var script=document.createElement("script");script.appendChild(document.createTextNode(code));head.appendChild(script);head.removeChild(script);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}}var USING=function(args,i){if(arguments.length>1){if(arguments.length===2&&!(typeof arguments[0]==="function")&&arguments[0] instanceof Object&&typeof arguments[1]==="number"){args=[].slice.call(args,i)}else{args=[].slice.call(arguments,0)}}if(args instanceof Array&&args.length===1){args=args[0]}if(typeof args==="function"){if(args.execute===CALLBACK.prototype.execute){return args}return CALLBACK({hook:args})}else{if(args instanceof Array){if(typeof(args[0])==="string"&&args[1] instanceof Object&&typeof args[1][args[0]]==="function"){return CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{if(typeof args[0]==="function"){return CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof args[1]==="function"){return CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typeof(args)==="string"){return CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return CALLBACK(args)}else{if(typeof(args)==="undefined"){return CALLBACK({})}}}}}throw Error("Can't make callback from given data")};var DELAY=function(time,callback){callback=USING(callback);callback.timeout=setTimeout(callback,time);return callback};var WAITFOR=function(callback,signal){callback=USING(callback);if(!callback.called){WAITSIGNAL(callback,signal);signal.pending++}};var WAITEXECUTE=function(){var signals=this.signal;delete this.signal;this.execute=this.oldExecute;delete this.oldExecute;var result=this.execute.apply(this,arguments);if(ISCALLBACK(result)&&!result.called){WAITSIGNAL(result,signals)}else{for(var i=0,m=signals.length;i<m;i++){signals[i].pending--;if(signals[i].pending<=0){signals[i].call()}}}};var WAITSIGNAL=function(callback,signals){if(!(signals instanceof Array)){signals=[signals]}if(!callback.signal){callback.oldExecute=callback.execute;callback.execute=WAITEXECUTE;callback.signal=signals}else{if(signals.length===1){callback.signal.push(signals[0])}else{callback.signal=callback.signal.concat(signals)}}};var AFTER=function(callback){callback=USING(callback);callback.pending=0;for(var i=1,m=arguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i],callback)}}if(callback.pending===0){var result=callback();if(ISCALLBACK(result)){callback=result}}return callback};var HOOKS=MathJax.Object.Subclass({Init:function(reset){this.hooks=[];this.reset=reset},Add:function(hook,priority){if(priority==null){priority=10}if(!ISCALLBACK(hook)){hook=USING(hook)}hook.priority=priority;var i=this.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}this.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var i=0,m=this.hooks.length;i<m;i++){if(this.hooks[i]===hook){this.hooks.splice(i,1);return}}},Execute:function(){var callbacks=[{}];for(var i=0,m=this.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()}var result=this.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!result.called){callbacks.push(result)}}if(callbacks.length===1){return null}if(callbacks.length===2){return callbacks[1]}return AFTER.apply({},callbacks)}});var EXECUTEHOOKS=function(hooks,data,reset){if(!hooks){return null}if(!(hooks instanceof Array)){hooks=[hooks]}if(!(data instanceof Array)){data=(data==null?[]:[data])}var handler=HOOKS(reset);for(var i=0,m=hooks.length;i<m;i++){handler.Add(hooks[i])}return handler.Execute.apply(handler,data)};var QUEUE=BASE.Object.Subclass({Init:function(){this.pending=0;this.running=0;this.queue=[];this.Push.apply(this,arguments)},Push:function(){var callback;for(var i=0,m=arguments.length;i<m;i++){callback=USING(arguments[i]);if(callback===arguments[i]&&!callback.called){callback=USING(["wait",this,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){this.Process()}return callback},Process:function(queue){while(!this.running&&!this.pending&&this.queue.length){var callback=this.queue[0];queue=this.queue.slice(1);this.queue=[];this.Suspend();var result=callback();this.Resume();if(queue.length){this.queue=queue.concat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}}},Suspend:function(){this.running++},Resume:function(){if(this.running){this.running--}},call:function(){this.Process.apply(this,arguments)},wait:function(callback){return callback}});var SIGNAL=QUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(this);this.name=name;this.posted=[];this.listeners=HOOKS(true)},Post:function(message,callback,forget){callback=USING(callback);if(this.posting||this.pending){this.Push(["Post",this,message,callback,forget])}else{this.callback=callback;callback.reset();if(!forget){this.posted.push(message)}this.Suspend();this.posting=true;var result=this.listeners.Execute(message);if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}this.Resume();delete this.posting;if(!this.pending){this.call()}}return callback},Clear:function(callback){callback=USING(callback);if(this.posting||this.pending){callback=this.Push(["Clear",this,callback])}else{this.posted=[];callback()}return callback},call:function(){this.callback(this);this.Process()},Interest:function(callback,ignorePast,priority){callback=USING(callback);this.listeners.Add(callback,priority);if(!ignorePast){for(var i=0,m=this.posted.length;i<m;i++){callback.reset();var result=callback(this.posted[i]);if(ISCALLBACK(result)&&i===this.posted.length-1){WAITFOR(result,this)}}}return callback},NoInterest:function(callback){this.listeners.Remove(callback)},MessageHook:function(msg,callback,priority){callback=USING(callback);if(!this.hooks){this.hooks={};this.Interest(["ExecuteHooks",this])}if(!this.hooks[msg]){this.hooks[msg]=HOOKS(true)}this.hooks[msg].Add(callback,priority);for(var i=0,m=this.posted.length;i<m;i++){if(this.posted[i]==msg){callback.reset();callback(this.posted[i])}}return callback},ExecuteHooks:function(msg,more){var type=((msg instanceof Array)?msg[0]:msg);if(!this.hooks[type]){return null}return this.hooks[type].Execute(msg)}},{signals:{},find:function(name){if(!SIGNAL.signals[name]){SIGNAL.signals[name]=new SIGNAL(name)}return SIGNAL.signals[name]}});BASE.Callback=BASE.CallBack=USING;BASE.Callback.Delay=DELAY;BASE.Callback.After=AFTER;BASE.Callback.Queue=QUEUE;BASE.Callback.Signal=SIGNAL.find;BASE.Callback.Hooks=HOOKS;BASE.Callback.ExecuteHooks=EXECUTEHOOKS})("MathJax");(function(d){var a=window[d];if(!a){a=window[d]={}}var c=(navigator.vendor==="Apple Computer, Inc."&&typeof navigator.vendorSub==="undefined");var f=0;var g=function(h){if(document.styleSheets&&document.styleSheets.length>f){f=document.styleSheets.length}if(!h){h=(document.getElementsByTagName("head"))[0];if(!h){h=document.body}}return h};var e=[];var b=function(){for(var j=0,h=e.length;j<h;j++){a.Ajax.head.removeChild(e[j])}e=[]};a.Ajax={loaded:{},loading:{},loadHooks:{},timeout:15*1000,styleDelay:1,config:{root:""},STATUS:{OK:1,ERROR:-1},rootPattern:new RegExp("^\\["+d+"\\]"),fileURL:function(h){return h.replace(this.rootPattern,this.config.root)},Require:function(j,m){m=a.Callback(m);var k;if(j instanceof Object){for(var h in j){}k=h.toUpperCase();j=j[h]}else{k=j.split(/\./).pop().toUpperCase()}j=this.fileURL(j);if(this.loaded[j]){m(this.loaded[j])}else{var l={};l[k]=j;this.Load(l,m)}return m},Load:function(j,l){l=a.Callback(l);var k;if(j instanceof Object){for(var h in j){}k=h.toUpperCase();j=j[h]}else{k=j.split(/\./).pop().toUpperCase()}j=this.fileURL(j);if(this.loading[j]){this.addHook(j,l)}else{this.head=g(this.head);if(this.loader[k]){this.loader[k].call(this,j,l)}else{throw Error("Can't load files of type "+k)}}return l},LoadHook:function(k,l,j){l=a.Callback(l);if(k instanceof Object){for(var h in k){k=k[h]}}k=this.fileURL(k);if(this.loaded[k]){l(this.loaded[k])}else{this.addHook(k,l,j)}return l},addHook:function(i,j,h){if(!this.loadHooks[i]){this.loadHooks[i]=MathJax.Callback.Hooks()}this.loadHooks[i].Add(j,h)},Preloading:function(){for(var k=0,h=arguments.length;k<h;k++){var j=this.fileURL(arguments[k]);if(!this.loading[j]){this.loading[j]={preloaded:true}}}},loader:{JS:function(i,k){var h=document.createElement("script");var j=a.Callback(["loadTimeout",this,i]);this.loading[i]={callback:k,message:a.Message.File(i),timeout:setTimeout(j,this.timeout),status:this.STATUS.OK,script:h};h.onerror=j;h.type="text/javascript";h.src=i;this.head.appendChild(h)},CSS:function(h,j){var i=document.createElement("link");i.rel="stylesheet";i.type="text/css";i.href=h;this.loading[h]={callback:j,message:a.Message.File(h),status:this.STATUS.OK};this.head.appendChild(i);this.timer.create.call(this,[this.timer.file,h],i)}},timer:{create:function(i,h){i=a.Callback(i);if(h.nodeName==="STYLE"&&h.styleSheet&&typeof(h.styleSheet.cssText)!=="undefined"){i(this.STATUS.OK)}else{if(window.chrome&&typeof(window.sessionStorage)!=="undefined"&&h.nodeName==="STYLE"){i(this.STATUS.OK)}else{if(c){this.timer.start(this,[this.timer.checkSafari2,f++,i],this.styleDelay)}else{this.timer.start(this,[this.timer.checkLength,h,i],this.styleDelay)}}}return i},start:function(i,h,j,k){h=a.Callback(h);h.execute=this.execute;h.time=this.time;h.STATUS=i.STATUS;h.timeout=k||i.timeout;h.delay=h.total=0;if(j){setTimeout(h,j)}else{h()}},time:function(h){this.total+=this.delay;this.delay=Math.floor(this.delay*1.05+5);if(this.total>=this.timeout){h(this.STATUS.ERROR);return 1}return 0},file:function(i,h){if(h<0){a.Ajax.loadTimeout(i)}else{a.Ajax.loadComplete(i)}},execute:function(){this.hook.call(this.object,this,this.data[0],this.data[1])},checkSafari2:function(h,i,j){if(h.time(j)){return}if(document.styleSheets.length>i&&document.styleSheets[i].cssRules&&document.styleSheets[i].cssRules.length){j(h.STATUS.OK)}else{setTimeout(h,h.delay)}},checkLength:function(h,k,m){if(h.time(m)){return}var l=0;var i=(k.sheet||k.styleSheet);try{if((i.cssRules||i.rules||[]).length>0){l=1}}catch(j){if(j.message.match(/protected variable|restricted URI/)){l=1}else{if(j.message.match(/Security error/)){l=1}}}if(l){setTimeout(a.Callback([m,h.STATUS.OK]),0)}else{setTimeout(h,h.delay)}}},loadComplete:function(h){h=this.fileURL(h);var i=this.loading[h];if(i&&!i.preloaded){a.Message.Clear(i.message);clearTimeout(i.timeout);if(i.script){if(e.length===0){setTimeout(b,0)}e.push(i.script)}this.loaded[h]=i.status;delete this.loading[h];this.addHook(h,i.callback)}else{if(i){delete this.loading[h]}this.loaded[h]=this.STATUS.OK;i={status:this.STATUS.OK}}if(!this.loadHooks[h]){return null}return this.loadHooks[h].Execute(i.status)},loadTimeout:function(h){if(this.loading[h].timeout){clearTimeout(this.loading[h].timeout)}this.loading[h].status=this.STATUS.ERROR;this.loadError(h);this.loadComplete(h)},loadError:function(h){a.Message.Set("File failed to load: "+h,null,2000);a.Hub.signal.Post(["file load error",h])},Styles:function(j,k){var h=this.StyleString(j);if(h===""){k=a.Callback(k);k()}else{var i=document.createElement("style");i.type="text/css";this.head=g(this.head);this.head.appendChild(i);if(i.styleSheet&&typeof(i.styleSheet.cssText)!=="undefined"){i.styleSheet.cssText=h}else{i.appendChild(document.createTextNode(h))}k=this.timer.create.call(this,k,i)}return k},StyleString:function(m){if(typeof(m)==="string"){return m}var j="",n,l;for(n in m){if(m.hasOwnProperty(n)){if(typeof m[n]==="string"){j+=n+" {"+m[n]+"}\n"}else{if(m[n] instanceof Array){for(var k=0;k<m[n].length;k++){l={};l[n]=m[n][k];j+=this.StyleString(l)}}else{if(n.substr(0,6)==="@media"){j+=n+" {"+this.StyleString(m[n])+"}\n"}else{if(m[n]!=null){l=[];for(var h in m[n]){if(m[n].hasOwnProperty(h)){if(m[n][h]!=null){l[l.length]=h+": "+m[n][h]}}}j+=n+" {"+l.join("; ")+"}\n"}}}}}}return j}}})("MathJax");MathJax.HTML={Element:function(c,e,d){var f=document.createElement(c);if(e){if(e.style){var b=e.style;e.style={};for(var g in b){if(b.hasOwnProperty(g)){e.style[g.replace(/-([a-z])/g,this.ucMatch)]=b[g]}}}MathJax.Hub.Insert(f,e)}if(d){for(var a=0;a<d.length;a++){if(d[a] instanceof Array){f.appendChild(this.Element(d[a][0],d[a][1],d[a][2]))}else{f.appendChild(document.createTextNode(d[a]))}}}return f},ucMatch:function(a,b){return b.toUpperCase()},addElement:function(b,a,d,c){return b.appendChild(this.Element(a,d,c))},TextNode:function(a){return document.createTextNode(a)},addText:function(a,b){return a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScriptBug){a.text=b}else{while(a.firstChild){a.removeChild(a.firstChild)}this.addText(a,b)}},getScript:function(a){var b=(a.text===""?a.innerHTML:a.text);return b.replace(/^\s+/,"").replace(/\s+$/,"")},Cookie:{prefix:"mjx",expires:365,Set:function(a,d){var c=[];if(d){for(var f in d){if(d.hasOwnProperty(f)){c.push(f+":"+d[f].toString().replace(/&/g,"&&"))}}}var b=this.prefix+"."+a+"="+escape(c.join("&;"));if(this.expires){var e=new Date();e.setDate(e.getDate()+this.expires);b+="; expires="+e.toGMTString()}document.cookie=b+"; path=/"},Get:function(c,h){if(!h){h={}}var g=new RegExp("(?:^|;\\s*)"+this.prefix+"\\."+c+"=([^;]*)(?:;|$)");var b=g.exec(document.cookie);if(b&&b[1]!==""){var e=unescape(b[1]).split("&;");for(var d=0,a=e.length;d<a;d++){b=e[d].match(/([^:]+):(.*)/);var f=b[2].replace(/&&/g,"&");if(f==="true"){f=true}else{if(f==="false"){f=false}else{if(f.match(/^-?(\d+(\.\d+)?|\.\d+)$/)){f=parseFloat(f)}}}h[b[1]]=f}}return h}}};MathJax.Message={ready:false,log:[{}],current:null,textNodeBug:(navigator.vendor==="Apple Computer, Inc."&&typeof navigator.vendorSub==="undefined")||(window.hasOwnProperty&&window.hasOwnProperty("konqueror")),styles:{"#MathJax_Message":{position:"fixed",left:"1px",bottom:"2px","background-color":"#E6E6E6",border:"1px solid #959595",margin:"0px",padding:"2px 8px","z-index":"102",color:"black","font-size":"80%",width:"auto","white-space":"nowrap"},"#MathJax_MSIE_Frame":{position:"absolute",top:0,left:0,width:"0px","z-index":101,border:"0px",margin:"0px",padding:"0px"}},browsers:{MSIE:function(a){MathJax.Hub.config.styles["#MathJax_Message"].position="absolute";MathJax.Message.quirks=(document.compatMode==="BackCompat")},Chrome:function(a){MathJax.Hub.config.styles["#MathJax_Message"].bottom="1.5em";MathJax.Hub.config.styles["#MathJax_Message"].left="1em"}},Init:function(a){if(a){this.ready=true}if(!document.body||!this.ready){return false}if(this.div&&this.div.parentNode==null){this.div=document.getElementById("MathJax_Message");if(this.div){this.text=this.div.firstChild}}if(!this.div){var b=document.body;if(MathJax.Hub.Browser.isMSIE){b=this.frame=this.addDiv(document.body);b.removeAttribute("id");b.style.position="absolute";b.style.border=b.style.margin=b.style.padding="0px";b.style.zIndex="101";b.style.height="0px";b=this.addDiv(b);b.id="MathJax_MSIE_Frame";window.attachEvent("onscroll",this.MoveFrame);window.attachEvent("onresize",this.MoveFrame);this.MoveFrame()}this.div=this.addDiv(b);this.div.style.display="none";this.text=this.div.appendChild(document.createTextNode(""))}return true},addDiv:function(a){var b=document.createElement("div");b.id="MathJax_Message";if(a.firstChild){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return b},MoveFrame:function(){var a=(MathJax.Message.quirks?document.body:document.documentElement);var b=MathJax.Message.frame;b.style.left=a.scrollLeft+"px";b.style.top=a.scrollTop+"px";b.style.width=a.clientWidth+"px";b=b.firstChild;b.style.height=a.clientHeight+"px"},filterText:function(a,b){if(MathJax.Hub.config.messageStyle==="simple"){if(a.match(/^Loading /)){if(!this.loading){this.loading="Loading "}a=this.loading;this.loading+="."}else{if(a.match(/^Processing /)){if(!this.processing){this.processing="Processing "}a=this.processing;this.processing+="."}else{if(a.match(/^Typesetting /)){if(!this.typesetting){this.typesetting="Typesetting "}a=this.typesetting;this.typesetting+="."}}}}return a},Set:function(b,c,a){if(this.timer){clearTimeout(this.timer);delete this.timeout}if(c==null){c=this.log.length;this.log[c]={}}this.log[c].text=b;this.log[c].filteredText=b=this.filterText(b,c);if(typeof(this.log[c].next)==="undefined"){this.log[c].next=this.current;if(this.current!=null){this.log[this.current].prev=c}this.current=c}if(this.current===c&&MathJax.Hub.config.messageStyle!=="none"){if(this.Init()){if(this.textNodeBug){this.div.innerHTML=b}else{this.text.nodeValue=b}this.div.style.display="";if(this.status){window.status="";delete this.status}}else{window.status=b;this.status=true}}if(a){setTimeout(MathJax.Callback(["Clear",this,c]),a)}else{if(a==0){this.Clear(c,0)}}return c},Clear:function(b,a){if(this.log[b].prev!=null){this.log[this.log[b].prev].next=this.log[b].next}if(this.log[b].next!=null){this.log[this.log[b].next].prev=this.log[b].prev}if(this.current===b){this.current=this.log[b].next;if(this.text){if(this.div.parentNode==null){this.Init()}if(this.current==null){if(this.timer){clearTimeout(this.timer);delete this.timer}if(a==null){a=600}if(a===0){this.Remove()}else{this.timer=setTimeout(MathJax.Callback(["Remove",this]),a)}}else{if(MathJax.Hub.config.messageStyle!=="none"){if(this.textNodeBug){this.div.innerHTML=this.log[this.current].filteredText}else{this.text.nodeValue=this.log[this.current].filteredText}}}if(this.status){window.status="";delete this.status}}else{if(this.status){window.status=(this.current==null?"":this.log[this.current].text)}}}delete this.log[b].next;delete this.log[b].prev;delete this.log[b].filteredText},Remove:function(){this.text.nodeValue="";this.div.style.display="none"},File:function(b){var a=MathJax.Ajax.config.root;if(b.substr(0,a.length)===a){b="[MathJax]"+b.substr(a.length)}return this.Set("Loading "+b)},Log:function(){var b=[];for(var c=1,a=this.log.length;c<a;c++){b[c]=this.log[c].text}return b.join("\n")}};MathJax.Hub={config:{root:"",config:[],styleSheets:[],styles:{".MathJax_Preview":{color:"#888"}},jax:[],extensions:[],preJax:null,postJax:null,displayAlign:"center",displayIndent:"0",preRemoveClass:"MathJax_Preview",showProcessingMessages:true,messageStyle:"normal",delayStartupUntil:"none",skipStartupTypeset:false,"v1.0-compatible":true,elements:[],positionToHash:true,showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:"None",CTRL:false,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:"200%",renderer:"",font:"Auto",context:"MathJax",mpContext:false,mpMouse:false,texHints:true},errorSettings:{message:["[Math Processing Error]"],style:{color:"#CC0000","font-style":"italic"}}},preProcessors:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processUpdateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal("Hub"),Config:function(a){this.Insert(this.config,a);if(this.config.Augment){this.Augment(this.config.Augment)}},CombineConfig:function(c,f){var b=this.config,g,e;c=c.split(/\./);for(var d=0,a=c.length;d<a;d++){g=c[d];if(!b[g]){b[g]={}}e=b;b=b[g]}e[g]=b=this.Insert(f,b);return b},Register:{PreProcessor:function(){MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},StartupHook:function(){return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},LoadHook:function(){return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},getAllJax:function(e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.push(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].MathJax.elementJax.mimeType===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxByInputType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].type&&b[d].type.replace(/ *;(.|\s)*/,"")===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxFor:function(a){if(typeof(a)==="string"){a=document.getElementById(a)}if(a&&a.MathJax){return a.MathJax.elementJax}if(a&&a.isMathJax){while(a&&!a.jaxID){a=a.parentNode}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return null},isJax:function(a){if(typeof(a)==="string"){a=document.getElementById(a)}if(a&&a.isMathJax){return 1}if(a&&a.tagName!=null&&a.tagName.toLowerCase()==="script"){if(a.MathJax){return(a.MathJax.state===MathJax.ElementJax.STATE.PROCESSED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ *;(.|\s)*/,"")]){return -1}}return 0},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this.config.menuSettings.renderer="";var b="[MathJax]/jax/output/"+d+"/config.js";return MathJax.Ajax.Require(b,["setRenderer",this,d,c])}else{this.config.menuSettings.renderer=d;if(c==null){c="jax/mml"}var a=this.outputJax;if(a[c]&&a[c].length){if(d!==a[c][0].id){a[c].unshift(MathJax.OutputJax[d]);return this.signal.Post(["Renderer Selected",d])}}return null}},Queue:function(){return this.queue.Push.apply(this.queue,arguments)},Typeset:function(e,f){if(!MathJax.isReady){return null}var c=this.elementCallback(e,f);var b=MathJax.Callback.Queue();for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){b.Push(["PreProcess",this,c.elements[d]],["Process",this,c.elements[d]])}}return b.Push(c.callback)},PreProcess:function(e,f){var c=this.elementCallback(e,f);var b=MathJax.Callback.Queue();for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){b.Push(["Post",this.signal,["Begin PreProcess",c.elements[d]]],(arguments.callee.disabled?{}:["Execute",this.preProcessors,c.elements[d]]),["Post",this.signal,["End PreProcess",c.elements[d]]])}}return b.Push(c.callback)},Process:function(a,b){return this.takeAction("Process",a,b)},Update:function(a,b){return this.takeAction("Update",a,b)},Reprocess:function(a,b){return this.takeAction("Reprocess",a,b)},Rerender:function(a,b){return this.takeAction("Rerender",a,b)},takeAction:function(g,e,h){var c=this.elementCallback(e,h);var b=MathJax.Callback.Queue(["Clear",this.signal]);for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){var f={scripts:[],start:new Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};b.Push(["Post",this.signal,["Begin "+g,c.elements[d]]],["Post",this.signal,["Begin Math",c.elements[d],g]],["prepareScripts",this,g,c.elements[d],f],["Post",this.signal,["Begin Math Input",c.elements[d],g]],["processInput",this,f],["Post",this.signal,["End Math Input",c.elements[d],g]],["prepareOutput",this,f,"preProcess"],["Post",this.signal,["Begin Math Output",c.elements[d],g]],["processOutput",this,f],["Post",this.signal,["End Math Output",c.elements[d],g]],["prepareOutput",this,f,"postProcess"],["Post",this.signal,["End Math",c.elements[d],g]],["Post",this.signal,["End "+g,c.elements[d]]])}}return b.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b){var a=b.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}else{b.MathJax.state=a.STATE.PROCESSED}},Reprocess:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}},Rerender:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.OUTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){return}var b=this.elementScripts(e);var f=MathJax.ElementJax.STATE;for(var d=0,a=b.length;d<a;d++){var c=b[d];if(c.type&&this.inputJax[c.type.replace(/ *;(.|\n)*/,"")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.elementJax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elementJax)}if(c.MathJax.state!==f.PENDING){this.scriptAction[h](c)}}if(!c.MathJax){c.MathJax={state:f.PENDING}}if(c.MathJax.state!==f.PROCESSED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.checked){return}var b=this.config,f=a.previousSibling;if(f&&f.nodeName==="#text"){var d,e,c=a.nextSibling;if(c&&c.nodeName!=="#text"){c=null}if(b.preJax){if(typeof(b.preJax)==="string"){b.preJax=new RegExp(b.preJax+"$")}d=f.nodeValue.match(b.preJax)}if(b.postJax&&c){if(typeof(b.postJax)==="string"){b.postJax=new RegExp("^"+b.postJax)}e=c.nodeValue.match(b.postJax)}if(d&&(!b.postJax||e)){f.nodeValue=f.nodeValue.replace(b.preJax,(d.length>1?d[1]:""));f=null}if(e&&(!b.preJax||d)){c.nodeValue=c.nodeValue.replace(b.postJax,(e.length>1?e[1]:""))}if(f&&!f.nodeValue.match(/\S/)){f=f.previousSibling}}if(b.preRemoveClass&&f&&f.className===b.preRemoveClass){a.MathJax.preview=f}a.MathJax.checked=1},processInput:function(a){var b,i=MathJax.ElementJax.STATE;var h,e,d=a.scripts.length;try{while(a.i<d){h=a.scripts[a.i];if(!h){a.i++;continue}e=h.previousSibling;if(e&&e.className==="MathJax_Error"){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state===i.PROCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state===i.UPDATE){this.checkScriptSiblings(h);var g=h.type.replace(/ *;(.|\s)*/,"");b=this.inputJax[g].Process(h,a);if(typeof b==="function"){if(b.called){continue}this.RestartAfter(b)}b.Attach(h,this.inputJax[g].id);this.saveScript(b,a,h,i)}else{if(h.MathJax.state===i.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var c=new Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.length){a.start=c;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){return this.processError(f,a,"Input")}if(a.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set("Processing math: 100%",0)}a.start=new Date().getTime();a.i=a.j=0;return null},saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.MathJax.state=c.UPDATE;throw Error("No output jax registered for "+a.mimeType)}a.outputJax=this.outputJax[a.mimeType][0].id;if(!d.jax[a.outputJax]){if(d.jaxIDs.length===0){d.jax[a.outputJax]=d.scripts}else{if(d.jaxIDs.length===1){d.jax[d.jaxIDs[0]]=d.scripts.slice(0,d.i)}d.jax[a.outputJax]=[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.length>1){d.jax[a.outputJax].push(b)}b.MathJax.state=c.OUTPUT},prepareOutput:function(c,f){while(c.j<c.jaxIDs.length){var e=c.jaxIDs[c.j],d=MathJax.OutputJax[e];if(d[f]){try{var a=d[f](c);if(typeof a==="function"){if(a.called){continue}this.RestartAfter(a)}}catch(b){if(!b.restart){MathJax.Message.Set("Error preparing "+e+" output ("+f+")",null,600);MathJax.Hub.lastPrepError=b;c.j++}return MathJax.Callback.After(["prepareOutput",this,c,f],b.restart)}}c.j++}return null},processOutput:function(h){var b,g=MathJax.ElementJax.STATE,d,a=h.scripts.length;try{while(h.i<a){d=h.scripts[h.i];if(!d||!d.MathJax){h.i++;continue}var c=d.MathJax.elementJax;if(!c){h.i++;continue}b=MathJax.OutputJax[c.outputJax].Process(d,h);d.MathJax.state=g.PROCESSED;h.i++;if(d.MathJax.preview){d.MathJax.preview.innerHTML=""}this.signal.Post(["New Math",c.inputID]);var e=new Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.length){h.start=e;this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}}}catch(f){return this.processError(f,h,"Output")}if(h.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set("Typesetting math: 100%",0);MathJax.Message.Clear(0)}h.i=h.j=0;return null},processMessage:function(d,b){var a=Math.floor(d.i/(d.scripts.length)*100);var c=(b==="Output"?"Typesetting":"Processing");if(this.config.showProcessingMessages){MathJax.Message.Set(c+" math: "+a+"%",0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.errorSettings.message){throw b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);return MathJax.Callback.After(["process"+a,this,c],b.restart)},formatError:function(a,c){var b=MathJax.HTML.Element("span",{className:"MathJax_Error"},this.config.errorSettings.message);b.jaxID="Error";if(MathJax.Extension.MathEvents){b.oncontextmenu=MathJax.Extension.MathEvents.Event.Menu;b.onmousedown=MathJax.Extension.MathEvents.Event.Mousedown}else{MathJax.Ajax.Require("[MathJax]/extensions/MathEvents.js",function(){b.oncontextmenu=MathJax.Extension.MathEvents.Event.Menu;b.onmousedown=MathJax.Extension.MathEvents.Event.Mousedown})}a.parentNode.insertBefore(b,a);if(a.MathJax.preview){a.MathJax.preview.innerHTML=""}this.lastError=c},RestartAfter:function(a){throw this.Insert(Error("restart"),{restart:MathJax.Callback(a)})},elementCallback:function(c,f){if(f==null&&(c instanceof Array||typeof c==="function")){try{MathJax.Callback(c);f=c;c=null}catch(d){}}if(c==null){c=this.config.elements||[]}if(!(c instanceof Array)){c=[c]}c=[].concat(c);for(var b=0,a=c.length;b<a;b++){if(typeof(c[b])==="string"){c[b]=document.getElementById(c[b])}}if(c.length==0){c.push(document.body)}if(!f){f={}}return{elements:c,callback:f}},elementScripts:function(a){if(typeof(a)==="string"){a=document.getElementById(a)}if(a==null){a=document.body}if(a.tagName!=null&&a.tagName.toLowerCase()==="script"){return[a]}return a.getElementsByTagName("script")},Insert:function(c,a){for(var b in a){if(a.hasOwnProperty(b)){if(typeof a[b]==="object"&&!(a[b] instanceof Array)&&(typeof c[b]==="object"||typeof c[b]==="function")){this.Insert(c[b],a[b])}else{c[b]=a[b]}}}return c}};MathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(MathJax.Hub.config.styles,{".MathJax_Error":MathJax.Hub.config.errorSettings.style});MathJax.Extension={};MathJax.Hub.Configured=MathJax.Callback({});MathJax.Hub.Startup={script:"",queue:MathJax.Callback.Queue(),signal:MathJax.Callback.Signal("Startup"),params:{},Config:function(){this.queue.Push(["Post",this.signal,"Begin Config"]);var b=MathJax.HTML.Cookie.Get("user");if(b.URL||b.Config){if(confirm("MathJax has found a user-configuration cookie that includes code to be run.  Do you want to run it?\n\n(You should press Cancel unless you set up the cookie yourself.)")){if(b.URL){this.queue.Push(["Require",MathJax.Ajax,b.URL])}if(b.Config){this.queue.Push(new Function(b.Config))}}else{MathJax.HTML.Cookie.Set("user",{})}}if(this.params.config){var d=this.params.config.split(/,/);for(var c=0,a=d.length;c<a;c++){if(!d[c].match(/\.js$/)){d[c]+=".js"}this.queue.Push(["Require",MathJax.Ajax,this.URL("config",d[c])])}}if(this.script.match(/\S/)){this.queue.Push(this.script+";\n1;")}this.queue.Push(["ConfigDelay",this],["ConfigBlocks",this],["ConfigDefault",this],[function(e){return e.loadArray(MathJax.Hub.config.config,"config",null,true)},this],["Post",this.signal,"End Config"])},ConfigDelay:function(){var a=this.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;if(a==="onload"){return this.onload}if(a==="configured"){return MathJax.Hub.Configured}return a},ConfigBlocks:function(){var c=document.getElementsByTagName("script");var f=null,b=MathJax.Callback.Queue();for(var d=0,a=c.length;d<a;d++){var e=String(c[d].type).replace(/ /g,"");if(e.match(/^text\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=true/)){c[d].type+=";executed=true";f=b.Push(c[d].innerHTML+";\n1;")}}return f},ConfigDefault:function(){var a=MathJax.Hub.config;if(a["v1.0-compatible"]&&(a.jax||[]).length===0&&!this.params.config&&(a.config||[]).length===0){return MathJax.Ajax.Require(this.URL("extensions","v1.0-warning.js"))}},Cookie:function(){return this.queue.Push(["Post",this.signal,"Begin Cookie"],["Get",MathJax.HTML.Cookie,"menu",MathJax.Hub.config.menuSettings],[function(d){var f=d.menuSettings.renderer,b=d.jax;if(f){var c="output/"+f;b.sort();for(var e=0,a=b.length;e<a;e++){if(b[e].substr(0,7)==="output/"){break}}if(e==a-1){b.pop()}else{while(e<a){if(b[e]===c){b.splice(e,1);break}e++}}b.unshift(c)}},MathJax.Hub.config],["Post",this.signal,"End Cookie"])},Styles:function(){return this.queue.Push(["Post",this.signal,"Begin Styles"],["loadArray",this,MathJax.Hub.config.styleSheets,"config"],["Styles",MathJax.Ajax,MathJax.Hub.config.styles],["Post",this.signal,"End Styles"])},Jax:function(){var e=MathJax.Hub.config,c=MathJax.Hub.outputJax;for(var f=0,b=e.jax.length,d=0;f<b;f++){if(e.jax[f].substr(0,7)==="output/"){c.order[e.jax[f].substr(7)]=d;d++}}var a=MathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin Jax"],["loadArray",this,e.jax,"jax","config.js"],["Post",this.signal,"End Jax"])},Extensions:function(){var a=MathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin Extensions"],["loadArray",this,MathJax.Hub.config.extensions,"extensions"],["Post",this.signal,"End Extensions"])},Message:function(){MathJax.Message.Init(true)},Menu:function(){var b=MathJax.Hub.config.menuSettings,a=MathJax.Hub.outputJax,d;for(var c in a){if(a.hasOwnProperty(c)){if(a[c].length){d=a[c];break}}}if(d&&d.length){if(b.renderer&&b.renderer!==d[0].id){d.unshift(MathJax.OutputJax[b.renderer])}b.renderer=d[0].id}},Hash:function(){if(MathJax.Hub.config.positionToHash&&document.location.hash){setTimeout("document.location = document.location.hash",1)}},MenuZoom:function(){if(!MathJax.Extension.MathMenu){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/extensions/MathMenu.js",{}]),1000)}if(!MathJax.Extension.MathZoom){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/extensions/MathZoom.js",{}]),2000)}},onLoad:function(a){var b=this.onload=MathJax.Callback(function(){MathJax.Hub.Startup.signal.Post("onLoad")});if(document.body&&document.readyState&&document.readyState!=="loading"){return[b]}if(window.addEventListener){window.addEventListener("load",b,false);if(!this.params.noDOMContentEvent){window.addEventListener("DOMContentLoaded",b,false)}}else{if(window.attachEvent){window.attachEvent("onload",b)}else{window.onload=b}}return b},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return function(){}}return this.queue.Push(["Post",this.signal,"Begin Typeset"],["Typeset",MathJax.Hub,a,b],["Post",this.signal,"End Typeset"])},URL:function(b,a){if(!a.match(/^([a-z]+:\/\/|\[|\/)/)){a="[MathJax]/"+b+"/"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b instanceof Array)){b=[b]}if(b.length){var h=MathJax.Callback.Queue(),j={},e;for(var g=0,d=b.length;g<d;g++){e=this.URL(f,b[g]);if(c){e+="/"+c}if(a){h.Push(["Require",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j))}}return h.Push({})}}return null}};(function(d){var b=window[d],e="["+d+"]";var c=b.Hub,a=b.Ajax,f=b.Callback;var g=MathJax.Object.Subclass({JAXFILE:"jax.js",require:null,config:{},Init:function(i,h){if(arguments.length===0){return this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var i=this.constructor,h={};if(k!=null){for(var l in k){if(k.hasOwnProperty(l)){if(typeof k[l]==="function"){i.protoFunction(l,k[l])}else{h[l]=k[l]}}}if(k.toString!==i.prototype.toString&&k.toString!=={}.toString){i.protoFunction("toString",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,j);return this},Translate:function(h,i){throw Error(this.directory+"/"+this.JAXFILE+" failed to define the Translate() method")},Register:function(h){},Config:function(){this.config=c.CombineConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.config.Augment)}},Startup:function(){},loadComplete:function(i){if(i==="config.js"){return a.loadComplete(this.directory+"/"+i)}else{var h=f.Queue();h.Push(c.Register.StartupHook("End Config",{}),["Post",c.Startup.signal,this.id+" Jax Config"],["Config",this],["Post",c.Startup.signal,this.id+" Jax Require"],[function(j){return MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(j,k){return MathJax.Hub.Startup.loadArray(j.extensions,"extensions/"+k)},this.config||{},this.id],["Post",c.Startup.signal,this.id+" Jax Startup"],["Startup",this],["Post",c.Startup.signal,this.id+" Jax Ready"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=j.preTranslate;j.Process=j.Translate;j.postProcess=j.postTranslate},this.constructor.prototype])}return h.Push(["loadComplete",a,this.directory+"/"+i])}}},{id:"Jax",version:"2.0",directory:e+"/jax",extensionDir:e+"/extensions"});b.InputJax=g.Subclass({elementJax:"mml",copyTranslate:true,Process:function(l,q){var j=f.Queue(),o;var k=this.elementJax;if(!(k instanceof Array)){k=[k]}for(var n=0,h=k.length;n<h;n++){o=b.ElementJax.directory+"/"+k[n]+"/"+this.JAXFILE;if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(o);j.Push(a.Require(o))}o=this.directory+"/"+this.JAXFILE;var p=j.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=function(){if(!p.called){return p}throw Error(o+" failed to load properly")}}k=c.outputJax["jax/"+k[0]];if(k){j.Push(a.Require(k[0].directory+"/"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var i=h.SourceElement();return(h.originalText!==b.HTML.getScript(i))},Register:function(h){if(!c.inputJax){c.inputJax={}}c.inputJax[h]=this}},{id:"InputJax",version:"2.0",directory:g.directory+"/input",extensionDir:g.extensionDir});b.OutputJax=g.Subclass({copyTranslate:true,preProcess:function(j){var i,h=this.directory+"/"+this.JAXFILE;this.constructor.prototype.preProcess=function(k){if(!i.called){return i}throw Error(h+" failed to load properly")};i=a.Require(h);return i},Register:function(i){var h=c.outputJax;if(!h[i]){h[i]=[]}if(h[i].length&&(this.id===c.config.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(b.ElementJax.directory+"/"+(i.split(/\//)[1])+"/"+this.JAXFILE)},Remove:function(h){}},{id:"OutputJax",version:"2.0",directory:g.directory+"/output",extensionDir:g.extensionDir,fontDir:e+(b.isPacked?"":"/..")+"/fonts",imageDir:e+(b.isPacked?"":"/..")+"/images"});b.ElementJax=g.Subclass({Init:function(i,h){return this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null,originalText:"",mimeType:"",Text:function(i,j){var h=this.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=this.STATE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.UPDATE;return c.Reprocess(h,i)},Update:function(h){return this.Rerender(h)},Rerender:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.OUTPUT;return c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post(["Remove Math",this.inputID]);this.Detach()}},needsUpdate:function(){return b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){return document.getElementById(this.inputID)},Attach:function(i,j){var h=i.MathJax.elementJax;if(i.MathJax.state===this.STATE.UPDATE){h.Clone(this)}else{h=i.MathJax.elementJax=this;if(i.id){this.inputID=i.id}else{i.id=this.inputID=b.ElementJax.GetID();this.newID=1}}h.originalText=b.HTML.getScript(i);h.inputJax=j;if(h.root){h.root.inputID=h.inputID}return h},Detach:function(){var h=this.SourceElement();if(!h){return}try{delete h.MathJax}catch(i){h.MathJax=null}if(this.newID){h.id=""}},Clone:function(h){var i;for(i in this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])==="undefined"&&i!=="newID"){delete this[i]}}for(i in h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])==="undefined"||(this[i]!==h[i]&&i!=="inputID")){this[i]=h[i]}}}},{id:"ElementJax",version:"2.0",directory:g.directory+"/element",extensionDir:g.extensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:function(){this.ID++;return"MathJax-Element-"+this.ID},Subclass:function(){var h=g.Subclass.apply(this,arguments);h.loadComplete=this.prototype.loadComplete;return h}});b.ElementJax.prototype.STATE=b.ElementJax.STATE;b.OutputJax.Error={id:"Error",version:"2.0",config:{},ContextMenu:function(){return b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Event,arguments)},Mousedown:function(){return b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.Event,arguments)},getJaxFromMath:function(){return{inputJax:"Error",outputJax:"Error",originalText:"Math Processing Error"}}};b.InputJax.Error={id:"Error",version:"2.0",config:{},sourceMenuTitle:"Error Message"}})("MathJax");(function(l){var f=window[l];if(!f){f=window[l]={}}var c=f.Hub;var q=c.Startup;var u=c.config;var e=document.getElementsByTagName("head")[0];if(!e){e=document.childNodes[0]}var b=(document.documentElement||document).getElementsByTagName("script");var d=new RegExp("(^|/)"+l+"\\.js(\\?.*)?$");for(var o=b.length-1;o>=0;o--){if(b[o].src.match(d)){q.script=b[o].innerHTML;if(RegExp.$2){var r=RegExp.$2.substr(1).split(/\&/);for(var n=0,h=r.length;n<h;n++){var k=r[n].match(/(.*)=(.*)/);if(k){q.params[unescape(k[1])]=unescape(k[2])}}}u.root=b[o].src.replace(/(^|\/)[^\/]*(\?.*)?$/,"");break}}f.Ajax.config=u;var a={isMac:(navigator.platform.substr(0,3)==="Mac"),isPC:(navigator.platform.substr(0,3)==="Win"),isMSIE:(window.ActiveXObject!=null&&window.clipboardData!=null),isFirefox:(window.netscape!=null&&document.ATTRIBUTE_NODE!=null&&!window.opera),isSafari:(navigator.userAgent.match(/ (Apple)?WebKit\//)!=null&&(!window.chrome||window.chrome.loadTimes==null)),isChrome:(window.chrome!=null&&window.chrome.loadTimes!=null),isOpera:(window.opera!=null&&window.opera.version!=null),isKonqueror:(window.hasOwnProperty&&window.hasOwnProperty("konqueror")&&navigator.vendor=="KDE"),versionAtLeast:function(x){var w=(this.version).split(".");x=(new String(x)).split(".");for(var y=0,j=x.length;y<j;y++){if(w[y]!=x[y]){return parseInt(w[y]||"0")>=parseInt(x[y])}}return true},Select:function(j){var i=j[c.Browser];if(i){return i(c.Browser)}return null}};var g=navigator.userAgent.replace(/^Mozilla\/(\d+\.)+\d+ /,"").replace(/[a-z][-a-z0-9._: ]+\/\d+[^ ]*-[^ ]*\.([a-z][a-z])?\d+ /i,"").replace(/Gentoo |Ubuntu\/(\d+\.)*\d+ (\([^)]*\) )?/,"");c.Browser=c.Insert(c.Insert(new String("Unknown"),{version:"0.0"}),a);for(var t in a){if(a.hasOwnProperty(t)){if(a[t]&&t.substr(0,2)==="is"){t=t.slice(2);if(t==="Mac"||t==="PC"){continue}c.Browser=c.Insert(new String(t),a);var p=new RegExp(".*(Version)/((?:\\d+\\.)+\\d+)|.*("+t+")"+(t=="MSIE"?" ":"/")+"((?:\\d+\\.)*\\d+)|(?:^|\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\d+\\.)+\\d+)");var s=p.exec(g)||["","","","unknown","0.0"];c.Browser.name=(s[1]=="Version"?t:(s[3]||s[5]));c.Browser.version=s[2]||s[4]||s[6];break}}}c.Browser.Select({Safari:function(j){var i=parseInt((String(j.version).split("."))[0]);if(i>85){j.webkit=j.version}if(i>=534){j.version="5.1"}else{if(i>=533){j.version="5.0"}else{if(i>=526){j.version="4.0"}else{if(i>=525){j.version="3.1"}else{if(i>500){j.version="3.0"}else{if(i>400){j.version="2.0"}else{if(i>85){j.version="1.0"}}}}}}}j.isMobile=(navigator.appVersion.match(/Mobile/i)!=null);j.noContextMenu=j.isMobile},Firefox:function(j){if((j.version==="0.0"||navigator.userAgent.match(/Firefox/)==null)&&navigator.product==="Gecko"){var m=navigator.userAgent.match(/[\/ ]rv:(\d+\.\d.*?)[\) ]/);if(m){j.version=m[1]}else{var i=(navigator.buildID||navigator.productSub||"0").substr(0,8);if(i>="20111220"){j.version="9.0"}else{if(i>="20111120"){j.version="8.0"}else{if(i>="20110927"){j.version="7.0"}else{if(i>="20110816"){j.version="6.0"}else{if(i>="20110621"){j.version="5.0"}else{if(i>="20110320"){j.version="4.0"}else{if(i>="20100121"){j.version="3.6"}else{if(i>="20090630"){j.version="3.5"}else{if(i>="20080617"){j.version="3.0"}else{if(i>="20061024"){j.version="2.0"}}}}}}}}}}}}j.isMobile=(navigator.appVersion.match(/Android/i)!=null||navigator.userAgent.match(/ Fennec\//)!=null)},Opera:function(i){i.version=opera.version()},MSIE:function(j){j.isIE9=!!(document.documentMode&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=!j.isIE9||document.documentMode<9;var v=false;try{new ActiveXObject("MathPlayer.Factory.1");v=true}catch(m){}if(v&&!q.params.NoMathPlayer){var i=document.createElement("object");i.id="mathplayer";i.classid="clsid:32F66A20-7614-11D4-BD11-00104BD3F987";document.getElementsByTagName("head")[0].appendChild(i);document.namespaces.add("m","http://www.w3.org/1998/Math/MathML");j.hasMathPlayer=true;if(document.readyState&&(document.readyState==="loading"||document.readyState==="interactive")){document.write('<?import namespace="m" implementation="#MathPlayer">');j.mpImported=true}}}});c.Browser.Select(MathJax.Message.browsers);c.queue=f.Callback.Queue();c.queue.Push(["Post",q.signal,"Begin"],["Config",q],["Cookie",q],["Styles",q],["Message",q],function(){var i=f.Callback.Queue(q.Jax(),q.Extensions());return i.Push({})},["Menu",q],q.onLoad(),function(){MathJax.isReady=true},["Typeset",q],["Hash",q],["MenuZoom",q],["Post",q.signal,"End"])})("MathJax")}};

_application/x-javascriptO*bplist00‘bcX$versionX$objectsY$archiverT$top Ü†Ø"()012HIJKLMNOPQRSTUVWX\]U$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _Thttp://wiki.udacity.com/moin_static1/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^GÎ\‚»”3456?WNS.keysZNS.objectsÄ®789:;<=>Ä	Ä
ÄÄÄÄÄÄ®@ABCDEFGÄÄÄÄÄÄÄÄVServer_Transfer-EncodingZConnection\Content-TypeTDate]Last-Modified_Content-EncodingTVaryUnginxXIdentityUclose_application/x-javascript_Tue, 29 May 2012 19:43:03 GMT_Tue, 17 Apr 2012 17:34:22 GMTTgzip_Accept-Encoding“*+YZ_NSMutableDictionary£Y[/\NSDictionary¡∏“*+^__NSHTTPURLResponse£`a/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—de_WebResourceResponseÄ    # - 2 7 V \ w z ~ Å Ñ á ã é ï ò õ û ° § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º √ œ ◊ Ÿ € ›49DMSV\enpwäåïóôõùü°£•Æ∞≤¥∂∏∫ºæ≈Ÿ‰Òˆ"+1Llåë£®æ¬œ“◊ÎÔ#&<             f              >_Thttp://wiki.udacity.com/moin_static1/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML‘Om;//
// MoinMoin commonly used JavaScript functions
//

// We keep here the state of the search box
searchIsDisabled = false;

function searchChange(e) {
    // Update search buttons status according to search box content.
    // Ignore empty or whitespace search term.
    var value = e.value.replace(/\s+/, '');
    if (value == '' || searchIsDisabled) { 
        searchSetDisabled(true);
    } else {
        searchSetDisabled(false);
    }
}

function searchSetDisabled(flag) {
    // Enable or disable search
    document.getElementById('fullsearch').disabled = flag;
    document.getElementById('titlesearch').disabled = flag;
}

function searchFocus(e) {
    // Update search input content on focus
    if (e.value == search_hint) {
        e.value = '';
        e.className = '';
        searchIsDisabled = false;
    }
}

function searchBlur(e) {
    // Update search input content on blur
    if (e.value == '') {
        e.value = search_hint;
        e.className = 'disabled';
        searchIsDisabled = true;
    }
}

function actionsMenuInit(title) {
    // Initialize action menu
    for (i = 0; i < document.forms.length; i++) {
        var form = document.forms[i];
        if (form.className == 'actionsmenu') {
            // Check if this form needs update
            var div = form.getElementsByTagName('div')[0];
            var label = div.getElementsByTagName('label')[0];
            if (label) {
                // This is the first time: remove label and do buton.
                div.removeChild(label);
                var dobutton = div.getElementsByTagName('input')[0];
                div.removeChild(dobutton);
                // and add menu title
                var select = div.getElementsByTagName('select')[0];
                var item = document.createElement('option');
                item.appendChild(document.createTextNode(title));
                item.value = 'show';
                select.insertBefore(item, select.options[0]);
                select.selectedIndex = 0;
            }
        }
    }
}

// use this instead of assigning to window.onload directly:
function addLoadEvent(func) {
    // alert("addLoadEvent " + func)
    var oldonload = window.onload;
    if (typeof window.onload != 'function') {
        window.onload = func;
    } else {
        window.onload = function() {
            oldonload();
            func();
        }
    }
}

// copy from fckeditor browser check code (fckeditor.js:298, function : FCKeditor_IsCompatibleBrowser)
function can_use_gui_editor() {
    var sAgent = navigator.userAgent.toLowerCase() ;

    // Internet Explorer 5.5+
    if ( /*@cc_on!@*/false && sAgent.indexOf("mac") == -1 )
    {
        var sBrowserVersion = navigator.appVersion.match(/MSIE (.\..)/)[1] ;
        return ( sBrowserVersion >= 5.5 ) ;
    }

    // Gecko (Opera 9 tries to behave like Gecko at this point).
    if ( navigator.product == "Gecko" && navigator.productSub >= 20030210 && !( typeof(opera) == 'object' && opera.postError ) )
        return true ;

    // Opera 9.50+
    if ( window.opera && window.opera.version && parseFloat( window.opera.version() ) >= 9.5 )
        return true ;

    // Adobe AIR
    // Checked before Safari because AIR have the WebKit rich text editor
    // features from Safari 3.0.4, but the version reported is 420.
    if ( sAgent.indexOf( ' adobeair/' ) != -1 )
        return ( sAgent.match( / adobeair\/(\d+)/ )[1] >= 1 ) ; // Build must be at least v1

    // Safari 3+
    if ( sAgent.indexOf( ' applewebkit/' ) != -1 )
        return ( sAgent.match( / applewebkit\/(\d+)/ )[1] >= 522 ) ;    // Build must be at least 522 (v3)

    return false ;

}


function update_edit_links() {
    // Update editlink according if if the browser is compatible
    if (can_use_gui_editor() == false){
        //alert("update_edit_links: can't use gui editor");
        return;
    }
    var editlinks = document.getElementsByName("editlink");
    for (i = 0; i < editlinks.length; i++) {
        var link = editlinks[i];
        href = link.href.replace('editor=textonly','editor=guipossible');
        link.href = href;
        //alert("update_edit_links: modified to guipossible");
    }
}


function add_gui_editor_links() {
    // Add gui editor link after the text editor link
    
    // If the variable is not set or browser is not compatible, exit
    try {gui_editor_link_href}
    catch (e) {
        //alert("add_gui_editor_links: gui_editor_link_href not here");
        return
    }
    if (can_use_gui_editor() == false){
        //alert("add_gui_editor_links: can't use gui_editor");
        return;
    }
    var all = document.getElementsByName('texteditlink');
    for (i = 0; i < all.length; i++) {
        var textEditorLink = all[i];
        // Create a list item with a link
        var guiEditorLink = document.createElement('a');
        guiEditorLink.href = gui_editor_link_href;
        var text = document.createTextNode(gui_editor_link_text);
        guiEditorLink.appendChild(text);
        var listItem = document.createElement('li')
        listItem.appendChild(guiEditorLink);
        // Insert in the editbar
        var editbar = textEditorLink.parentNode.parentNode
        var nextListItem = textEditorLink.parentNode.nextSibling;
        editbar.insertBefore(listItem, nextListItem);
        //alert("add_gui_editor_links: added gui editor link");
    }
}
 

function show_switch2gui() {
    // Show switch to gui editor link if the browser is compatible
    if (can_use_gui_editor() == false) return;
    
    var switch2gui = document.getElementById('switch2gui')
    if (switch2gui) {
        switch2gui.style.display = 'inline';
    }
}

// for long documents with many comments this is expensive to calculate,
// thus we keep it here:
comments = null;

function toggleComments() {
    // Toggle visibility of every tag with class "comment"
    for (i = 0; i < comments.length; i++){
        el = comments[i];
        if ( el.style.display != 'none' ) {
            el.style.display = 'none';
        } else {
            el.style.display = '';
        }
    }
}

function show_toggleComments() {
    // Show edit bar item for toggling inline comments on/off only if inline comments exist on the page
    comments = getElementsByClassName('comment', null, document);
    if (comments.length > 0) {
        var buttons = getElementsByClassName('toggleCommentsButton', null, document);
        for (i = 0; i < buttons.length; i++){
            el = buttons[i];
            el.style.display = '';
        }
    }
}


function load() {
    // Do not name this "onload", it does not work with IE :-)
    // TODO: create separate onload for each type of view and set the
    // correct function name in the html. 
    // e.g <body onlod='editor_onload()'>

    // login focus
    if (document.forms['loginform']) {
        document.forms['loginform'].elements['name'].focus();
    }
    
    // Page view stuff
    update_edit_links();
    add_gui_editor_links();
    
    // Editor stuff
    show_switch2gui();

    // Enable menu item "ToggleComments" if inline comments exist
    show_toggleComments();
 
    // data browser widget
    dbw_hide_buttons();
}


function before_unload(evt) {
    // TODO: Better to set this in the editor html, as it does not make
    // sense elsehwere.
    // confirmleaving is available when editing
    try {return confirmleaving();}
    catch (e) {}
}

// Initialize after loading the page
addLoadEvent(load)

// Catch before unloading the page
window.onbeforeunload = before_unload

function dbw_update_search(dbw_id)
{
    var table = document.getElementById(dbw_id+'table');
    var cell;
    var shown;
    var i
    var cols = table.rows[0].cells.length;
    var filter = new Array();
    var dofilter = new Array();
    var form = document.forms[dbw_id+'form'];

    for (i = 0; i < cols; i++) {
        dofilter[i] = false;
        if (form[dbw_id+'filter'+i]) {
            dofilter[i] = true;
            filter[i] = form[dbw_id+'filter'+i].value;
            if (filter[i] == '[all]')
                dofilter[i] = false;
            if (filter[i] == '[empty]')
                filter[i] = '';
        }
    }

    for (i = 1; i < table.rows.length; i++) {
        var show = true;
        for (col = 0; col < cols; col++) {
            if (!dofilter[col])
                continue;

            cell = table.rows[i].cells[col];

            if (filter[col] == '[notempty]') {
                if (cell.abbr == '') {
                    show = false;
                    break;
                }
            } else if (filter[col] != cell.abbr) {
                show = false;
                break;
            }
        }
        if (show)
            table.rows[i].style.display = '';
        else
            table.rows[i].style.display = 'none';
    }
}

function dbw_hide_buttons() {
    var form;
    var elem;
    var name;

    for (var fidx = 0; fidx < document.forms.length; fidx++) {
        form = document.forms[fidx];
        for (var eidx = 0; eidx < form.elements.length; eidx++) {
            elem = form.elements[eidx];
            name = elem.name;
            if (name) {
                if (name.indexOf('dbw.') >= 0 && name.substr(-7) == '.submit')
                    elem.style.display = 'none';
            }
        }
    }
}

/*  getElementsByClassName
    Developed by Robert Nyman, http://www.robertnyman.com
    Code/licensing: http://code.google.com/p/getelementsbyclassname/ (MIT license)
    Version: 1.0.1
*/  
var getElementsByClassName = function (className, tag, elm){
    if (document.getElementsByClassName) {
        getElementsByClassName = function (className, tag, elm) {
            elm = elm || document;
            var elements = elm.getElementsByClassName(className),
                nodeName = (tag)? new RegExp("\\b" + tag + "\\b", "i") : null,
                returnElements = [],
                current;
            for(var i=0, il=elements.length; i<il; i+=1){
                current = elements[i];
                if(!nodeName || nodeName.test(current.nodeName)) {
                    returnElements.push(current);
                }
            }
            return returnElements;
        };
    }
    else if (document.evaluate) {
        getElementsByClassName = function (className, tag, elm) {
            tag = tag || "*";
            elm = elm || document;
            var classes = className.split(" "),
                classesToCheck = "",
                xhtmlNamespace = "http://www.w3.org/1999/xhtml",
                namespaceResolver = (document.documentElement.namespaceURI === xhtmlNamespace)? xhtmlNamespace : null,
                returnElements = [],
                elements,
                node;
            for(var j=0, jl=classes.length; j<jl; j+=1){
                classesToCheck += "[contains(concat(' ', @class, ' '), ' " + classes[j] + " ')]";
            }
            try {
                elements = document.evaluate(".//" + tag + classesToCheck, elm, namespaceResolver, 0, null);
            }
            catch (e) {
                elements = document.evaluate(".//" + tag + classesToCheck, elm, null, 0, null);
            }
            while ((node = elements.iterateNext())) {
                returnElements.push(node);
            }
            return returnElements;
        };
    }
    else {
        getElementsByClassName = function (className, tag, elm) {
            tag = tag || "*";
            elm = elm || document;
            var classes = className.split(" "),
                classesToCheck = [],
                elements = (tag === "*" && elm.all)? elm.all : elm.getElementsByTagName(tag),
                current,
                returnElements = [],
                match;
            for(var k=0, kl=classes.length; k<kl; k+=1){
                classesToCheck.push(new RegExp("(^|\\s)" + classes[k] + "(\\s|$)"));
            }
            for(var l=0, ll=elements.length; l<ll; l+=1){
                current = elements[l];
                match = false;
                for(var m=0, ml=classesToCheck.length; m<ml; m+=1){
                    match = classesToCheck[m].test(current.className);
                    if (!match) {
                        break;
                    }
                }
                if (match) {
                    returnElements.push(current);
                }
            }
            return returnElements;
        };
    }
    return getElementsByClassName(className, tag, elm);
};


// ===========================================================================
// The following functions are part of scroll edit textarea on double-click
//
// This code is public domain (or primarily public domain).
// Do whatever you want with it.  In particular, you may release it under
// GPL 2.0 or incorporate it into projects that use GPL 2.0.
// -- Radomir Dopieralski and Roger D. Haase

// Debugging helpers
//  save debugging state in cookie - presence of a cookie means debugging mode is on
cookiePath = '/';
function autoScrollSetCookie (){
    document.cookie = 'autoscrolldebug=on; path=' + cookiePath + '; ';
}
function autoScrollDeleteCookie (){
    var cookie_date = new Date ( );  // current date & time
    cookie_date.setTime ( cookie_date.getTime() - 1 );
    document.cookie = 'autoscrolldebug=; expires=' + cookie_date.toGMTString() + '; path=' + cookiePath + '; ';
}
function autoScrollGetCookie (){
    var results = document.cookie.match ( '(^|;) ?' + "autoscrolldebug" + '=([^;]*)(;|$)' );
    if ( results ) {
        return ( unescape ( results[2] ) );
    } else {
        return null;
    }
}
// turn on debugging mode by previewing, saving or reading a page with "auto scroll debug on" within an h1 header
// = My Page auto scroll debug on =
// once set on,debug mode says on for current session or until turned off with
// = My Page auto scroll debug off =
autoScrollDebugOn = 0;
// this function executed on page load
function turnDebugOnOrOff () {
    // set global variable for use by cookie functions
    cookiePath = document.getElementsByName('edit_on_doubleclick')[0].content;
    var hOnes = document.getElementsByTagName('H1');
    for (var i = 0; i < hOnes.length; ++i) {
        var header = hOnes[i].textContent || hOnes[i].innerText;
        if (header.match ('auto scroll debug on')) {
            autoScrollSetCookie ();
        }
        if (header.match ('auto scroll debug off')) {
            autoScrollDeleteCookie ();
        }
    }
    if (autoScrollGetCookie ()) {
        autoScrollDebugOn = 1;
    } else {
        autoScrollDebugOn = 0;
    }
}

// functions used for testing - mouseover tooltip with tagName and scroll line number
function doMouseOver(e) {
    var targ = getNode(e);
    targ.title = 'tagName='+targ.tagName+'  line='+targ.scrollLine;
}
function doMouseOut(e) {
    var targ = getNode(e);
    targ.removeAttribute('title');
}
// add leading zeros to hours, minutes, seconds, milliseconds
function leadingZeros (nbr,count) { 
    var strNbr = nbr + '';
    while (strNbr.length < count) {
        strNbr = "0" + strNbr; 
    }
    return strNbr;
}
// format hours, minutes, seconds, and ms
function formatTime (t) {
    var sHours = leadingZeros (t.getHours(), 2);
    var sMinutes = leadingZeros (t.getMinutes (), 2);
    var sSeconds = leadingZeros (t.getSeconds (), 2);
    var sMilliseconds = leadingZeros (t.getMilliseconds (), 3);
    return sHours + ':' + sMinutes + ':' + sSeconds + ':' + sMilliseconds;
}

// this variable is available as easy way to display trace info
autoDebugTrace = '';
function showStartStopTimes (startTime) {
    // display a message with start and end times at top of page
    var endTime = new Date();
    var tStart ='auto scroll debug on -- Initialization start H:M:S:ms=' + formatTime (startTime);
    var tEnd = '  end H:M:S:ms=' + formatTime (endTime);
    var timingMsg = document.createElement ('P');
    timingMsg.innerHTML = tStart + tEnd;
    timingMsg.style. color = "red";
    var contentDiv;
    if (document.getElementById ('preview')) {
        contentDiv = document.getElementById ('preview');
    } else {
        contentDiv = document.getElementById ('content');
    }
    contentDiv.insertBefore (timingMsg, contentDiv.firstChild);
    // display trace info is there is any
    if (autoDebugTrace) {
        alert(autoDebugTrace);
    }
}
// end of debugging helpers

// this scrolls the textarea after a doubleclick - jumpLine is scroll-to line
function scrollTextarea(jumpLine) {
    var txtBox = document.getElementById('editor-textarea');
    scroll(0,0); 
    if (txtBox) {
        // Calculate the cursor position - IE supports innerText, not textContent
        var textLines = txtBox.textContent || txtBox.innerText;
        textLines = textLines.match(/(.*(\r\n|\r|\n))/g);
        var scrolledText = '';
        for (var i = 0; i < textLines.length && i < jumpLine; ++i) {
            scrolledText += textLines[i];
        }
        txtBox.focus();
        if (txtBox.setSelectionRange) {
            // Standard-compliant browsers
            // Move the cursor
            txtBox.setSelectionRange(scrolledText.length, scrolledText.length);
            // Calculate how far to scroll, by putting the text that is to be
            // above the fold in a DIV, and checking the DIV's height.
            var scrollPre = document.createElement('pre');
            txtBox.parentNode.appendChild(scrollPre);
            var style = window.getComputedStyle(txtBox, '');
            scrollPre.style.lineHeight = style.lineHeight;
            scrollPre.style.fontFamily = style.fontFamily;
            scrollPre.style.fontSize = style.fontSize;
            scrollPre.style.padding = 0;
            scrollPre.style.letterSpacing = style.letterSpacing;
            // Different browsers call this value differently:
            try { scrollPre.style.whiteSpace = "-moz-pre-wrap"; } catch(e) {}
            try { scrollPre.style.whiteSpace = "-o-pre-wrap"; } catch(e) {}
            try { scrollPre.style.whiteSpace = "-pre-wrap"; } catch(e) {}
            try { scrollPre.style.whiteSpace = "pre-wrap"; } catch(e) {}
            scrollPre.textContent = scrolledText;
            txtBox.scrollTop = scrollPre.scrollHeight-100;
            scrollPre.parentNode.removeChild(scrollPre);
        } else if (txtBox.createTextRange) {
            // Microsoft Internet Explorer
            // We don't need to scroll, it will do it automatically, just move
            // the cursor.
            var range = txtBox.createTextRange();
            range.collapse(true);
            range.moveEnd('character', scrolledText.length);
            range.moveStart('character', scrolledText.length);
            range.select();
            txtBox.__column = 1;
        }
    } 
}

// stop event bubbling
function stopBubbling(e) {
    if (e.stopPropagation) {
        e.stopPropagation(); 
    }
    e.cancelBubble = true;
}

// stop bubbling and return event node 
function getNode(e) {
    // window.event and e.srcElement are IE
    var e = e || window.event;
    var targ = e.target || e.srcElement;
    if (targ.nodeType == 3) {
        // workaround safari
        targ = targ.parentNode;
    }
    stopBubbling(e);
    return targ;
}

// add action=edit and scrollLine to document.location
function doActionEdit(e) {
    var targ = getNode(e);
    // MoinMoin counts starting with 1, scrollTextarea starts with 0
    document.location.search = '?action=edit&line='+(targ.scrollLine-1);
}

// scroll textarea on this page
function doTextareaScroll(e) {
    var targ = getNode(e);
    scrollTextarea(targ.scrollLine-1);
}

// This is the function that registers double clicks.
// isPreview is true if the current page is an edit draft preview
function setCallback(node, line, isPreview) {
    if (node.scrollLine) {
        // this node already processed
        return;
    } else {
        node.scrollLine = line;
        if(window.addEventListener){ 
            if (isPreview) {
                node.addEventListener('dblclick',doTextareaScroll,false);
            } else {
                node.addEventListener('dblclick',doActionEdit,false);
            }
            if (autoScrollDebugOn) {
                node.addEventListener('mouseover', doMouseOver,false); 
                node.addEventListener('mouseout',doMouseOut,false); 
            }
        } else {
            // IE
            if (isPreview) {
                node.attachEvent('ondblclick',doTextareaScroll);
            } else {
                node.attachEvent('ondblclick',doActionEdit);
            }
            if (autoScrollDebugOn) {
                node.attachEvent('onmouseover', doMouseOver,false); 
                node.attachEvent('onmouseout',doMouseOut,false);
            }
        }
    }
}

// walk part of DOM and add doubleclick function to all nodes with tagNames
function walkDom (someNode, lineNbr, isPreview, nextId, topId) {

    //~ // handle special cases of paragraph on line after <<TOC>> and ---- (horizontal rule)
    //~ //   But this effects paragraphs on multiple lines: doubleclick goes to paragraph bottom rather than top.
    //~ //   Seems best to live with TOC and HR problem and wait for Moin2.
    //~ var next1, next2, next3;
    //~ var nextNbr = 'line-' + (lineNbr-0+1);
    //~ if (someNode.parentNode.tagName == 'P' && someNode.parentNode.scrollLine) {
        //~ next1 = someNode.nextSibling;
        //~ if (next1 && next1.tagName != 'SPAN') {
            //~ next2 = next1.nextSibling;
        //~ }
        //~ if (next2 && next2.id == nextNbr) {
            //~ alert('Correcting scrollLine='+lineNbr);
            //~ someNode.parentNode.scrollLine = lineNbr;
            //~ return;
        //~ }
    //~ }
    
    var ie8LoopCounter = 0;
    var doChild = true;
    while (!(someNode.id == nextId) && !(someNode.id == topId)) {
        // workaround IE8 bug:  http://moinmo.in/MoinMoinBugs/FormInsideTableCausesIE8ScriptLoop
        ie8LoopCounter += 1;
        if (ie8LoopCounter > 10000) {
            return;
        }
        
        // add children, add siblings, add parent
        if (doChild && someNode.firstChild) {
            someNode = someNode.firstChild;
        } else {
            doChild = true;
            if (someNode.nextSibling) {
                someNode = someNode.nextSibling;
            } else {
                if (someNode.parentNode.nextSibling) {
                someNode = someNode.parentNode.nextSibling;
                } else {
                    doChild = false;
                    someNode = someNode.parentNode.parentNode;
                }
            }
        }
        if (doChild && someNode.tagName && !(someNode.id == nextId) && !(someNode.id == topId)) {
            setCallback(someNode, lineNbr, isPreview);
        }
    }
}

// run during page load when user may edit current page OR is viewing draft preview
function setSpanTags(isPreview) {
    var startTime = new Date();
    // find all the SPAN tags with an ID beginning with "line-"
    var spanTags = document.getElementsByTagName('span');
    var marks = [];
    for (var i = 0; i < spanTags.length; ++i) {
        if (spanTags[i].id && spanTags[i].id.substring(0, 5) == 'line-') {
            marks.push(spanTags[i]);
        }
    }
    var top = document.getElementById('content');
    var bottom = document.getElementById('bottom');
    // add expected stopping point to end of array for convenience
    if (bottom) {
        marks.push(bottom); 
    } else {
        if (autoScrollDebugOn) {
            alert("auto scroll debug 1: document.getElementById('bottom') failed");
        }
    }
    var skipTo = -1; 
    // loop through span tags and apply double-click events to appropriate node(s) 
    for (i = 0; i < marks.length-1; ++i) {
        var mark = marks[i];
        // skip span tags generated by embedded parsers
        if (i > skipTo) {
            // split the ID into parts: looks like "line-22" or "line-22-1"
            var lineParts = mark.id.split('-');
            var line = lineParts[1];
            if (lineParts.length == 3) {
                // have found output from embedded parser
                // find next span id that looks like "line-n" and the "line-n-n" just before it
                var j = i - 0;
                while (lineParts.length == 3) {
                    j++;
                    lineParts = marks[j].id.split('-');
                }
                // determine how many lines, starting line number, and add double-click events
                var nbrParsedLines = j - i;
                var parsedLineNbr = lineParts[1] - nbrParsedLines - 1;
                for (var k = 0; k < nbrParsedLines; ++k) { 
                    if (marks[i+k] && marks[i+k+1] && marks[i+k+1].id) {
                        walkDom (marks[i+k], parsedLineNbr+k, isPreview, marks[i+k+1].id, top.id);
                    } else {
                        if (autoScrollDebugOn) {
                            alert('auto scroll debug 2: skipping walkDom, i=' + i + ' k=' + k + ' marks[i].id=' + marks[i].id);
                        }
                    }
                }
                // done with embedded parser lines, tell main loop to skip these
                skipTo = j - 1; 
            } else {
                // walk part of DOM and apply doubleclick function to every node with a tagname
                if (marks[i+1] && marks[i+1].id) {
                    walkDom (mark, line, isPreview, marks[i+1].id, top.id);
                } else {
                    if (autoScrollDebugOn) {
                        alert('auto scroll debug 3: skipping walkDom, i=' + i + ' marks[i].id=' + marks[i].id);
                    }
                }
            }
        }
    }
    if (autoScrollDebugOn && document.getElementById('content'))  {
        for (i = 0; i < marks.length-1; ++i) {
            marks[i].innerHTML = ' ' + marks[i].id + ' ';
            marks[i].style. color = "red";
        }
        showStartStopTimes(startTime);
    }
}

// test to see if this user has selected or defaulted to edit_on_doubleclick AND
// whether we are viewing a page, editing a page, or previewing an edit draft 
function scrollTextareaInit() {
    // look for meta tag -- is edit_on_doubleclick present?
    if (!document.getElementsByName('edit_on_doubleclick').length) {
        return;
    }
    turnDebugOnOrOff ();
    // are we viewing a page - both gui and text editors will have button named button_save
    if (!document.getElementsByName('button_save').length) {
        setSpanTags(0);
        return;
    }
    // we are in editor -- is there a line number specified in URL?
    var lineMatch = document.location.search.match(/line=(\d*)/);
    if (lineMatch) {
        scrollTextarea(lineMatch[1]);
        return;
    } 
    if (document.getElementById('preview')) {
        // is an editor preview
        setSpanTags(1);
    }
}

// The DOM ready check for Internet Explorer
function ieScrollCheck() {
	try {
		// If IE is used, use the trick by Diego Perini
		document.documentElement.doScroll("left");
	} catch( error ) {
		setTimeout( ieScrollCheck, 1 );
		return;
	}
    scrollTextareaInit();
}

// run auto scroll init As Soon As Possible -- prior to onload for modern browsers
function runASAP() {
    if (document.addEventListener) { 
        // Firefox 3.6, Chrome 4.0.249.89, Safari for Windows 4.04, Opera 10.5beta, and maybe older versions
        // schedule func to be run when DOM complete, usually before last image loaded
        document.addEventListener("DOMContentLoaded", scrollTextareaInit, false);
    } else {
        if (document.documentElement.doScroll && window == window.top) {
            // IE 5-8 and not using frames
            ieScrollCheck();
        } else {
            addLoadEvent(scrollTextareaInit);
        }
    }
}
// auto scroll initialization starts here
runASAP();

_application/x-javascriptObplist00‘bcX$versionX$objectsY$archiverT$top Ü†Ø"()012HIJKLMNOPQRSTUVWX\]U$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _8http://wiki.udacity.com/moin_static1/common/js/common.js“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^Gˆ≥´»”3456?WNS.keysZNS.objectsÄ®789:;<=>Ä	Ä
ÄÄÄÄÄÄ®@ABCDEFGÄÄÄÄÄÄÄÄVServer_Transfer-EncodingZConnection\Content-TypeTDate]Last-Modified_Content-EncodingTVaryUnginxXIdentityUclose_application/x-javascript_Tue, 29 May 2012 19:43:03 GMT_Tue, 17 Apr 2012 17:34:23 GMTTgzip_Accept-Encoding“*+YZ_NSMutableDictionary£Y[/\NSDictionarym;“*+^__NSHTTPURLResponse£`a/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—de_WebResourceResponseÄ    # - 2 7 V \ w z ~ Å Ñ á ã é ï ò õ û ° § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º √ œ ◊ Ÿ € ›(17:@IRT[cnpy{}ÅÉÖáâíîñòöúû†¢©Ω»’⁄Ë˚ 0Ppuáå¢¶≥∂ªœ”Áı
              f              "_8http://wiki.udacity.com/moin_static1/common/js/common.js‘O-Ñ/* @import url(strawberry.css); */
/* @import url(chocolate.css); */
/* @import url(plum.css); */

html { 
    padding: 0;
    margin: 0;
    font-size: 90%;
    font-family: Arial;
    font-style: normal;
    height: 100%;
    background: #fff;
    color: #000;
}
body {
    padding: 0;
    margin: 0;
    min-height: 100%;
    position: relative;
}
* html body { height: 100%; }



a img { border: none }
a { color: #176e9b; text-decoration: none }
a:visited { color: #176e9b; }

a.interwiki, a.http, a.www,a.file, a.mailto, a.https,  a.external { color: #48f }
a.interwiki:visited, a.http:visited, a.https:visited, a.file:visited, a.mailto:visited, a.www:visited, a.external:visited { color: #65f }
a.nonexistent { 
    color: #f02;
    font-weight: normal;
}
a.nonexistent:hover {
    color: #f02;
    text-decoration: underline;
}
a:hover { color: #176e9b; text-decoration: underline }


a.mailto:before {
    content: url(img/moin-email.png); 
    margin: 0 0.2em;
    vertical-align: middle;
    white-space: nowrap;
}


li p { margin: 0 }

textarea, select, input {
    border: 1px solid #999;
    vertical-align: middle;
    line-height: 1.2;
    font-size: 100%;
}
textarea {
    display: block;
    width: 99%;
}

form.search {
    float: right;
    margin: 0.5em;
    color: #666;
}
form.search p {
    margin: 0;
    font-size: 8pt;
}
form.search p input#titlesearch {
    color: white;
    background: #2494CD;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2494CD', endColorstr='#1A72A1'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#2494CD), to(#1A72A1)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #2494CD,  #1A72A1); /* for firefox 3.6+ */ 
    border: 1px solid #176e9b;
}
form.search p input#titlesearch:hover {
    background: #1A72A1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1A72A1', endColorstr='#2494CD'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#1A72A1), to(#2494CD)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #1A72A1,  #2494CD); /* for firefox 3.6+ */ 
}
form.search p input#fullsearch {
    color: white;
    background: #2494CD;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2494CD', endColorstr='#1A72A1'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#2494CD), to(#1A72A1)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #2494CD,  #1A72A1); /* for firefox 3.6+ */ 
    border: 1px solid #176e9b;
}
form.search p input#fullsearch:hover {
    background: #1A72A1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1A72A1', endColorstr='#2494CD'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#1A72A1), to(#2494CD)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #1A72A1,  #2494CD); /* for firefox 3.6+ */ 
}
div.gotobar p {
    margin: 0;
    padding: 0.5em;
}


div.editbar {
    float: right;
    margin: 1em 0.25em
    color: #999;
}
div.editbar a {
    font-size: 10pt;
    color: #176e9b;
    margin: 0 0.25em;
}
div.editbar a.edit:before {
    content: url(img/edit.png);
    color: #176e9b;
    vertical-align: middle;
    margin: 0 0.15em 0 0.5em;
}
div.editbar a:hover {
    color: #176e9b;
    text-decoration: underline;
}

a.logo {
    display: block;
    margin: 0.25em;
    float: left;
    clear: none;
    font-size: 200%;
    text-decoration: none;
    color: #444;
    line-height: 1.2;
    font-family: Impact, Haettenschweiler, fantasy;
    letter-spacing: 0.025em;
}
a.logo img {
    vertical-align: middle;
    margin: 0 0.25em 0 0;
}


ul#username {
    display: block;
    float: right;
    clear: right;
    list-style: none;
    margin: 0 0.5em;
}
ul#username li {
    list-style: none;
    display: inline;
    margin: 0 0 0 1em;
    font-size: 90%;
}
ul#username li a#login {
    color:#176e9b;
}

ul.gotobar {
    margin: 0;
    padding: 0 0.5em;
    display: block;
    border-top: 1px solid #e7e7e7;
    border-bottom: 1px solid #e7e7e7;
    color: #e7e7e7;
    background: #e7e7e7;
    clear: both;
    overflow: hidden;
}
ul.gotobar li {
    display: block;
    float: left;
    margin: 0.25em 0.25em;
    border: 1px solid #176e9b;
    overflow: hidden;
}
ul.gotobar li a {
    letter-spacing: 0.05em;
    display: block;
    text-decoration: none;
    font-size: 8pt;
    padding: 0.25em 0.75em;
    background: #2494CD;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2494CD', endColorstr='#1A72A1'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#2494CD), to(#1A72A1)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #2494CD,  #1A72A1); /* for firefox 3.6+ */ 
    color: white;
}
ul.gotobar li.current a {
    color: #000;
}
ul.gotobar li.current {
    border: 1px solid #176E9B;
}
ul.gotobar li a:hover {
    color: white;
    background: #1A72A1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1A72A1', endColorstr='#2494CD'); /* for IE */
    background: -webkit-gradient(linear, left top, left bottom, from(#1A72A1), to(#2494CD)); /* for webkit browsers */
    background: -moz-linear-gradient(top,  #1A72A1,  #2494CD); /* for firefox 3.6+ */ 
}
body ul.gotobar li.clear {
    display: block;
    list-style: none;
    clear: both;
    float: none;
    margin: 0;
    padding: 0;
    height: 0;
    overflow: hidden;
    border: none;
    line-height: 1px;
}

div.header h1 {
    color: #176e9b;
    margin: 0;
    padding: 0.5em;
    font-weight: normal;
    font-size: 125%;
    letter-spacing: 0.025em;
}
div.header h1 a.backlink {
    display: none;
    color: white;
}
div.header h1 a.backlink:hover {
    display: none;
    color: white;
    text-decoration: underline;
}

span.pagepath { 
    font-size: 80%; color: #666; 
    font-weight: bold;
}
span.pagepath a { 
    font-weight: normal;
    color: #999;
}

div.wrapper {
    padding: 0.5em;
    margin: 0 0.5em 1.5em 1.5em;
    color: #444;
    position: relative;
    width: 960px;
}

div.content {
    line-height: 1.35;
    position: relative;
}

div.sidebar {
    width: 11.5em;
    position: absolute;
    left: -12.25em;
    top: 0.75em;
    font-size: 90%;
    line-height: 1.3;
    background: #feb;
    border: 1px solid #ea7;
    border-bottom: 1px solid #e83;
    padding: 1px;
    margin: 0;
}
div.sidebar p {
    margin: 0;
}
div.wrapper div.sidebar h1, 
div.wrapper div.sidebar h2, 
div.wrapper div.sidebar h3 { 
    font-size: 100%; 
    margin: 0 0 0.25em 0;
    letter-spacing: 0.05em;
    font-weight: normal;
    color: #852;
    border: 1px solid #ea6;
    background: #fc7;
    padding: 0.25em 0.5em;
    line-height: 1.1;
    font-family: DejaVu Sans, Droid Sans, Verdana, sans-serif;
}
div.sidebar ul { 
    margin: 0;
    list-style: none;
    padding: 0 0 0.25em 0;
}
div.sidebar li {
    list-style: none;
    background: url(img/bullet.png) no-repeat 3px 3px;
    padding: 0 0 0 15px;
}
div.sidebar a { color: #000; }
div.sidebar a:hover { text-decoration: underline }


div.wrapper h1, h2, h3, h4, h5 {
    color: black;
    font-family: Arial;
    font-weight: normal;
    line-height: 1.2;
}
div.wrapper h1 { font-size: 200%; margin: 1em 0 0.5em 0; }
div.wrapper h2 { font-size: 150%; margin: 1em 0 0.5em 0; }
div.wrapper h3 { font-size: 125%; letter-spacing: 0.025em; margin: 1.25em 0 0.75em 0; }
div.wrapper h4 { font-size: 100%; letter-spacing: 0.05em; margin: 1.5em 0 1em 0; }


ul#pagetrail {
    display: block;
    background: #eee;
    border-bottom: 1px solid #fff;
    border-top: 3px solid #bbb;
    margin: 0;
    padding: 0;
}
ul#pagetrail li {
    display: inline;
    list-style: none;
    margin-left: 0.75em;
}
ul#pagetrail li a {
    font-size: 80%;
    color: #666;
}


div.footer {
    position: absolute;
    width: 100%;
    bottom: 0;
    left: 0;
    right: 0;
    color: #ddd;
    text-align: right;
    border-top: 1px solid #ccc;
    padding: 0;
    margin: 0;
}
div.footer span.time {
    display: block;
    text-align: right;
    color: #666;
    font-size: 80%;
    padding: 0.25em 0.5em;
    font-style: italic;
}

div#message, p.status {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    background: #ffa;
    border-bottom: 1px solid #888;
    padding: 0.125em 0.5em;
    margin: 0;
    font-size: 90%;
    color: #000;
    opacity: 0.90;
    z-index: 1000;
}

div.message p { margin: 0 }

#content table { 
    border-collapse: collapse; 
    font-size: 80%; 
    margin: 0.5em auto;
/*  margin: 0.5em;      if you don't like centered tables */
}
#content th, #content td { border: 1px solid #999; padding: 0.25em;  }
#content th { background: #f6f6f6;  }

tt { font-size: 90%; color: #333;
    font-family: "DejaVu Sans Mono", "Lucida Console", monospace; }
div.codearea, pre { 
    border: 1px solid #ddd; 
    background: #f6f6f6; 
    color: #666;
}
div.codearea a.codenumbers { font-size: 70%; float: right; display: block; padding: 0.25em }
div.codearea span.LineNumber { background: #fff; color: #888; border-right: 1px solid #ddd; margin-right: 0.25em; font-weight: bold; 
}
div.codearea pre { padding: 0; border: none; margin: 0; color: #222 }
div.codearea span.ResWord { font-weight: bold }
div.codearea span.ResWord2 { font-weight: bold; color: #f60 }
div.codearea span.ID { font-style: italic }
div.codearea span.Comment { color: #999; font-style: italic }
div.codearea span.Preprc { color: #999; font-weight: bold;  }
div.codearea span.String { color: #f60; font-style: italic }
div.codearea span.Char { color: #f60; font-style: italic; font-weight: bold }
div.codearea span.Number { color: #f60 }
div.codearea span.ConsWord { color: #f60; font-weight: bold }
div.codearea span.Operator { }
div.codearea span.SPChar { font-weight: bold; }
div.codearea span.Special { }
div.codearea span.Error { color: #f60; font-weight: bold; background: #ddd }

pre {
    padding: 0.25em; 
    font-family: "DejaVu Sans Mono", "Lucida Console", monospace;
    font-size: 90%;
    line-height: 1.25;
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
    white-space: -moz-pre-wrap;
    white-space: -pre-wrap;
    white-space: -o-pre-wrap;
    /* end css 3 or browser specific rules */
}

li p, td p, dd p, dt p { margin: 0 }

hr {
	background: transparent;
	color: #fff;
	border: none;
	border-top: 1px solid #ccc;
}

div#preview {

    background: #ffa;
    border: 1px solid #888;
    padding: 0.125em 0.5em;
}

div.warn ul, div.tip ul, div.hint ul, div.info ul, div.err ul,
div.warn p, div.tip p, div.hint p, div.info p, div.err p {
	margin: 0;
}

.diff-added span {
	background: #eee;
	color: #000;
}

.diff-removed span {
	background: #feb;
	color: #000;
}	


strong.highlight {
	background: #feb;
	color: #000;
	font-weight: normal;
}

span.strike {
      text-decoration: line-through;
}
span.u {
      text-decoration: underline;
}


@media print {
    div.sidebar, div.header { display: none }
    div.footer { position: static }
    div.wrapper { padding: 0; border: none }
}

/* from the HelpOnMoinWikiSyntax */
div.comment { 
    color: #444; 
    background: #ddf;
}

div.red { background: #fcc; }
div.green { background: #cfc; }
div.blue { background: #ccf; }

div.solid, div.dashed, div.dotted {
    border: 2px solid #000;
    padding: 0.5em;
}
div.solid { border-style: solid }
div.dashed { border-style: dashed }
div.dotted { border-style: dotted }

div.blink { text-decoration: blink }

table.addcommentform textarea { width: 50em; }
Xtext/cssO˚bplist00‘bcX$versionX$objectsY$archiverT$top Ü†Ø"()012HIJKLMNOPQRSTUVWX\]U$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _7http://wiki.udacity.com/moin_static1/mandarin/style.css“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^G˙ü»”3456?WNS.keysZNS.objectsÄ®789:;<=>Ä	Ä
ÄÄÄÄÄÄ®@ABCDEFGÄÄÄÄÄÄÄÄVServer_Transfer-EncodingZConnection\Content-TypeTDate]Last-Modified_Content-EncodingTVaryUnginxXIdentityUcloseXtext/css_Tue, 29 May 2012 19:43:03 GMT_Tue, 17 Apr 2012 17:34:23 GMTTgzip_Accept-Encoding“*+YZ_NSMutableDictionary£Y[/\NSDictionary-Ñ“*+^__NSHTTPURLResponse£`a/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—de_WebResourceResponseÄ    # - 2 7 V \ w z ~ Å Ñ á ã é ï ò õ û ° § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ º √ œ ◊ Ÿ € ›'069?HQSZbmoxz|~ÄÇÑÜàëìïóôõùü°®º«‘ŸÁ˙ˇ=]btyèì†£®º¿‘‚Ù˜             f              _7http://wiki.udacity.com/moin_static1/mandarin/style.css‘ O¥âPNG

   IHDR  P      
∂≤   sBIT|dà   	pHYs    “›~¸   tEXtSoftware Adobe Fireworks CS5.1´HÎ   tEXtCreation Time 4/15/12ãè∂  IDATxúÌ\Mr£8˛:ì}<'s‚)`rªO˜íU“PµS:@{V,Éo‡ú`HˆTππ@ì∏w≥õYË…ñeÉ¡S|U.,Òê ûﬁüÙ0‡Ç¿Ωøøˇ”`{˛d2˘9ôL>Ωøø«UÆΩnäâ®∆ÿ¿@∆9œ,.Y x≤h◊‡ ÿrŒ7ı9Ã«uxÄ[*∏a‚¥—ë“¿ã <PÒÄ±&ôÅn`ﬁ2; €ú∫≠&çøê4‰@rËW@lAó…üÈyû
ÖÔÄ±v⁄T◊4ñnò¨ã¥±TÎi‡9ÔCøó6ÓMw≤lıÓË€x°‚/ ~c’i‡ç ∆›U=ªa≤0ê˙ æX°‰ª&°¯»[Z€ƒ;ˇ
ÒÂı∞‘E<Äsû]c/<°˝ÔéÚˇÜ Y›§e^
€O > ^L`]U8— õòïıWÄJ◊ﬂØ¸FU;#a2ÉÙct?f z˛%4éV.‰õ—¢åÆ‰æOeÃ-
ﬁù£¸øÅÚ]aåΩ,¬BÄŒ,hüîcô*€[;¡'È∏é’€∏™⁄¿Ä‹òBº¸üi‡E$Këû19|G˚ìÅé)Äó42“Këﬁà¥∏ü<O—·Ÿ&˙xe<È⁄f€⁄ˇ… Aˆ‡Ü1V&DÁ⁄—jÁ¿€)⁄f.’ö¡ŒtµAìfÿÄqxæ&∫˘ø	≠øÍÛ‹àâﬂ\3œ`ä5ìã‰î∂ö∆{S8q…9ü~z}l®WQtÆ¨_˝ôv≠Å™»
h#EbÜkÇ16«~ﬁ0∆ÊúÛ(ß=)àwÁ9Á˘[kõz)@…|âŒ—	è;*:ÙCr”‡ºCπìª»‹Ã`û Ùr|CŸÅŸØz`i∏F≈˘¬s¡€{ﬁ‡G—$“w∏a≤%ç˜¥Å}øŸ∂ëﬁ'?◊77Lû<[∂1¡~íwà∑Ãñt´ÅÍﬂGV@+'¨∆ÿÁ‹4vÊt\A(+s‰ clÑΩø˚‡[kBU€∏HzNêêÕ¡«ìﬁÑp— 9îLwìA8Ÿ≥˙‹Ó†‰œ‘˜¿7˚ö&i‡9}õÃ™-Ä'7LVß0⁄g∏aÚ•<»w˘jIìØT¢KÍkÂ,èêsæeåI¡8É&…˜8¡9ü3∆| ∆òcärºÆrqcËõ‘— Y<XÉÑ«g√©"?ïo®˚‚Ü…ó6"‰*‹0Ÿ∏aÚfÌ›Ë{"‹§}~˛?œG¶¸ø•¿ﬂYA„Ê¿∑o1æ•∂hã:F⁄qÅcèT0∆ñå±∏Ñ0∆Få±5c,få=iÁvm	P€ HK8<mî&‡ÜIl™/Œ¯Z9Æ?§YeZµìCnºèº˚–ËHiŒd–˚,u}pŒ◊©WS2√ÏLr›ß)è3Ì¿/jO«%A[j#¶v2Œ˘2Øç+HΩè⁄]Ú&"G+[ôf-@Ô∑ {∑ˆË±V~§¥¨≥Ä‹Tﬂ¥Í≤43âàé™*#ÍØ“\ß„+’Î¥j;ï†œ;¿ºà˛
"ØLE'®m:MOQE†ËÊ}'IŒh.ãa@ˇ∞∆q4˛%º8ºY[V&µ·8√d{Å&ÈTˆI;Wá÷ïÑ'`"˘∞ü-öÑ.@/)Ç[;è≥CSXæÁŒE–(É‡+é”∞&ÙCx8¥>3ÿ«ZRä˝˛ŸfdpŒ7å± w8íY0∫IŒ9_+¥cà1-iÎ(&èt¥ûÄ†~<≥4§†ÃµÚè3˜ﬂ4z=¢µU0€û√ì(º[òÉ,Äx™–kÎùF9À7ã∞ƒ~eíT¨¢ºˆ!‹Oÿ[s∫œ≤*∆å±ëMˇ
«&‰mT˘gÙÿïi[	i‡Ù]≠?n∆˚»ªÔ˝Âõﬁ£wMë©Q'Ljösî˚4e˝{%¨Æ˝
ëczg€∆Ã˜!ºu€~…4ÚôòV|ò¯Íà˜ƒL©#ÀªF´Í}0Ü,ëÃpÍ{xã.Rdÿ√ìÿì{ øCôÑ–âï_]®m¨©ÌÄ?‹0π/€‡% “Œ;h¡£ZL∫+¢µ¿ÜL˜9¶QŸ◊nòdi‡…VS S≈WÎù¡ﬁLıe˘~ì¨Ó√? ŒB*‰J–qåbüO^~§ss›aÖ„®*®Óçëˆ⁄jl†me'®v†âY§ËÔ;o'•∂aoïF¥S˙ﬂÑ‹!∆clÀ9œµ∂diAò¢s“WrNøW°⁄OÊ£IÛÎ6ghÁ¿b|‰Y$rå»Al∂8¡ÁZÜØnòú’Ì4†u»•ùG¡#J0iÑ(≠äÚ!«G∆ÿ&oÕ˝∞KXøG˜+∂~ì∏ÑÆÀdˇ<l!∂˚≥kFöÜ&[∫Ø˙Î„xp(Ä≥BµÙßuSK7©"±ˇÖ629¬.çâÇ–˙ÓÚ7Àh1ƒÃ±∫†(2Ï]qïM&.r⁄‡¬GÒ&%úä5ÏÉ…,ÉpŒ}C]‡ì°~ÉT€8 •ıÕ+`Ù∏Ö˝ñocÿ›pFø_5£’‘w~ÀæÎ“ü≤ÀPÜCæªN’Z£∆$Iì≈îÖ¥]´ÄÍÇµ*ΩäÿíÊ_•|éâ:∆efóƒ8Ê;>7e¶ªFõ°˙?«Á#smõX    IENDÆB`ÇYimage/pngO“bplist00‘^_X$versionX$objectsY$archiverT$top Ü†Ø"()012FGHIJKLMNOPQRSTXYU$null›	
 !R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1ÄÄÄ ÄÄÄÄ Ä”#$%&[NS.relativeWNS.baseÄÄÄ _Ahttp://wiki.udacity.com/moin_static1/common/udacity-wiki-logo.png“*+,-Z$classnameX$classesUNSURL¢./UNSURLXNSObject#Aµu^HjmH»”3456>WNS.keysZNS.objectsÄß789:;<=Ä	Ä
ÄÄÄÄÄß?@ABCDEÄÄÄÄÄÄÄVServer]Accept-RangesZConnection\Content-TypeTDate]Last-Modified^Content-LengthUnginxUbytesUcloseYimage/png_Tue, 29 May 2012 19:43:04 GMT_Tue, 17 Apr 2012 17:34:23 GMTT2228“*+UV_NSMutableDictionary£UW/\NSDictionary¥“*+Z[_NSHTTPURLResponse£\]/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—`a_WebResourceResponseÄ    # - 2 7 T Z u x |  Ç Ö â å ì ñ ô ú ü ¢ § ¶ ® ™ ¨ Æ ∞ ≤ ¥ ∂ ∏ ∫ ¡ Õ ’ ◊ Ÿ €$/8>AGPY[bjuwÅÉÖáâãçïóôõùü°£™∏√–’„Ú¯˛.NSXnrÇáõü≥¡”÷Ï             b              Ó_Ahttp://wiki.udacity.com/moin_static1/common/udacity-wiki-logo.png’"#$%&'(_WebResourceFrameName_WebResourceTextEncodingNamePUUTF-8O é‚<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head>

<script type="text/javascript" async="" src="http://www.google-analytics.com/ga.js"></script><script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
 "HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"] },
 tex2jax: { inlineMath: [ ["$%","$%"] ],
            displayMath: [ ["$$","$$"] ],
            processEscapes: true,
            ignoreClass: "tex2jax_ignore|dno"
 },
 TeX: { noUndefined: { attributes: { mathcolor: "red", mathbackground: "#FFEEEE", mathsize: "90%" } } },
 messageStyle: "none"
});
</script>
<script type="text/javascript" src="/moin_static1/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>


<script type="text/javascript">
<!-- //

// Version 1.9 stripped by Creativyst SS & JavaScript Compressor v2.2c (http://www.creativyst.com/Prod/3/)
function tabberObj(argsObj)
{ var arg; this.div = null; this.classMain = "tabber"; this.classMainLive = "tabberlive"; this.classTab = "tabbertab"; this.classTabDefault = "tabbertabdefault"; this.classNav = "tabbernav"; this.classTabHide = "tabbertabhide"; this.classNavActive = "tabberactive"; this.titleElements = ['h2','h3','h4','h5','h6']; this.titleElementsStripHTML = true; this.removeTitle = true; this.addLinkId = false; this.linkIdFormat = '<tabberid>nav<tabnumberone>'; for (arg in argsObj) { this[arg] = argsObj[arg];}
this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi'); this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi'); this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi'); this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi'); this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi'); this.tabs = new Array(); if (this.div) { this.init(this.div); this.div = null;}
}
tabberObj.prototype.init = function(e)
{ var
childNodes, i, i2, t, defaultTab=0, DOM_ul, DOM_li, DOM_a, aId, headingElement; if (!document.getElementsByTagName) { return false;}
if (e.id) { this.id = e.id;}
this.tabs.length = 0; childNodes = e.childNodes; for(i=0; i < childNodes.length; i++) { if(childNodes[i].className &&
childNodes[i].className.match(this.REclassTab)) { t = new Object(); t.div = childNodes[i]; this.tabs[this.tabs.length] = t; if (childNodes[i].className.match(this.REclassTabDefault)) { defaultTab = this.tabs.length-1;}
}
}
DOM_ul = document.createElement("ul"); DOM_ul.className = this.classNav; for (i=0; i < this.tabs.length; i++) { t = this.tabs[i]; t.headingText = t.div.title; if (this.removeTitle) { t.div.title = '';}
if (!t.headingText) { for (i2=0; i2<this.titleElements.length; i2++) { headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0]; if (headingElement) { t.headingText = headingElement.innerHTML; if (this.titleElementsStripHTML) { t.headingText.replace(/<br>/gi," "); t.headingText = t.headingText.replace(/<[^>]+>/g,"");}
break;}
}
}
if (!t.headingText) { t.headingText = i + 1;}
DOM_li = document.createElement("li"); t.li = DOM_li; DOM_a = document.createElement("a"); DOM_a.appendChild(document.createTextNode(t.headingText)); DOM_a.href = "javascript:void(null);"; DOM_a.title = t.headingText; DOM_a.onclick = this.navClick; DOM_a.tabber = this; DOM_a.tabberIndex = i; if (this.addLinkId && this.linkIdFormat) { aId = this.linkIdFormat; aId = aId.replace(/<tabberid>/gi, this.id); aId = aId.replace(/<tabnumberzero>/gi, i); aId = aId.replace(/<tabnumberone>/gi, i+1); aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, '')); DOM_a.id = aId;}
DOM_li.appendChild(DOM_a); DOM_ul.appendChild(DOM_li);}
e.insertBefore(DOM_ul, e.firstChild); e.className = e.className.replace(this.REclassMain, this.classMainLive); this.tabShow(defaultTab); if (typeof this.onLoad == 'function') { this.onLoad({tabber:this});}
return this;}; tabberObj.prototype.navClick = function(event)
{ var
rVal, a, self, tabberIndex, onClickArgs; a = this; if (!a.tabber) { return false;}
self = a.tabber; tabberIndex = a.tabberIndex; a.blur(); if (typeof self.onClick == 'function') { onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event}; if (!event) { onClickArgs.event = window.event;}
rVal = self.onClick(onClickArgs); if (rVal === false) { return false;}
}
self.tabShow(tabberIndex); return false;}; tabberObj.prototype.tabHideAll = function()
{ var i; for (i = 0; i < this.tabs.length; i++) { this.tabHide(i);}
}; tabberObj.prototype.tabHide = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
div = this.tabs[tabberIndex].div; if (!div.className.match(this.REclassTabHide)) { div.className += ' ' + this.classTabHide;}
this.navClearActive(tabberIndex); return this;}; tabberObj.prototype.tabShow = function(tabberIndex)
{ var div; if (!this.tabs[tabberIndex]) { return false;}
this.tabHideAll(); div = this.tabs[tabberIndex].div; div.className = div.className.replace(this.REclassTabHide, ''); this.navSetActive(tabberIndex); if (typeof this.onTabDisplay == 'function') { this.onTabDisplay({'tabber':this, 'index':tabberIndex});}
return this;}; tabberObj.prototype.navSetActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = this.classNavActive; return this;}; tabberObj.prototype.navClearActive = function(tabberIndex)
{ this.tabs[tabberIndex].li.className = ''; return this;}; function tabberAutomatic(tabberArgs)
{ var
tempObj, divs, i; if (!tabberArgs) { tabberArgs = {};}
tempObj = new tabberObj(tabberArgs); divs = document.getElementsByTagName("div"); for (i=0; i < divs.length; i++) { if (divs[i].className &&
divs[i].className.match(tempObj.REclassMain)) { tabberArgs.div = divs[i]; divs[i].tabber = new tabberObj(tabberArgs);}
}
return this;}
function tabberAutomaticOnLoad(tabberArgs)
{ var oldOnLoad; if (!tabberArgs) { tabberArgs = {};}
oldOnLoad = window.onload; if (typeof window.onload != 'function') { window.onload = function() { tabberAutomatic(tabberArgs);};} else { window.onload = function() { oldOnLoad(); tabberAutomatic(tabberArgs);};}
}
if (typeof tabberOptions == 'undefined') { tabberAutomaticOnLoad();} else { if (!tabberOptions['manualStartup']) { tabberAutomaticOnLoad(tabberOptions);}
}

//-->
</script>


<style type="text/css">
/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 12px Verdana, sans-serif;
}

ul.tabbernav li
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #DDE;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #448; }
ul.tabbernav li a:visited { color: #667; }

ul.tabbernav li a:hover
{
 color: #000;
 background: #AAE;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 color: #000;
 background: white;
 border-bottom: 1px solid white;
}

/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}
</style>

<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="robots" content="index,nofollow">

<title>CS253 Unit 5alt - Udacity Wiki</title>
<script type="text/javascript" src="/moin_static1/common/js/common.js"></script>
<script type="text/javascript"><!--
function add_gui_editor_links() {
    // Add gui editor link after the text editor link

    // If the variable is not set or browser is not compatible, exit
    try {gui_editor_link_href}
    catch (e) {
        //alert("add_gui_editor_links: gui_editor_link_href not here");
        return
    }
    if (can_use_gui_editor() == false){
        //alert("add_gui_editor_links: can't use gui_editor");
        return;
    }
    var all = document.getElementsByName('texteditlink');
    for (i = 0; i < all.length; i++) {
        var textEditorLink = all[i];
        // Create a a link
        var guiEditorLink = document.createElement('a');
        guiEditorLink.href = gui_editor_link_href;
        guiEditorLink.className = "edit";
        var text = document.createTextNode(gui_editor_link_text);
        guiEditorLink.appendChild(text);
        // Insert in the editbar
        var editbar = textEditorLink.parentNode
        editbar.insertBefore(guiEditorLink, textEditorLink);
    }
}
--></script>


<link rel="stylesheet" type="text/css" href="/moin_static1/mandarin/style.css">



<link rel="Start" href="/FrontPage">
<link rel="Alternate" title="–í–∏–∫–∏-—Ä–∞–∑–º–µ—Ç–∫–∞" href="/CS253%20Unit%205alt?action=raw">
<link rel="Alternate" media="print" title="–í–∏–¥ –¥–ª—è –ø–µ—á–∞—Ç–∏" href="/CS253%20Unit%205alt?action=print">
<link rel="Search" href="/FindPage">
<link rel="Index" href="/TitleIndex">
<link rel="Glossary" href="/WordIndex">
<link rel="Help" href="/HelpOnFormatting">
<style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -5px 0 0 0; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style></head>

<body lang="ru" dir="ltr"><div id="MathJax_Message" style="display: none; "></div>
<div class="header"><a class="logo" href="/FrontPage"><img src="/moin_static1/common/udacity-wiki-logo.png" alt="Udacity Wiki Logo"></a>
<form class="search" method="get" action="">
<p>
<input type="hidden" name="action" value="fullsearch">
<input type="hidden" name="context" value="180">
<label for="search">–ò—Å–∫–∞—Ç—å:</label>
<input id="search" type="text" name="value" value="">
<input id="titlesearch" name="titlesearch" type="submit" value="–ü–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º">
<input id="fullsearch" name="fullsearch" type="submit" value="–ü–æ —Ç–µ–∫—Å—Ç—É">
</p>
</form><ul id="username"><li><a href="/CS253%20Unit%205alt?action=login&amp;login=1" id="login" rel="nofollow">–í–æ–π—Ç–∏</a></li></ul><ul class="gotobar"><li class="wikilink"><a href="/RecentChanges">RecentChanges</a></li> <li class="wikilink"><a href="/FindPage">FindPage</a></li> <li class="wikilink"><a href="/HelpContents">HelpContents</a></li><li class="clear"></li></ul><div class="editbar"> <a class="password" href="/CS253%20Unit%205alt?action=login">Locked</a>  <a class="history" href="/CS253%20Unit%205alt?action=info">History</a> <a class="admin" href="/CS253%20Unit%205alt?action=PageActions">Actions</a> </div><h1><span id="pagelocation"><a class="backlink" href="/CS253%20Unit%205alt?action=fullsearch&amp;value=linkto%3A%22CS253+Unit+5alt%22&amp;context=180" rel="nofollow" title="–ù–∞–∂–º–∏—Ç–µ —Å—é–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ —ç—Ç–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è">CS253 Unit 5alt</a></span></h1></div><div class="wrapper"><div class="content" lang="en" dir="ltr">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><p class="line867">
</p><h1 id="CS253_Unit_5">CS253 Unit 5</h1>
<span class="anchor" id="line-2"></span><p class="line867">
</p><h1 id="Web_applications_as_services.2C_using_APIs">Web applications as services, using APIs</h1>
<span class="anchor" id="line-3"></span><p class="line874">Contents <span class="anchor" id="line-4"></span><span class="anchor" id="line-5"></span></p><ul><li style="list-style-type:none">Introduction HTTP Clients urllib Quiz: Using urllib Redirection XML Quiz: XML and HTML Parsing XML RSS Quiz: Parsing RSS JSON Quiz: Parsing JSON APIs JSON Escaping Quiz: Escaping JSON in Python Being a Good Citizen SOAP Quiz: Good Habits ASCII Chan 2 Geolocation Quiz: Geolocation Debugging Updating the Database Querying Coordinate Information Quiz: Creating the Image URL Putting It All Together Answers <span class="anchor" id="line-6"></span><span class="anchor" id="line-7"></span></li></ul><p class="line867"><strong><br>
 </strong> <span class="anchor" id="line-8"></span><span class="anchor" id="line-9"></span></p><p class="line867">
</p><h2 id="Introduction">Introduction</h2>
<span class="anchor" id="line-10"></span><p class="line874">Welcome to Unit 5. This unit will talk about how to make your  web application talk to other computers. <span class="anchor" id="line-11"></span><span class="anchor" id="line-12"></span></p><ul><li style="list-style-type:none"><p class="line862">Up until now, your programs have basically generated HTML that  a browser will use to render a web page for the user. But your web application  can also generate things like <a class="http" href="http://en.wikipedia.org/wiki/XML">XML</a> and <a class="http" href="http://en.wikipedia.org/wiki/Json">JSON</a> that other computers  can interpret so that they, in turn, can build websites or services that  interact with your data. We will look at both XML and JSON and we‚Äôll see how to read  them, how to interpret them and how to manipulate them. Then we will add a new feature  to our ASCII Chan applications, that is built on Google Maps, which lets us see  where our users are posting from. Finally, your homework for this unit will be to make your blog  output itself in JSON. <span class="anchor" id="line-13"></span><span class="anchor" id="line-14"></span></p></li></ul><p class="line867">
</p><h3 id="HTTP_Clients">HTTP Clients</h3>
<span class="anchor" id="line-15"></span><p class="line874">Until now, we've been working with this kind of standard  picture of this little guy and his browser. Now, this used to be you, but now  this is the user. You have upgraded to the other side of the picture where the  servers are. So let's get these boxes. We've seen these 100 times. Okay, and  let's add you over here. You are now the programmer. Congratulations, you are a  web developer. We can talk about users and how much trouble they cause us. <span class="anchor" id="line-16"></span><span class="anchor" id="line-17"></span></p><ul><li style="list-style-type:none">In the ‚Äònormal‚Äô web requests we have seen up until now, the  user makes a request to the servers, and the server responds with the response.  So far so good. What we are going to talk about today is when your servers  start making requests to other servers. Let‚Äôs say that we have created a web  application that does some data analysis on Twitter. Twitter has their own web  servers, so we can have a web page that actually makes requests to Twitter. Our  computers are now talking to their computers. This actually happens all the  time. They're still communicating over HTTP, and Twitter will still respond as  normal. So, the user might make a request to us. We might then make a  request to the Twitter servers, which respond with their normal response. Then  we manipulate that data and return it to the user. Hipmunk does a lot of this type of communication. Let‚Äôs take a  little look at how Hipmunk works. <span class="anchor" id="line-18"></span><span class="anchor" id="line-19"></span></li></ul><p class="line874">When a user does a flight search on Hipmunk, they send  requests to a bunch of data providers who have the actual flight data. Hipmunk  takes the user‚Äôs flight search and  sends  it to ITA, sends it to one or more airlines, and in some cases they'll even  send it to Amtrak, if that's appropriate. Each of these organisations are  companies who have their own services that Hipmunk works with. ITA will run the  flight search, and send the results back. The Airline will also run the flight  search on their own system and send their results back. Similarly, Amtrak does  its thing and send their data back to Hipmunk. So, now Hipmunk has all this  flight search data on their server. They then manipulate that data, collate it,  make you nice results, and then we'll send back their HTML response to the user  (or ‚Äòcustomer‚Äô in this case ‚Äì since they‚Äôre paying!). <span class="anchor" id="line-20"></span><span class="anchor" id="line-21"></span></p><ul><li style="list-style-type:none">So, this unit is about how to make our servers speak to other  servers when there's no browser involved. We‚Äôll still use HTTP, but we are now  communicating over other protocols. We saw some of this in Unit 1, but we'll be  doing a lot more in this lesson, because there's so much you can do when you  realize that you're not the only service on the internet. <span class="anchor" id="line-22"></span><span class="anchor" id="line-23"></span></li></ul><p class="line867">
</p><h2 id="urllib">urllib</h2>
<span class="anchor" id="line-24"></span><p class="line874">First, let‚Äôs introduce a Python library for actually making an  HTTP requests so we can see how that works <span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span></p><ul><li style="list-style-type:none"><p class="line862">Python has a library called <a class="http" href="http://docs.python.org/library/urllib2.html">urllib2</a>. There's also a  library called just <a class="http" href="http://docs.python.org/library/urllib.html">urllib</a> (referred to as ‚Äúurlib1‚Äù), which does have a few handy functions of its own.  However, we're going to use urllib2 for the most part. urllib2 includes a function called urlopen. Let‚Äôs say we want  to download Google‚Äôs homepage and store it in a variable p, for page. We can do  this by entering the following code into the Python interpreter: <span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span></p></li></ul><p class="line867"><span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span><span class="anchor" id="line-31"></span><span class="anchor" id="line-32"></span><span class="anchor" id="line-33"></span><span class="anchor" id="line-34"></span><span class="anchor" id="line-1-1"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
function isnumbered(obj) {
  return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
  var nlen = Math.max(0,chrs-(''+num).length), res = '';
  while (nlen>0) { res += ' '; nlen-- }
  return res+num+add;
}
function addnumber(did, nstart, nstep) {
  var c = document.getElementById(did), l = c.firstChild, n = 1;
  if (!isnumbered(c)) {
    if (typeof nstart == 'undefined') nstart = 1;
    if (typeof nstep  == 'undefined') nstep = 1;
    var n = nstart;
    while (l != null) {
      if (l.tagName == 'SPAN') {
        var s = document.createElement('SPAN');
        var a = document.createElement('A');
        s.className = 'LineNumber';
        a.appendChild(document.createTextNode(nformat(n,4,'')));
        a.href = '#' + did + '_' + n;
        s.appendChild(a);
        s.appendChild(document.createTextNode(' '));
        n += nstep;
        if (l.childNodes.length) {
          l.insertBefore(s, l.firstChild);
        }
        else {
          l.appendChild(s);
        }
      }
      l = l.nextSibling;
    }
  }
  return false;
}
function remnumber(did) {
  var c = document.getElementById(did), l = c.firstChild;
  if (isnumbered(c)) {
    while (l != null) {
      if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
      l = l.nextSibling;
    }
  }
  return false;
}
function togglenumber(did, nstart, nstep) {
  var c = document.getElementById(did);
  if (isnumbered(c)) {
    remnumber(did);
  } else {
    addnumber(did,nstart,nstep);
  }
  return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_1">   1</a> </span><span class="LineAnchor" id="CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_1"></span><span class="anchor" id="line-1-2"></span>&gt;&gt;&gt; <span class="ResWord">import</span> <span class="ID">urllib2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_2">   2</a> </span><span class="LineAnchor" id="CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_2"></span><span class="anchor" id="line-2-1"></span>&gt;&gt;&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_3">   3</a> </span><span class="LineAnchor" id="CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_3"></span><span class="anchor" id="line-3-1"></span>&gt;&gt;&gt; <span class="ID">p</span> = <span class="ID">urllib2</span>.<span class="ID">urlopen</span>(<span class="String">"</span><span class="String">http://www.google.com</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_4">   4</a> </span><span class="LineAnchor" id="CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_4"></span><span class="anchor" id="line-4-1"></span>&gt;&gt;&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_5">   5</a> </span><span class="LineAnchor" id="CA-1a7bf0b498689712c4a43aeb5239a90e2910f55e_5"></span><span class="anchor" id="line-5-1"></span>&gt;&gt;&gt; <span class="ID">c</span> = <span class="ID">p</span>.<span class="ID">read</span>()</span>
</pre></div></div><span class="anchor" id="line-35"></span><p class="line862">p is a <a class="http" href="http://docs.python.org/tutorial/inputoutput.html#reading-and-writing-files">Python  file object</a>, which is basically an object with a read method. We called a  read on p to get the contents of the page which we stored in c. <span class="anchor" id="line-36"></span><span class="anchor" id="line-37"></span></p><ul><li style="list-style-type:none">If we were to simply print c we would see a screen of text  which is the code used to generate Google‚Äôs front page. This is what we would  expect. In fact, we have done the same thing before using telnet or curl. Now  we can also do it using Python. Now we have this variable c which contains the whole response,  we can manipulate it in our programs. We are going to be doing a lot of this. <span class="anchor" id="line-38"></span><span class="anchor" id="line-39"></span></li></ul><p class="line874">Let‚Äôs take a look at what is held in the page, p.  We can use the built-in dir() function to  examine a Python object, thus: <span class="anchor" id="line-40"></span><span class="anchor" id="line-41"></span></p><p class="line867"><span class="anchor" id="line-42"></span><span class="anchor" id="line-43"></span><span class="anchor" id="line-44"></span><span class="anchor" id="line-45"></span><span class="anchor" id="line-46"></span><span class="anchor" id="line-47"></span><span class="anchor" id="line-48"></span><span class="anchor" id="line-49"></span><span class="anchor" id="line-50"></span><span class="anchor" id="line-51"></span><span class="anchor" id="line-52"></span><span class="anchor" id="line-53"></span><span class="anchor" id="line-54"></span><span class="anchor" id="line-55"></span><span class="anchor" id="line-56"></span><span class="anchor" id="line-57"></span><span class="anchor" id="line-58"></span><span class="anchor" id="line-59"></span><span class="anchor" id="line-60"></span><span class="anchor" id="line-61"></span><span class="anchor" id="line-62"></span><span class="anchor" id="line-63"></span><span class="anchor" id="line-1-3"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-4dab367935e0091e3dd9811764992886583f11c5\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-4dab367935e0091e3dd9811764992886583f11c5', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-4dab367935e0091e3dd9811764992886583f11c5" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_1">   1</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_1"></span><span class="anchor" id="line-1-4"></span>&gt;&gt;&gt; <span class="ResWord">dir</span>(<span class="ID">p</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_2">   2</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_2"></span><span class="anchor" id="line-2-2"></span>[<span class="String">'</span><span class="String">__doc__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_3">   3</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_3"></span><span class="anchor" id="line-3-2"></span><span class="String">'</span><span class="String">__init__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_4">   4</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_4"></span><span class="anchor" id="line-4-2"></span><span class="String">'</span><span class="String">__iter__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_5">   5</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_5"></span><span class="anchor" id="line-5-2"></span><span class="String">'</span><span class="String">__module__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_6">   6</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_6"></span><span class="anchor" id="line-6-1"></span><span class="String">'</span><span class="String">__repr__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_7">   7</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_7"></span><span class="anchor" id="line-7-1"></span><span class="String">'</span><span class="String">close</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_8">   8</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_8"></span><span class="anchor" id="line-8-1"></span><span class="String">'</span><span class="String">code</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_9">   9</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_9"></span><span class="anchor" id="line-9-1"></span><span class="String">'</span><span class="String">fileno</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_10">  10</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_10"></span><span class="anchor" id="line-10-1"></span><span class="String">'</span><span class="String">fp</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_11">  11</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_11"></span><span class="anchor" id="line-11-1"></span><span class="String">'</span><span class="String">getcode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_12">  12</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_12"></span><span class="anchor" id="line-12-1"></span><span class="String">'</span><span class="String">geturl</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_13">  13</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_13"></span><span class="anchor" id="line-13-1"></span><span class="String">'</span><span class="String">headers</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_14">  14</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_14"></span><span class="anchor" id="line-14-1"></span><span class="String">'</span><span class="String">info</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_15">  15</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_15"></span><span class="anchor" id="line-15-1"></span><span class="String">'</span><span class="String">msg</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_16">  16</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_16"></span><span class="anchor" id="line-16-1"></span><span class="String">'</span><span class="String">next</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_17">  17</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_17"></span><span class="anchor" id="line-17-1"></span><span class="String">'</span><span class="String">read</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_18">  18</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_18"></span><span class="anchor" id="line-18-1"></span><span class="String">'</span><span class="String">readline</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_19">  19</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_19"></span><span class="anchor" id="line-19-1"></span><span class="String">'</span><span class="String">readlines</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_20">  20</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_20"></span><span class="anchor" id="line-20-1"></span><span class="String">'</span><span class="String">url</span><span class="String">'</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-4dab367935e0091e3dd9811764992886583f11c5_21">  21</a> </span><span class="LineAnchor" id="CA-4dab367935e0091e3dd9811764992886583f11c5_21"></span><span class="anchor" id="line-21-1"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-64"></span><p class="line874">These are the methods and attributes of our p object. We can immediately  see that a couple of them that are probably going to be of interest to us. ‚Äúheaders‚Äù is one, and ‚Äúgeturl‚Äù  is another. ‚Äúgetcode‚Äù is probably the status  code. <span class="anchor" id="line-65"></span><span class="anchor" id="line-66"></span></p><ul><li style="list-style-type:none">This is often a good way to get to understand a library that  you don‚Äôt know that well. Use dir() to examine the object. Let's look at a couple of these. If we look at ‚Äúurl‚Äù we see: <span class="anchor" id="line-67"></span><span class="anchor" id="line-68"></span></li></ul><p class="line867"><span class="anchor" id="line-69"></span><span class="anchor" id="line-70"></span><span class="anchor" id="line-71"></span><span class="anchor" id="line-1-5"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-949c4ea338981bba744277f4cbc8476432aef9a2\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-949c4ea338981bba744277f4cbc8476432aef9a2', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-949c4ea338981bba744277f4cbc8476432aef9a2" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-949c4ea338981bba744277f4cbc8476432aef9a2_1">   1</a> </span><span class="LineAnchor" id="CA-949c4ea338981bba744277f4cbc8476432aef9a2_1"></span><span class="anchor" id="line-1-6"></span>&gt;&gt;&gt; <span class="ID">p</span>.<span class="ID">url</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-949c4ea338981bba744277f4cbc8476432aef9a2_2">   2</a> </span><span class="LineAnchor" id="CA-949c4ea338981bba744277f4cbc8476432aef9a2_2"></span><span class="anchor" id="line-2-3"></span><span class="String">'</span><span class="String">http://www.google.co.uk/</span><span class="String">'</span></span>
</pre></div></div><span class="anchor" id="line-72"></span><p class="line874">Which is the url that we requested. Looking a the ‚Äúheaders‚Äù  gives us: <span class="anchor" id="line-73"></span><span class="anchor" id="line-74"></span></p><p class="line867"><span class="anchor" id="line-75"></span><span class="anchor" id="line-76"></span><span class="anchor" id="line-1-7"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-36db4275d77de26cc9af55363f0c11f274a059f1\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-36db4275d77de26cc9af55363f0c11f274a059f1', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-36db4275d77de26cc9af55363f0c11f274a059f1" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-36db4275d77de26cc9af55363f0c11f274a059f1_1">   1</a> </span><span class="LineAnchor" id="CA-36db4275d77de26cc9af55363f0c11f274a059f1_1"></span><span class="anchor" id="line-1-8"></span>&gt;&gt;&gt; <span class="ID">p</span>.<span class="ID">headers</span></span>
</pre></div></div><span class="anchor" id="line-77"></span><p class="line874">This is an HTTP message instance. <span class="anchor" id="line-78"></span><span class="anchor" id="line-79"></span></p><p class="line874">Now, I happen to know that this is a dictionary, and  dictionaries have a function on them called items() which you can call on any  dictionary to view the keys and values: <span class="anchor" id="line-80"></span><span class="anchor" id="line-81"></span></p><p class="line867"><span class="anchor" id="line-82"></span><span class="anchor" id="line-83"></span><span class="anchor" id="line-84"></span><span class="anchor" id="line-85"></span><span class="anchor" id="line-86"></span><span class="anchor" id="line-87"></span><span class="anchor" id="line-88"></span><span class="anchor" id="line-89"></span><span class="anchor" id="line-90"></span><span class="anchor" id="line-91"></span><span class="anchor" id="line-92"></span><span class="anchor" id="line-93"></span><span class="anchor" id="line-94"></span><span class="anchor" id="line-1-9"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_1">   1</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_1"></span><span class="anchor" id="line-1-10"></span>&gt;&gt;&gt; <span class="ID">p</span>.<span class="ID">headers</span>.<span class="ID">items</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_2">   2</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_2"></span><span class="anchor" id="line-2-4"></span>[(<span class="String">'</span><span class="String">x-xss-protection</span><span class="String">'</span>, <span class="String">'</span><span class="String">1; mode=block</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_3">   3</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_3"></span><span class="anchor" id="line-3-3"></span>(<span class="String">'</span><span class="String">set-cookie</span><span class="String">'</span>, <span class="String">'</span><span class="String">PREF=ID=20cb9ed43db0ec93:FF=0:TM=1337091686:LM=1337091686:S=Y6hHS34KbQHiPMGZ; expires=Thu, 15-May-2014 14:21:26 GMT; path=/; domain=.google.co.uk, NID=59=auTR3huH1WH0z9pfwue9E4Qk6MLwpphvjECKqMMdOtP-RXmfz7C_UcLfndBJr72aMtJkDnqq5uOR5TdqWZhfWosIIWUXkBTCUKy0_uFggkNdiAr0HCKg_VAha--ez6kX; expires=Wed, 14-Nov-2012 14:21:26 GMT; path=/; domain=.google.co.uk; HttpOnly</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_4">   4</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_4"></span><span class="anchor" id="line-4-3"></span>(<span class="String">'</span><span class="String">expires</span><span class="String">'</span>, <span class="String">'</span><span class="String">-1</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_5">   5</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_5"></span><span class="anchor" id="line-5-3"></span>(<span class="String">'</span><span class="String">server</span><span class="String">'</span>, <span class="String">'</span><span class="String">gws</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_6">   6</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_6"></span><span class="anchor" id="line-6-2"></span>(<span class="String">'</span><span class="String">connection</span><span class="String">'</span>, <span class="String">'</span><span class="String">close</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_7">   7</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_7"></span><span class="anchor" id="line-7-2"></span>(<span class="String">'</span><span class="String">cache-control</span><span class="String">'</span>, <span class="String">'</span><span class="String">private, max-age=0</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_8">   8</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_8"></span><span class="anchor" id="line-8-2"></span>(<span class="String">'</span><span class="String">date</span><span class="String">'</span>, <span class="String">'</span><span class="String">Tue, 15 May 2012 14:21:26 GMT</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_9">   9</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_9"></span><span class="anchor" id="line-9-2"></span>(<span class="String">'</span><span class="String">p3p</span><span class="String">'</span>, <span class="String">'</span><span class="String">CP=</span><span class="String">"</span><span class="String">This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&amp;answer=151657 for more info.</span><span class="String">"</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_10">  10</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_10"></span><span class="anchor" id="line-10-2"></span>(<span class="String">'</span><span class="String">content-type</span><span class="String">'</span>, <span class="String">'</span><span class="String">text/html; charset=ISO-8859-1</span><span class="String">'</span>),</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_11">  11</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_11"></span><span class="anchor" id="line-11-2"></span>(<span class="String">'</span><span class="String">x-frame-options</span><span class="String">'</span>, <span class="String">'</span><span class="String">SAMEORIGIN</span><span class="String">'</span>)]</span>
<span class="line"><span class="LineNumber"><a href="#CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_12">  12</a> </span><span class="LineAnchor" id="CA-c4b55ab518c039a20a0bc65cf2ef2a4d61fb15bb_12"></span><span class="anchor" id="line-12-2"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-95"></span><p class="line874">These are all of the headers we got back from Google. Since this is an actual dictionary, so if we want to know the content type, we enter: <span class="anchor" id="line-96"></span><span class="anchor" id="line-97"></span></p><p class="line867"><span class="anchor" id="line-98"></span><span class="anchor" id="line-99"></span><span class="anchor" id="line-100"></span><span class="anchor" id="line-101"></span><span class="anchor" id="line-1-11"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478_1">   1</a> </span><span class="LineAnchor" id="CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478_1"></span><span class="anchor" id="line-1-12"></span>&gt;&gt;&gt; <span class="ID">p</span>.<span class="ID">headers</span>[<span class="String">'</span><span class="String">content-type</span><span class="String">'</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478_2">   2</a> </span><span class="LineAnchor" id="CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478_2"></span><span class="anchor" id="line-2-5"></span><span class="String">'</span><span class="String">text/html; charset=ISO-8859-1</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478_3">   3</a> </span><span class="LineAnchor" id="CA-6ad092b97de2e809a95eb7a04eac3b791a7e3478_3"></span><span class="anchor" id="line-3-4"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-102"></span><p class="line874">and we can see we're getting an ISO charset. <span class="anchor" id="line-103"></span><span class="anchor" id="line-104"></span></p><ul><li style="list-style-type:none">So, in future, especially for Windows users who may have had  trouble using telnet, you can just use urllib and get the same answer. Let‚Äôs try out what we just learned in a quiz. <span class="anchor" id="line-105"></span><span class="anchor" id="line-106"></span></li></ul><p class="line867">
</p><h3 id="Quiz:_Using_urllib">Quiz: Using urllib</h3>
<span class="anchor" id="line-107"></span><p class="line874">What server does www.example.com use? <span class="anchor" id="line-108"></span><span class="anchor" id="line-109"></span></p><ul><li style="list-style-type:none">Use Python and urllib2 and read the server  header. <span class="anchor" id="line-110"></span><span class="anchor" id="line-111"></span></li></ul><p class="line867"><strong><br>
 </strong> <span class="anchor" id="line-112"></span><span class="anchor" id="line-113"></span></p><p class="line867">
</p><h3 id="Redirection">Redirection</h3>
<span class="anchor" id="line-114"></span><p class="line874">I saved the page for www.example.com in a variable called p2. If  we look at the url attribute on p2 we see: <span class="anchor" id="line-115"></span><span class="anchor" id="line-116"></span></p><p class="line867"><span class="anchor" id="line-117"></span><span class="anchor" id="line-118"></span><span class="anchor" id="line-119"></span><span class="anchor" id="line-120"></span><span class="anchor" id="line-1-13"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-679d4965df60c506c96eb024f4ced4ec9622bb83\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-679d4965df60c506c96eb024f4ced4ec9622bb83', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-679d4965df60c506c96eb024f4ced4ec9622bb83" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-679d4965df60c506c96eb024f4ced4ec9622bb83_1">   1</a> </span><span class="LineAnchor" id="CA-679d4965df60c506c96eb024f4ced4ec9622bb83_1"></span><span class="anchor" id="line-1-14"></span>&gt;&gt;&gt; <span class="ID">p2</span>.<span class="ID">url</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-679d4965df60c506c96eb024f4ced4ec9622bb83_2">   2</a> </span><span class="LineAnchor" id="CA-679d4965df60c506c96eb024f4ced4ec9622bb83_2"></span><span class="anchor" id="line-2-6"></span><span class="String">'</span><span class="String">http://www.iana.org/domains/example/</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-679d4965df60c506c96eb024f4ced4ec9622bb83_3">   3</a> </span><span class="LineAnchor" id="CA-679d4965df60c506c96eb024f4ced4ec9622bb83_3"></span><span class="anchor" id="line-3-5"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-121"></span><p class="line874">The url is actually iana.org. This is because example.com  redirects to iana.org (as we saw back in unit 1). Now, urllib2 automatically  follows redirects, and this can sometimes be confusing. In this case, it automatically  followed the redirect to iana.org, whose server is Apache. <span class="anchor" id="line-122"></span><span class="anchor" id="line-123"></span></p><ul><li style="list-style-type:none">But if you do this by hand, as we did in unit 1, you find that  the server is actually Big IP. <span class="anchor" id="line-124"></span><p class="line862">It is important for you to be aware when you use these  libraries, that a lot of them, including urllib2 and the default one included  in Google App Engine (called <a class="https" href="https://developers.google.com/appengine/docs/python/urlfetch/">URL Fetch</a>),   follow redirects automatically. If you  don't want to follow the redirects, there is almost always an option to tell  the library not to automatically follow redirects. <span class="anchor" id="line-125"></span><span class="anchor" id="line-126"></span></p></li></ul><p class="line867">
</p><h2 id="XML">XML</h2>
<span class="anchor" id="line-127"></span><p class="line874">Let‚Äôs talk a little bit about what is actually sent over the  wire between two computers. <span class="anchor" id="line-128"></span><span class="anchor" id="line-129"></span></p><ul><li style="list-style-type:none">We could have our servers make requests to other systems and  receive the response as HTML. In fact, this is just what many servers do, but  this is actually less than ideal. We have seen HTML already, and by now you will know that it  can be somewhat complex and not very regular. Fortunately, most browsers are  very forgiving. Consider this HTML: <span class="anchor" id="line-130"></span><span class="anchor" id="line-131"></span></li></ul><p class="line867"><span class="anchor" id="line-132"></span><span class="anchor" id="line-133"></span><span class="anchor" id="line-134"></span><span class="anchor" id="line-135"></span><span class="anchor" id="line-136"></span><span class="anchor" id="line-1-15"></span></p><div class="highlight html"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_1">   1</a> </span><span class="LineAnchor" id="CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_1"></span><span class="anchor" id="line-1-16"></span>  <span class="ID">&lt;form</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_2">   2</a> </span><span class="LineAnchor" id="CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_2"></span><span class="anchor" id="line-2-7"></span>    <span class="ID">&lt;b</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_3">   3</a> </span><span class="LineAnchor" id="CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_3"></span><span class="anchor" id="line-3-6"></span>        Hello!</span>
<span class="line"><span class="LineNumber"><a href="#CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_4">   4</a> </span><span class="LineAnchor" id="CA-463b28fb7b1f61ed4dfa118db7f307dfc25e98bb_4"></span><span class="anchor" id="line-4-4"></span>  <span class="ID">&lt;/form&gt;</span></span>
</pre></div></div><span class="anchor" id="line-137"></span><p class="line862">The closing &lt;/b&gt; is missing. However, many browsers will  still render this correctly. <span class="anchor" id="line-138"></span><span class="anchor" id="line-139"></span></p><ul><li style="list-style-type:none"><p class="line862">A computer attempting to parse this code, will expect an  opening &lt;b&gt; tag to have a closing &lt;/b&gt; tag. If the closing tag is  missing, the computer could get lost in this loop. You may be able to recover  from this, like a browser does, depending on how complicated you want to make  your parser. Then again, you may not. <span class="anchor" id="line-140"></span><span class="anchor" id="line-141"></span></p></li></ul><p class="line874">So HTML is not really an ideal language for  computer-to-computer communication. <span class="anchor" id="line-142"></span><span class="anchor" id="line-143"></span></p><ul><li style="list-style-type:none">Some servers do use HTML. When Hipmunk sends a request to  Amtrak they actually get HTML from Amtrak. They then have a fairly involved  process to parse this. We used some regular expressions to validate usernames and  emails in Homework 2. Hipmunk use similar regular expressions when they parse  HTML from Amtrak: <span class="anchor" id="line-144"></span><span class="anchor" id="line-145"></span></li></ul><div><table><tbody><tr>  <td style="vertical-align:top; width: 568px"><p class="line891"><br>
       AVAILABILITY_DIV_RE =    re.compile(r'&lt;div class="availability"    .*?&lt;/form&gt;s*&lt;/div&gt;',<br>
       re.S)<br>
       SELECT_AND_PRICE_RE =    re.compile(r'&lt;span    class="select_and_price"&gt;.*?&lt;/span&gt;',<br>
       re.s)<br>
       PRICE_RE =    re.compile(r'$([0-9.]*)')<br>
       SERVICE_SPAN_RE =    re.compile(r'&lt;span id="_service_span".*?&lt;/span&gt;')<br>
       TIME_POINT_RE =    re.compile(r'&lt;span class="time_point"&gt;.*?&lt;/span&gt;')<br>
       DEPARTS_RE =    re.compile(r'Departs: ([0-9]+:[0-9]+ [A|P]M)')<br>
       ARRIVES_RE = re.compile(r'Arrives:    ([0-9]+:[0-9]+ [A|P]M)')<br>
       DEP_DATA_RE =    re.compile(r'&lt;div class="dep_data"&gt;.*?&lt;/div&gt;', re.S)<br>
       ARR_DATA_RE =    re.compile(r'&lt;div class="arr_data"&gt;.*?&lt;/div&gt;', re.S)<br>
       DEP_ARR_DATE_RE =    re.compile(r'[A|P]M\s*(.*?[0-9]{4})')<br>
       AVS_GRID_RE =    re.compile(r'&lt;div class="avs_grid"&gt;.*?"&gt; &lt;/div&gt;\s*&lt;/div&gt;'    re.S)<br>
       CABIN_RE =    re.compile(r'&lt;div class="single_option.*?(\w+ \w+    Seat.*?)&lt;/div&gt;',<br>
       re.S)<br>
       NUMBER_RE =    re.compile(r'([0-9]+')<br>
       STATION_CODE_RE =    re.compile(r'(([A-Z]{3})\)', re.S) </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-146"></span><span class="anchor" id="line-147"></span><span class="anchor" id="line-148"></span><p class="line874">At first glace, this appears to be just a wall of text. As you  can imagine, this is extremely error-prone, and is not the ideal way of doing  things.. <span class="anchor" id="line-149"></span><span class="anchor" id="line-150"></span></p><ul><li style="list-style-type:none"><p class="line862">In an ideal world, we would use an API (<a class="http" href="http://en.wikipedia.org/wiki/Api">application  programming interface</a><strong>)</strong> that uses a language more appropriate  for the task. Such a language might be <a class="http" href="http://en.wikipedia.org/wiki/XML">XML</a>. XML was actually invented in the late '90s specifically to  enable a regular way of expressing data between computer systems. This is what  some XML might look like: <span class="anchor" id="line-151"></span><span class="anchor" id="line-152"></span></p></li></ul><p class="line867"><span class="anchor" id="line-153"></span><span class="anchor" id="line-154"></span><span class="anchor" id="line-155"></span><span class="anchor" id="line-156"></span><span class="anchor" id="line-157"></span><span class="anchor" id="line-158"></span><span class="anchor" id="line-159"></span><span class="anchor" id="line-160"></span><span class="anchor" id="line-161"></span><span class="anchor" id="line-162"></span><span class="anchor" id="line-1-17"></span></p><div class="highlight xml"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-f0bf9b31f3a3eeba3c55ed47631656762c637408\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-f0bf9b31f3a3eeba3c55ed47631656762c637408', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_1">   1</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_1"></span><span class="anchor" id="line-1-18"></span><span class="Preprc">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_2">   2</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_2"></span><span class="anchor" id="line-2-8"></span><span class="ID">&lt;results</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_3">   3</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_3"></span><span class="anchor" id="line-3-7"></span>  <span class="ID">&lt;itinerary</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_4">   4</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_4"></span><span class="anchor" id="line-4-5"></span>    <span class="ID">&lt;leg</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_5">   5</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_5"></span><span class="anchor" id="line-5-4"></span>      <span class="ID">&lt;origin</span><span class="ID">&gt;</span>CUS<span class="ID">&lt;/origin&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_6">   6</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_6"></span><span class="anchor" id="line-6-3"></span>      <span class="ID">&lt;dest</span><span class="ID">&gt;</span>WAS<span class="ID">&lt;/dest&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_7">   7</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_7"></span><span class="anchor" id="line-7-3"></span>    <span class="ID">&lt;/leg&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_8">   8</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_8"></span><span class="anchor" id="line-8-3"></span>  <span class="ID">&lt;/itinerary&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_9">   9</a> </span><span class="LineAnchor" id="CA-f0bf9b31f3a3eeba3c55ed47631656762c637408_9"></span><span class="anchor" id="line-9-3"></span><span class="ID">&lt;/results&gt;</span></span>
</pre></div></div><span class="anchor" id="line-163"></span><p class="line874">If you think this looks an awful lot like HTML, you are  correct! <span class="anchor" id="line-164"></span><span class="anchor" id="line-165"></span></p><p class="line874">The first line is basically the document type. We have the  same thing in HTML. We've been using HTML5, so our HTML doctype also looks  something like this. It's just the first line that says what format the rest of  the document is. <span class="anchor" id="line-166"></span><span class="anchor" id="line-167"></span></p><ul><li style="list-style-type:none"><p class="line862">Now, the reason both HTML and XML look so similar is that they  share a common ancestor in <a class="http" href="http://en.wikipedia.org/wiki/Sgml">SGML</a> (Standard Generalised Markup Language), which was invented in the 1980s. The main difference between XML and HTML is that in XML every  tag has to have a closing tag. The tag format is the same with opening tags, &lt;results&gt;, and closing tags, &lt;/results&gt;, but <strong>there are no void tags in XML</strong>. In HTML we have the &lt;br&gt; tag to put in a line break.  This doesn‚Äôt need a closing tag because HTML doesn't require all tags to close.  We have the notion of a void tag, and the line break is an example of one of  those. XML has nothing like that . Now, if you want a tag that has no  content in XML, you could include a closing slash before the greater-than symbol,  something like this: &lt;br/&gt; In fact, there is a doctype for HMTL called "XHTML": <span class="anchor" id="line-168"></span><span class="anchor" id="line-169"></span></p></li></ul><p class="line867">&lt;!DOCTYPE xhtml&gt; <span class="anchor" id="line-170"></span><span class="anchor" id="line-171"></span></p><p class="line874">This basically says that the HTML document is actually also going  to be valid XML. In this case, instead of void tags with no closing slash, the  closing slash is included before the greater-than. <span class="anchor" id="line-172"></span><span class="anchor" id="line-173"></span></p><ul><li style="list-style-type:none">In essence, XML is very similar to HTML, but it is more  rigorous. <span class="anchor" id="line-174"></span><span class="anchor" id="line-175"></span></li></ul><p class="line867">
</p><h3 id="Quiz:_XML_and_HTML">Quiz: XML and HTML</h3>
<span class="anchor" id="line-176"></span><p class="line874">Which of these are true statements? <span class="anchor" id="line-177"></span><span class="anchor" id="line-178"></span></p><ul><li>All HTML is XML? <span class="anchor" id="line-179"></span></li><li>All XML is HTML? <span class="anchor" id="line-180"></span></li><li>HTML can be expressed in XML? <span class="anchor" id="line-181"></span></li><li>XML and HTML share a common lineage. <span class="anchor" id="line-182"></span><span class="anchor" id="line-183"></span></li></ul><p class="line874">Select all that are correct. <span class="anchor" id="line-184"></span><span class="anchor" id="line-185"></span></p><p class="line867"><strong><br>
 </strong> <span class="anchor" id="line-186"></span><span class="anchor" id="line-187"></span></p><p class="line867">
</p><h3 id="Parsing_XML">Parsing XML</h3>
<span class="anchor" id="line-188"></span><p class="line874">So,  how do we parse  XML? <span class="anchor" id="line-189"></span><span class="anchor" id="line-190"></span></p><ul><li style="list-style-type:none">Python includes a built-in parser. Python has a library called  "minidom". You can use it by running  something like: from xml.dom import minidom <span class="anchor" id="line-191"></span><p class="line862">The term ‚ÄúDOM‚Äù is something you‚Äôll see quite often when you  work with XML. This stands for "<a class="http" href="http://en.wikipedia.org/wiki/Document_object_model">Document Object Model</a>",  and essentially refers to the internal computer representation of an XML document.  In Python, the XML document is an object that  has a list of children. Each of these children is some sort of tag object, and these  tag objects may have attributes like name, contents and so on. Actually parsing XML is really complicated. XML can be many,  many gigabytes in size. Parsing all of that text is definitely nontrivial!  However, if you're only parsing a small amount of text, you can use the minidom  library, which is a smaller, ‚Äòlightweight‚Äô version of the DOM parser that is  simple and fast but which will break if you throw really large amounts text at  it. For our purposes in this unit, minidom will work just fine. Let‚Äôs take a look at minidom in action. Now, minidom has a  function called parseString(), which will parse a string of XML. We can enter  the code into the Python interpreter as shown below: <span class="anchor" id="line-192"></span><span class="anchor" id="line-193"></span></p></li></ul><p class="line867"><span class="anchor" id="line-194"></span><span class="anchor" id="line-195"></span><span class="anchor" id="line-196"></span><span class="anchor" id="line-197"></span><span class="anchor" id="line-198"></span><span class="anchor" id="line-199"></span><span class="anchor" id="line-200"></span><span class="anchor" id="line-1-19"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_1">   1</a> </span><span class="LineAnchor" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_1"></span><span class="anchor" id="line-1-20"></span>  &gt;&gt;&gt;  <span class="ResWord">from</span> <span class="ID">xml.dom</span> <span class="ResWord">import</span> <span class="ID">minidom</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_2">   2</a> </span><span class="LineAnchor" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_2"></span><span class="anchor" id="line-2-9"></span>  &gt;&gt;&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_3">   3</a> </span><span class="LineAnchor" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_3"></span><span class="anchor" id="line-3-8"></span>  &gt;&gt;&gt;  <span class="ID">minidom</span>.<span class="ID">parseString</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_4">   4</a> </span><span class="LineAnchor" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_4"></span><span class="anchor" id="line-4-6"></span>  &lt;<span class="ID">function</span>  <span class="ID">parseString</span> <span class="ID">at</span> <span class="Number">0x02853DB0</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_5">   5</a> </span><span class="LineAnchor" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_5"></span><span class="anchor" id="line-5-5"></span>  &gt;&gt;&gt;  <span class="ID">x</span> = <span class="ID">minidom</span>.<span class="ID">parseString</span>(<span class="String">"</span><span class="String">&lt;mytag&gt;contents!&lt;chilrdren&gt;&lt;item&gt;1&lt;/item&gt;&lt;item&gt;2&lt;/item&gt;&lt;/children&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_6">   6</a> </span><span class="LineAnchor" id="CA-3fb33462ac90a51bcc481ad8a4debe680f2d3f66_6"></span><span class="anchor" id="line-6-4"></span>  &lt;/<span class="ID">mytag</span>&gt;<span class="String">"</span><span class="String">)</span></span>
</pre></div></div><span class="anchor" id="line-201"></span><p class="line862">Looking at the XML string, we have an opening tag,  &lt;mytag&gt;, followed by some text, and then an opening &lt;children&gt; tag  and some items within &lt;item&gt;&lt;/item&gt; tags, and then the closing  &lt;/children&gt; and &lt;/mytag&gt; tags. <span class="anchor" id="line-202"></span><span class="anchor" id="line-203"></span></p><ul><li style="list-style-type:none">There are a couple of things to note here. Firstly, these are  just made up tag names. In HTML, there are specific tags that you have to use.  With XML you can use whatever tags you want to use, as long as the people  writing and reading the XML agree on the meaning of the names. <span class="anchor" id="line-204"></span><p class="line862">Secondly, we have included a deliberate typo in the opening  &lt;chilrdren&gt; tag. If we run the code as shown, we get an error: <span class="anchor" id="line-205"></span><span class="anchor" id="line-206"></span></p></li></ul><p class="line867"><a class="nonexistent" href="/ExpatError">ExpatError</a>: mismatched tag: line 1,  column 57 <span class="anchor" id="line-207"></span><span class="anchor" id="line-208"></span></p><p class="line874">A mismatched tag. Well, that does make sense! <span class="anchor" id="line-209"></span><span class="anchor" id="line-210"></span></p><p class="line874">If we run the code without the typo we will get a minidom  document instance: <span class="anchor" id="line-211"></span><span class="anchor" id="line-212"></span></p><p class="line867"><span class="anchor" id="line-213"></span><span class="anchor" id="line-214"></span><span class="anchor" id="line-215"></span><span class="anchor" id="line-216"></span><span class="anchor" id="line-1-21"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc_1">   1</a> </span><span class="LineAnchor" id="CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc_1"></span><span class="anchor" id="line-1-22"></span>&gt;&gt;&gt; <span class="ID">x</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc_2">   2</a> </span><span class="LineAnchor" id="CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc_2"></span><span class="anchor" id="line-2-10"></span>&lt;<span class="ID">xml</span>.<span class="ID">dom</span>.<span class="ID">minidom</span>.<span class="ID">Document</span> <span class="ID">instance</span> <span class="ID">at</span> <span class="Number">0x027B3A08</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc_3">   3</a> </span><span class="LineAnchor" id="CA-415ab9e8a3e7b664c9574b7b20cceb7b94a9b0dc_3"></span><span class="anchor" id="line-3-9"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-217"></span><p class="line874">We can use the dir() function to see what is in x: <span class="anchor" id="line-218"></span><span class="anchor" id="line-219"></span></p><p class="line867"><span class="anchor" id="line-220"></span><span class="anchor" id="line-221"></span><span class="anchor" id="line-222"></span><span class="anchor" id="line-223"></span><span class="anchor" id="line-224"></span><span class="anchor" id="line-225"></span><span class="anchor" id="line-226"></span><span class="anchor" id="line-227"></span><span class="anchor" id="line-228"></span><span class="anchor" id="line-229"></span><span class="anchor" id="line-230"></span><span class="anchor" id="line-231"></span><span class="anchor" id="line-232"></span><span class="anchor" id="line-233"></span><span class="anchor" id="line-234"></span><span class="anchor" id="line-235"></span><span class="anchor" id="line-236"></span><span class="anchor" id="line-237"></span><span class="anchor" id="line-238"></span><span class="anchor" id="line-239"></span><span class="anchor" id="line-240"></span><span class="anchor" id="line-241"></span><span class="anchor" id="line-242"></span><span class="anchor" id="line-243"></span><span class="anchor" id="line-244"></span><span class="anchor" id="line-245"></span><span class="anchor" id="line-246"></span><span class="anchor" id="line-247"></span><span class="anchor" id="line-248"></span><span class="anchor" id="line-249"></span><span class="anchor" id="line-250"></span><span class="anchor" id="line-251"></span><span class="anchor" id="line-252"></span><span class="anchor" id="line-253"></span><span class="anchor" id="line-254"></span><span class="anchor" id="line-255"></span><span class="anchor" id="line-256"></span><span class="anchor" id="line-257"></span><span class="anchor" id="line-258"></span><span class="anchor" id="line-259"></span><span class="anchor" id="line-260"></span><span class="anchor" id="line-261"></span><span class="anchor" id="line-262"></span><span class="anchor" id="line-263"></span><span class="anchor" id="line-264"></span><span class="anchor" id="line-265"></span><span class="anchor" id="line-266"></span><span class="anchor" id="line-267"></span><span class="anchor" id="line-268"></span><span class="anchor" id="line-269"></span><span class="anchor" id="line-270"></span><span class="anchor" id="line-271"></span><span class="anchor" id="line-272"></span><span class="anchor" id="line-273"></span><span class="anchor" id="line-274"></span><span class="anchor" id="line-275"></span><span class="anchor" id="line-276"></span><span class="anchor" id="line-277"></span><span class="anchor" id="line-278"></span><span class="anchor" id="line-279"></span><span class="anchor" id="line-280"></span><span class="anchor" id="line-281"></span><span class="anchor" id="line-282"></span><span class="anchor" id="line-283"></span><span class="anchor" id="line-284"></span><span class="anchor" id="line-285"></span><span class="anchor" id="line-286"></span><span class="anchor" id="line-287"></span><span class="anchor" id="line-288"></span><span class="anchor" id="line-289"></span><span class="anchor" id="line-290"></span><span class="anchor" id="line-291"></span><span class="anchor" id="line-292"></span><span class="anchor" id="line-293"></span><span class="anchor" id="line-294"></span><span class="anchor" id="line-295"></span><span class="anchor" id="line-296"></span><span class="anchor" id="line-297"></span><span class="anchor" id="line-298"></span><span class="anchor" id="line-299"></span><span class="anchor" id="line-300"></span><span class="anchor" id="line-301"></span><span class="anchor" id="line-302"></span><span class="anchor" id="line-303"></span><span class="anchor" id="line-304"></span><span class="anchor" id="line-305"></span><span class="anchor" id="line-306"></span><span class="anchor" id="line-307"></span><span class="anchor" id="line-308"></span><span class="anchor" id="line-309"></span><span class="anchor" id="line-310"></span><span class="anchor" id="line-311"></span><span class="anchor" id="line-312"></span><span class="anchor" id="line-313"></span><span class="anchor" id="line-314"></span><span class="anchor" id="line-315"></span><span class="anchor" id="line-316"></span><span class="anchor" id="line-317"></span><span class="anchor" id="line-318"></span><span class="anchor" id="line-319"></span><span class="anchor" id="line-320"></span><span class="anchor" id="line-321"></span><span class="anchor" id="line-1-23"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1a18e6930a26a1a7124fec14312e578a65f0f769\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-1a18e6930a26a1a7124fec14312e578a65f0f769', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_1">   1</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_1"></span><span class="anchor" id="line-1-24"></span>&gt;&gt;&gt; <span class="ResWord">dir</span>(<span class="ID">x</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_2">   2</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_2"></span><span class="anchor" id="line-2-11"></span>[<span class="String">'</span><span class="String">ATTRIBUTE_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_3">   3</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_3"></span><span class="anchor" id="line-3-10"></span><span class="String">'</span><span class="String">CDATA_SECTION_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_4">   4</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_4"></span><span class="anchor" id="line-4-7"></span><span class="String">'</span><span class="String">COMMENT_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_5">   5</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_5"></span><span class="anchor" id="line-5-6"></span><span class="String">'</span><span class="String">DOCUMENT_FRAGMENT_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_6">   6</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_6"></span><span class="anchor" id="line-6-5"></span><span class="String">'</span><span class="String">DOCUMENT_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_7">   7</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_7"></span><span class="anchor" id="line-7-4"></span><span class="String">'</span><span class="String">DOCUMENT_TYPE_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_8">   8</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_8"></span><span class="anchor" id="line-8-4"></span><span class="String">'</span><span class="String">ELEMENT_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_9">   9</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_9"></span><span class="anchor" id="line-9-4"></span><span class="String">'</span><span class="String">ENTITY_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_10">  10</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_10"></span><span class="anchor" id="line-10-3"></span><span class="String">'</span><span class="String">ENTITY_REFERENCE_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_11">  11</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_11"></span><span class="anchor" id="line-11-3"></span><span class="String">'</span><span class="String">NOTATION_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_12">  12</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_12"></span><span class="anchor" id="line-12-3"></span><span class="String">'</span><span class="String">PROCESSING_INSTRUCTION_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_13">  13</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_13"></span><span class="anchor" id="line-13-2"></span><span class="String">'</span><span class="String">TEXT_NODE</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_14">  14</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_14"></span><span class="anchor" id="line-14-2"></span><span class="String">'</span><span class="String">__doc__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_15">  15</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_15"></span><span class="anchor" id="line-15-2"></span><span class="String">'</span><span class="String">__init__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_16">  16</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_16"></span><span class="anchor" id="line-16-2"></span><span class="String">'</span><span class="String">__module__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_17">  17</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_17"></span><span class="anchor" id="line-17-2"></span><span class="String">'</span><span class="String">__nonzero__</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_18">  18</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_18"></span><span class="anchor" id="line-18-2"></span><span class="String">'</span><span class="String">_call_user_data_handler</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_19">  19</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_19"></span><span class="anchor" id="line-19-2"></span><span class="String">'</span><span class="String">_child_node_types</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_20">  20</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_20"></span><span class="anchor" id="line-20-2"></span><span class="String">'</span><span class="String">_create_entity</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_21">  21</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_21"></span><span class="anchor" id="line-21-2"></span><span class="String">'</span><span class="String">_create_notation</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_22">  22</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_22"></span><span class="anchor" id="line-22-1"></span><span class="String">'</span><span class="String">_elem_info</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_23">  23</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_23"></span><span class="anchor" id="line-23-1"></span><span class="String">'</span><span class="String">_get_actualEncoding</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_24">  24</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_24"></span><span class="anchor" id="line-24-1"></span><span class="String">'</span><span class="String">_get_async</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_25">  25</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_25"></span><span class="anchor" id="line-25-1"></span><span class="String">'</span><span class="String">_get_childNodes</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_26">  26</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_26"></span><span class="anchor" id="line-26-1"></span><span class="String">'</span><span class="String">_get_doctype</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_27">  27</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_27"></span><span class="anchor" id="line-27-1"></span><span class="String">'</span><span class="String">_get_documentElement</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_28">  28</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_28"></span><span class="anchor" id="line-28-1"></span><span class="String">'</span><span class="String">_get_documentURI</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_29">  29</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_29"></span><span class="anchor" id="line-29-1"></span><span class="String">'</span><span class="String">_get_elem_info</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_30">  30</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_30"></span><span class="anchor" id="line-30-1"></span><span class="String">'</span><span class="String">_get_encoding</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_31">  31</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_31"></span><span class="anchor" id="line-31-1"></span><span class="String">'</span><span class="String">_get_errorHandler</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_32">  32</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_32"></span><span class="anchor" id="line-32-1"></span><span class="String">'</span><span class="String">_get_firstChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_33">  33</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_33"></span><span class="anchor" id="line-33-1"></span><span class="String">'</span><span class="String">_get_lastChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_34">  34</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_34"></span><span class="anchor" id="line-34-1"></span><span class="String">'</span><span class="String">_get_localName</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_35">  35</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_35"></span><span class="anchor" id="line-35-1"></span><span class="String">'</span><span class="String">_get_standalone</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_36">  36</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_36"></span><span class="anchor" id="line-36-1"></span><span class="String">'</span><span class="String">_get_strictErrorChecking</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_37">  37</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_37"></span><span class="anchor" id="line-37-1"></span><span class="String">'</span><span class="String">_get_version</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_38">  38</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_38"></span><span class="anchor" id="line-38-1"></span><span class="String">'</span><span class="String">_id_cache</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_39">  39</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_39"></span><span class="anchor" id="line-39-1"></span><span class="String">'</span><span class="String">_id_search_stack</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_40">  40</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_40"></span><span class="anchor" id="line-40-1"></span><span class="String">'</span><span class="String">_magic_id_count</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_41">  41</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_41"></span><span class="anchor" id="line-41-1"></span><span class="String">'</span><span class="String">_set_async</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_42">  42</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_42"></span><span class="anchor" id="line-42-1"></span><span class="String">'</span><span class="String">abort</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_43">  43</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_43"></span><span class="anchor" id="line-43-1"></span><span class="String">'</span><span class="String">actualEncoding</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_44">  44</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_44"></span><span class="anchor" id="line-44-1"></span><span class="String">'</span><span class="String">appendChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_45">  45</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_45"></span><span class="anchor" id="line-45-1"></span><span class="String">'</span><span class="String">async</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_46">  46</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_46"></span><span class="anchor" id="line-46-1"></span><span class="String">'</span><span class="String">attributes</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_47">  47</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_47"></span><span class="anchor" id="line-47-1"></span><span class="String">'</span><span class="String">childNodes</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_48">  48</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_48"></span><span class="anchor" id="line-48-1"></span><span class="String">'</span><span class="String">cloneNode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_49">  49</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_49"></span><span class="anchor" id="line-49-1"></span><span class="String">'</span><span class="String">createAttribute</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_50">  50</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_50"></span><span class="anchor" id="line-50-1"></span><span class="String">'</span><span class="String">createAttributeNS</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_51">  51</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_51"></span><span class="anchor" id="line-51-1"></span><span class="String">'</span><span class="String">createCDATASection</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_52">  52</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_52"></span><span class="anchor" id="line-52-1"></span><span class="String">'</span><span class="String">createComment</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_53">  53</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_53"></span><span class="anchor" id="line-53-1"></span><span class="String">'</span><span class="String">createDocumentFragment</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_54">  54</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_54"></span><span class="anchor" id="line-54-1"></span><span class="String">'</span><span class="String">createElement</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_55">  55</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_55"></span><span class="anchor" id="line-55-1"></span><span class="String">'</span><span class="String">createElementNS</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_56">  56</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_56"></span><span class="anchor" id="line-56-1"></span><span class="String">'</span><span class="String">createProcessingInstruction</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_57">  57</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_57"></span><span class="anchor" id="line-57-1"></span><span class="String">'</span><span class="String">createTextNode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_58">  58</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_58"></span><span class="anchor" id="line-58-1"></span><span class="String">'</span><span class="String">doctype</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_59">  59</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_59"></span><span class="anchor" id="line-59-1"></span><span class="String">'</span><span class="String">documentElement</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_60">  60</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_60"></span><span class="anchor" id="line-60-1"></span><span class="String">'</span><span class="String">documentURI</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_61">  61</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_61"></span><span class="anchor" id="line-61-1"></span><span class="String">'</span><span class="String">encoding</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_62">  62</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_62"></span><span class="anchor" id="line-62-1"></span><span class="String">'</span><span class="String">errorHandler</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_63">  63</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_63"></span><span class="anchor" id="line-63-1"></span><span class="String">'</span><span class="String">firstChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_64">  64</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_64"></span><span class="anchor" id="line-64-1"></span><span class="String">'</span><span class="String">getElementById</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_65">  65</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_65"></span><span class="anchor" id="line-65-1"></span><span class="String">'</span><span class="String">getElementsByTagName</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_66">  66</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_66"></span><span class="anchor" id="line-66-1"></span><span class="String">'</span><span class="String">getElementsByTagNameNS</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_67">  67</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_67"></span><span class="anchor" id="line-67-1"></span><span class="String">'</span><span class="String">getInterface</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_68">  68</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_68"></span><span class="anchor" id="line-68-1"></span><span class="String">'</span><span class="String">getUserData</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_69">  69</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_69"></span><span class="anchor" id="line-69-1"></span><span class="String">'</span><span class="String">hasChildNodes</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_70">  70</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_70"></span><span class="anchor" id="line-70-1"></span><span class="String">'</span><span class="String">implementation</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_71">  71</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_71"></span><span class="anchor" id="line-71-1"></span><span class="String">'</span><span class="String">importNode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_72">  72</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_72"></span><span class="anchor" id="line-72-1"></span><span class="String">'</span><span class="String">insertBefore</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_73">  73</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_73"></span><span class="anchor" id="line-73-1"></span><span class="String">'</span><span class="String">isSameNode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_74">  74</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_74"></span><span class="anchor" id="line-74-1"></span><span class="String">'</span><span class="String">isSupported</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_75">  75</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_75"></span><span class="anchor" id="line-75-1"></span><span class="String">'</span><span class="String">lastChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_76">  76</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_76"></span><span class="anchor" id="line-76-1"></span><span class="String">'</span><span class="String">load</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_77">  77</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_77"></span><span class="anchor" id="line-77-1"></span><span class="String">'</span><span class="String">loadXML</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_78">  78</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_78"></span><span class="anchor" id="line-78-1"></span><span class="String">'</span><span class="String">localName</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_79">  79</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_79"></span><span class="anchor" id="line-79-1"></span><span class="String">'</span><span class="String">namespaceURI</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_80">  80</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_80"></span><span class="anchor" id="line-80-1"></span><span class="String">'</span><span class="String">nextSibling</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_81">  81</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_81"></span><span class="anchor" id="line-81-1"></span><span class="String">'</span><span class="String">nodeName</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_82">  82</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_82"></span><span class="anchor" id="line-82-1"></span><span class="String">'</span><span class="String">nodeType</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_83">  83</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_83"></span><span class="anchor" id="line-83-1"></span><span class="String">'</span><span class="String">nodeValue</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_84">  84</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_84"></span><span class="anchor" id="line-84-1"></span><span class="String">'</span><span class="String">normalize</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_85">  85</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_85"></span><span class="anchor" id="line-85-1"></span><span class="String">'</span><span class="String">ownerDocument</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_86">  86</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_86"></span><span class="anchor" id="line-86-1"></span><span class="String">'</span><span class="String">parentNode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_87">  87</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_87"></span><span class="anchor" id="line-87-1"></span><span class="String">'</span><span class="String">prefix</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_88">  88</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_88"></span><span class="anchor" id="line-88-1"></span><span class="String">'</span><span class="String">previousSibling</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_89">  89</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_89"></span><span class="anchor" id="line-89-1"></span><span class="String">'</span><span class="String">removeChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_90">  90</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_90"></span><span class="anchor" id="line-90-1"></span><span class="String">'</span><span class="String">renameNode</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_91">  91</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_91"></span><span class="anchor" id="line-91-1"></span><span class="String">'</span><span class="String">replaceChild</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_92">  92</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_92"></span><span class="anchor" id="line-92-1"></span><span class="String">'</span><span class="String">saveXML</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_93">  93</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_93"></span><span class="anchor" id="line-93-1"></span><span class="String">'</span><span class="String">setUserData</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_94">  94</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_94"></span><span class="anchor" id="line-94-1"></span><span class="String">'</span><span class="String">standalone</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_95">  95</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_95"></span><span class="anchor" id="line-95-1"></span><span class="String">'</span><span class="String">strictErrorChecking</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_96">  96</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_96"></span><span class="anchor" id="line-96-1"></span><span class="String">'</span><span class="String">toprettyxml</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_97">  97</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_97"></span><span class="anchor" id="line-97-1"></span><span class="String">'</span><span class="String">toxml</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_98">  98</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_98"></span><span class="anchor" id="line-98-1"></span><span class="String">'</span><span class="String">unlink</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_99">  99</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_99"></span><span class="anchor" id="line-99-1"></span><span class="String">'</span><span class="String">version</span><span class="String">'</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_100"> 100</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_100"></span><span class="anchor" id="line-100-1"></span><span class="String">'</span><span class="String">writexml</span><span class="String">'</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-1a18e6930a26a1a7124fec14312e578a65f0f769_101"> 101</a> </span><span class="LineAnchor" id="CA-1a18e6930a26a1a7124fec14312e578a65f0f769_101"></span><span class="anchor" id="line-101-1"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-322"></span><p class="line874">There is a lot of interesting stuff here . <span class="anchor" id="line-323"></span><span class="anchor" id="line-324"></span></p><p class="line874">There are functions for manipulating the document, like  appendChild() and createTextNode(). There are lookup functions like getElementById(),  and getElementByTagName(). We will be using these a lot more later. <span class="anchor" id="line-325"></span><span class="anchor" id="line-326"></span></p><p class="line874">An intersting function is Toprettyxml(). If we take our  document object, x, and call "toprettyxml" on it we get: <span class="anchor" id="line-327"></span><span class="anchor" id="line-328"></span></p><p class="line867"><span class="anchor" id="line-329"></span><span class="anchor" id="line-330"></span><span class="anchor" id="line-331"></span><span class="anchor" id="line-332"></span><span class="anchor" id="line-1-25"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-ead32c33ed555400257a50a4a03cf860afb82b27\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-ead32c33ed555400257a50a4a03cf860afb82b27', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-ead32c33ed555400257a50a4a03cf860afb82b27" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-ead32c33ed555400257a50a4a03cf860afb82b27_1">   1</a> </span><span class="LineAnchor" id="CA-ead32c33ed555400257a50a4a03cf860afb82b27_1"></span><span class="anchor" id="line-1-26"></span>&gt;&gt;&gt; <span class="ID">x</span>.<span class="ID">toprettyxml</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-ead32c33ed555400257a50a4a03cf860afb82b27_2">   2</a> </span><span class="LineAnchor" id="CA-ead32c33ed555400257a50a4a03cf860afb82b27_2"></span><span class="anchor" id="line-2-12"></span><span class="String">u'</span><span class="String">&lt;?xml version=</span><span class="String">"</span><span class="String">1.0</span><span class="String">"</span><span class="String"> ?&gt;</span><span class="SPChar">\n</span><span class="String">&lt;mytag&gt;</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="String">contents!</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="String">&lt;children&gt;</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="String">&lt;item&gt;</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="String">1</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="String">&lt;/item&gt;</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="String">&lt;item&gt;</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="String">2</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="SPChar">\t</span><span class="String">&lt;/item&gt;</span><span class="SPChar">\n</span><span class="SPChar">\t</span><span class="String">&lt;/children&gt;</span><span class="SPChar">\n</span><span class="String">&lt;/mytag&gt;</span><span class="SPChar">\n</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ead32c33ed555400257a50a4a03cf860afb82b27_3">   3</a> </span><span class="LineAnchor" id="CA-ead32c33ed555400257a50a4a03cf860afb82b27_3"></span><span class="anchor" id="line-3-11"></span>&gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-333"></span><p class="line874">This really doesn't look very pretty at all, but this is  actually the Python string with the new lines in it, and if we print it we get: <span class="anchor" id="line-334"></span><span class="anchor" id="line-335"></span></p><p class="line867"><span class="anchor" id="line-336"></span><span class="anchor" id="line-337"></span><span class="anchor" id="line-338"></span><span class="anchor" id="line-339"></span><span class="anchor" id="line-340"></span><span class="anchor" id="line-341"></span><span class="anchor" id="line-342"></span><span class="anchor" id="line-343"></span><span class="anchor" id="line-344"></span><span class="anchor" id="line-345"></span><span class="anchor" id="line-346"></span><span class="anchor" id="line-347"></span><span class="anchor" id="line-348"></span><span class="anchor" id="line-349"></span><span class="anchor" id="line-350"></span><span class="anchor" id="line-1-27"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b958f2a552c9954b771fe278824e959db905dd7a\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-b958f2a552c9954b771fe278824e959db905dd7a', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-b958f2a552c9954b771fe278824e959db905dd7a" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_1">   1</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_1"></span><span class="anchor" id="line-1-28"></span>  &gt;&gt;&gt; <span class="ResWord">print</span> <span class="ID">x</span>.<span class="ID">toprettyxml</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_2">   2</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_2"></span><span class="anchor" id="line-2-13"></span>  &lt;?<span class="ID">xml</span> <span class="ID">version</span>=<span class="String">"</span><span class="String">1.0</span><span class="String">"</span> ?&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_3">   3</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_3"></span><span class="anchor" id="line-3-12"></span>    &lt;<span class="ID">mytag</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_4">   4</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_4"></span><span class="anchor" id="line-4-8"></span>      <span class="ID">contents</span>!</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_5">   5</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_5"></span><span class="anchor" id="line-5-7"></span>      &lt;<span class="ID">children</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_6">   6</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_6"></span><span class="anchor" id="line-6-6"></span>        &lt;<span class="ID">item</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_7">   7</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_7"></span><span class="anchor" id="line-7-5"></span>          <span class="Number">1</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_8">   8</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_8"></span><span class="anchor" id="line-8-5"></span>        &lt;/<span class="ID">item</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_9">   9</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_9"></span><span class="anchor" id="line-9-5"></span>        &lt;<span class="ID">item</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_10">  10</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_10"></span><span class="anchor" id="line-10-4"></span>          <span class="Number">2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_11">  11</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_11"></span><span class="anchor" id="line-11-4"></span>        &lt;/<span class="ID">item</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_12">  12</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_12"></span><span class="anchor" id="line-12-4"></span>      &lt;/<span class="ID">children</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_13">  13</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_13"></span><span class="anchor" id="line-13-3"></span>    &lt;/<span class="ID">mytag</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-b958f2a552c9954b771fe278824e959db905dd7a_14">  14</a> </span><span class="LineAnchor" id="CA-b958f2a552c9954b771fe278824e959db905dd7a_14"></span><span class="anchor" id="line-14-3"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-351"></span><p class="line874">Which is much more readable. Here is the xml that we entered,  and we can see the structure of the document nicely indented for us. This is  really a handy little function. When you download XML from somewhere it can be  much easier to see the structure of it if you use prettyxml(). <span class="anchor" id="line-352"></span><span class="anchor" id="line-353"></span></p><p class="line874">Another function I'd like to show you here is getElementByTagName().  If we run this on our document object, x, and give it ‚Äúmytag‚Äù it will return  one DOM element: <span class="anchor" id="line-354"></span><span class="anchor" id="line-355"></span></p><p class="line867"><span class="anchor" id="line-356"></span><span class="anchor" id="line-357"></span><span class="anchor" id="line-358"></span><span class="anchor" id="line-359"></span><span class="anchor" id="line-1-29"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-564ce393e3485e12db566737a44e223387dd7844\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-564ce393e3485e12db566737a44e223387dd7844', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-564ce393e3485e12db566737a44e223387dd7844" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-564ce393e3485e12db566737a44e223387dd7844_1">   1</a> </span><span class="LineAnchor" id="CA-564ce393e3485e12db566737a44e223387dd7844_1"></span><span class="anchor" id="line-1-30"></span>  &gt;&gt;&gt;  <span class="ID">x</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">mytag</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-564ce393e3485e12db566737a44e223387dd7844_2">   2</a> </span><span class="LineAnchor" id="CA-564ce393e3485e12db566737a44e223387dd7844_2"></span><span class="anchor" id="line-2-14"></span>  [&lt;<span class="ID">DOM</span> <span class="ID">Element</span>: <span class="ID">mytag</span> <span class="ID">at</span>  <span class="Number">0x27b3b98</span>&gt;]</span>
<span class="line"><span class="LineNumber"><a href="#CA-564ce393e3485e12db566737a44e223387dd7844_3">   3</a> </span><span class="LineAnchor" id="CA-564ce393e3485e12db566737a44e223387dd7844_3"></span><span class="anchor" id="line-3-13"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-360"></span><p class="line874">If we run it for ‚Äúitem‚Äù, we actually get two DOM elements: <span class="anchor" id="line-361"></span><span class="anchor" id="line-362"></span></p><p class="line867"><span class="anchor" id="line-363"></span><span class="anchor" id="line-364"></span><span class="anchor" id="line-365"></span><span class="anchor" id="line-366"></span><span class="anchor" id="line-1-31"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc_1">   1</a> </span><span class="LineAnchor" id="CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc_1"></span><span class="anchor" id="line-1-32"></span>  &gt;&gt;&gt; <span class="ID">x</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">item</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc_2">   2</a> </span><span class="LineAnchor" id="CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc_2"></span><span class="anchor" id="line-2-15"></span>  [&lt;<span class="ID">DOM</span> <span class="ID">Element</span>: <span class="ID">item</span> <span class="ID">at</span>  <span class="Number">0x269a558</span>&gt;, &lt;<span class="ID">DOM</span> <span class="ID">Element</span>: <span class="ID">item</span> <span class="ID">at</span> <span class="Number">0x269a4e0</span>&gt;]</span>
<span class="line"><span class="LineNumber"><a href="#CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc_3">   3</a> </span><span class="LineAnchor" id="CA-3ab418e20e87c0a800a788b7819e3b38e66ea3dc_3"></span><span class="anchor" id="line-3-14"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-367"></span><p class="line874">If we look at the children of the first item, we can access  the node value attribute and see that it is 1: <span class="anchor" id="line-368"></span><span class="anchor" id="line-369"></span></p><p class="line867"><span class="anchor" id="line-370"></span><span class="anchor" id="line-371"></span><span class="anchor" id="line-372"></span><span class="anchor" id="line-373"></span><span class="anchor" id="line-1-33"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-caa47ee803994cf915865cf57d52a94c08b7e930\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-caa47ee803994cf915865cf57d52a94c08b7e930', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-caa47ee803994cf915865cf57d52a94c08b7e930" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-caa47ee803994cf915865cf57d52a94c08b7e930_1">   1</a> </span><span class="LineAnchor" id="CA-caa47ee803994cf915865cf57d52a94c08b7e930_1"></span><span class="anchor" id="line-1-34"></span>  &gt;&gt;&gt;  <span class="ID">x</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">item</span><span class="String">"</span>)[<span class="Number">0</span>].<span class="ID">childNodes</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-caa47ee803994cf915865cf57d52a94c08b7e930_2">   2</a> </span><span class="LineAnchor" id="CA-caa47ee803994cf915865cf57d52a94c08b7e930_2"></span><span class="anchor" id="line-2-16"></span>  [&lt;<span class="ID">DOM</span> <span class="ID">Text</span> <span class="ID">node</span>  <span class="String">"</span><span class="String">u</span><span class="String">'</span><span class="String">1</span><span class="String">'</span><span class="String">"</span>&gt;]</span>
<span class="line"><span class="LineNumber"><a href="#CA-caa47ee803994cf915865cf57d52a94c08b7e930_3">   3</a> </span><span class="LineAnchor" id="CA-caa47ee803994cf915865cf57d52a94c08b7e930_3"></span><span class="anchor" id="line-3-15"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-374"></span><p class="line874">In effect, what we have just done was to say ‚Äúget me all of  the elements that are called item‚Äù. We got two results. On the first of these  we said ‚Äúget me its first child‚Äù, which has the value ‚Äú1‚Äù. Now, this isn't  strictly a node, but in minidom, it is represented as a text node. <span class="anchor" id="line-375"></span><span class="anchor" id="line-376"></span></p><p class="line874">Different libraries may handle contents differently, but in  minidom this is how we get it. We can actually get the value of that text node: <span class="anchor" id="line-377"></span><span class="anchor" id="line-378"></span></p><p class="line867"><span class="anchor" id="line-379"></span><span class="anchor" id="line-380"></span><span class="anchor" id="line-381"></span><span class="anchor" id="line-382"></span><span class="anchor" id="line-1-35"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-ee31a9b787075123863ec5457df9ea128e4537d3\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-ee31a9b787075123863ec5457df9ea128e4537d3', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-ee31a9b787075123863ec5457df9ea128e4537d3" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-ee31a9b787075123863ec5457df9ea128e4537d3_1">   1</a> </span><span class="LineAnchor" id="CA-ee31a9b787075123863ec5457df9ea128e4537d3_1"></span><span class="anchor" id="line-1-36"></span>  &gt;&gt;&gt;  <span class="ID">x</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">item</span><span class="String">"</span>)[<span class="Number">0</span>].<span class="ID">childNodes</span> [<span class="Number">0</span>].<span class="ID">nodeValue</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ee31a9b787075123863ec5457df9ea128e4537d3_2">   2</a> </span><span class="LineAnchor" id="CA-ee31a9b787075123863ec5457df9ea128e4537d3_2"></span><span class="anchor" id="line-2-17"></span>  <span class="String">u'</span><span class="String">1</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ee31a9b787075123863ec5457df9ea128e4537d3_3">   3</a> </span><span class="LineAnchor" id="CA-ee31a9b787075123863ec5457df9ea128e4537d3_3"></span><span class="anchor" id="line-3-16"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-383"></span><p class="line874">The value is the number 1. The ‚Äúu‚Äù means a unicode string  since minidom assumes that we entered a unicode string. <span class="anchor" id="line-384"></span><span class="anchor" id="line-385"></span></p><p class="line867">
</p><h2 id="RSS">RSS</h2>
<span class="anchor" id="line-386"></span><p class="line862">You've probably at least heard of <a class="http" href="http://en.wikipedia.org/wiki/RSS">RSS</a>. It's a way to read a website  that has daily content like a blog or a news site. You may even have a  specialised reader for reading the content. <span class="anchor" id="line-387"></span><span class="anchor" id="line-388"></span></p><p class="line862">RSS originally stood for "<strong>RDF Site Summary</strong>". <a class="http" href="http://en.wikipedia.org/wiki/Resource_Description_Framework">RDF</a> stands for "<strong>Resource Description Framework</strong>".  RDF is an XML format which can be used to describe just about anything. It's  basically a way to represent knowledge in XML. <span class="anchor" id="line-389"></span><span class="anchor" id="line-390"></span></p><p class="line862">More commonly these days, RSS is dubbed "<strong>Really Simple Syndication</strong>". This  is more the context in which we're going to be using it. RDF was originally  conceived as a tool to organize the world's information problems, and RSS uses  RDF, but in essence, it's just a list of content in XML. <span class="anchor" id="line-391"></span><span class="anchor" id="line-392"></span></p><p class="line874">Let‚Äôs look at some examples of RSS in the wild. <span class="anchor" id="line-393"></span><span class="anchor" id="line-394"></span></p><p class="line862">The New York Times homepage has a link for RSS at the bottom  of this page. This will take us to a page of links for various NYT news sites.  If we then click on the link for <strong>NYTimes.com  Home Page (Global Edition)</strong> we see that the URL includes <a class="nonexistent" href="/GlobalHome">GlobalHome</a>.xml: <span class="anchor" id="line-395"></span><span class="anchor" id="line-396"></span></p><p class="line867"><a class="http" href="http://www.nytimes.com/services/xml/rss/nyt/GlobalHome.xml">http://www.nytimes.com/services/xml/rss/nyt/GlobalHome.xml</a> <span class="anchor" id="line-397"></span><span class="anchor" id="line-398"></span></p><p class="line874">We have received an XML document. <span class="anchor" id="line-399"></span><span class="anchor" id="line-400"></span></p><p class="line874">Most browsers do display XML in a nice way. Although this  particular document is an XML document, it is actually an RSS feed. What this  means is that there is a particular ‚Äònamespace‚Äô (something like a tag-space)  for the items in the list that make up the feed. <span class="anchor" id="line-401"></span><span class="anchor" id="line-402"></span></p><p class="line862">Just like an HTML document opens with an HTML tag and has a header  and a body with specific tags, an RSS document also has very specific tags. In  XML, you can use the header area to describe the namespace that you are going  to use. This is the header from <a class="nonexistent" href="/GlobalHome">GlobalHome</a>.xml: <span class="anchor" id="line-403"></span><span class="anchor" id="line-404"></span></p><p class="line867"><span class="anchor" id="line-405"></span><span class="anchor" id="line-406"></span><span class="anchor" id="line-407"></span><span class="anchor" id="line-1-37"></span></p><div class="highlight xml"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-671157a9282a2a58c0a492139efb2af271835c01\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-671157a9282a2a58c0a492139efb2af271835c01', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-671157a9282a2a58c0a492139efb2af271835c01" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-671157a9282a2a58c0a492139efb2af271835c01_1">   1</a> </span><span class="LineAnchor" id="CA-671157a9282a2a58c0a492139efb2af271835c01_1"></span><span class="anchor" id="line-1-38"></span><span class="Preprc">&lt;?xml version="1.0"?&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-671157a9282a2a58c0a492139efb2af271835c01_2">   2</a> </span><span class="LineAnchor" id="CA-671157a9282a2a58c0a492139efb2af271835c01_2"></span><span class="anchor" id="line-2-18"></span><span class="ID">&lt;rss</span> <span class="ID">xmlns:dc=</span><span class="String">"http://purl.org/dc/elements/1.1/"</span> <span class="ID">xmlns:media=</span><span class="String">"http://search.yahoo.com/mrss/"</span> <span class="ID">xmlns:atom=</span><span class="String">"http://www.w3.org/2005/Atom"</span> <span class="ID">xmlns:nyt=</span><span class="String">"http://www.nytimes.com/namespaces/rss/2.0"</span> <span class="ID">version=</span><span class="String">"2.0"</span><span class="ID">&gt;</span></span>
</pre></div></div><span class="anchor" id="line-408"></span><p class="line874">The page is using the atom name  space and the RSS 2.0 name space. This tells the  parser that descriptions of the tags can be downloaded from these URLs, and so  what tags to expect. <span class="anchor" id="line-409"></span><span class="anchor" id="line-410"></span></p><p class="line874">If you look at the XML file for this page, you‚Äôll see that  there is some initial header information followed by a list of items which are  the stories in the feed. Each item has a title and a link, a brief description  and so forth. Exactly the things that are needed by an RSS reader or similar  program to download the contents of The New York Times without having to parse  all the HTML. <span class="anchor" id="line-411"></span><span class="anchor" id="line-412"></span></p><p class="line867">
</p><h3 id="Quiz:_Parsing_RSS">Quiz: Parsing RSS</h3>
<span class="anchor" id="line-413"></span><p class="line862">How many &lt;item&gt; elements are in the page listing at the  New York Times Global Edition RRS feed: <span class="anchor" id="line-414"></span><span class="anchor" id="line-415"></span></p><p class="line867"><a class="http" href="http://www.nytimes.com/services/xml/rss/nyt/GlobalHome.xml">http://www.nytimes.com/services/xml/rss/nyt/GlobalHome.xml</a> <span class="anchor" id="line-416"></span><span class="anchor" id="line-417"></span></p><p class="line874">Use urllib and minidom in Python to download this page.  Remember the function getElementsByTagName( ) will be particularly useful to  you on the minidom object. <span class="anchor" id="line-418"></span><span class="anchor" id="line-419"></span></p><p class="line867">
</p><h2 id="JSON">JSON</h2>
<span class="anchor" id="line-420"></span><p class="line862">The next thing we need to introduce is <a class="http" href="http://en.wikipedia.org/wiki/JSON">JSON</a>. JSON is another computer and  human readable way to exchange data in a consistent format. JSON stands for ‚Äú<a href="/JavaScript">JavaScript</a>  Object Notation‚Äù, and JSON is, in fact, valid <a href="/JavaScript">JavaScript</a> code. <span class="anchor" id="line-421"></span><span class="anchor" id="line-422"></span></p><ul><li style="list-style-type:none">Sticking with our earlier travel search example, JSON may look  something like this: <span class="anchor" id="line-423"></span><span class="anchor" id="line-424"></span></li></ul><p class="line867"><span class="anchor" id="line-425"></span><span class="anchor" id="line-426"></span><span class="anchor" id="line-427"></span><span class="anchor" id="line-428"></span><span class="anchor" id="line-429"></span><span class="anchor" id="line-430"></span><span class="anchor" id="line-1-39"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_1">   1</a> </span><span class="LineAnchor" id="CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_1"></span><span class="anchor" id="line-1-40"></span>  {<span class="String">"</span><span class="String">itineraries</span><span class="String">"</span>:  [{<span class="String">"</span><span class="String">from</span><span class="String">"</span>:<span class="String">"</span><span class="String">SCO</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_2">   2</a> </span><span class="LineAnchor" id="CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_2"></span><span class="anchor" id="line-2-19"></span>  <span class="String">"</span><span class="String">to</span><span class="String">"</span>: <span class="String">"</span><span class="String">IAD</span><span class="String">"</span>},</span>
<span class="line"><span class="LineNumber"><a href="#CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_3">   3</a> </span><span class="LineAnchor" id="CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_3"></span><span class="anchor" id="line-3-17"></span>  {<span class="String">"</span><span class="String">from</span><span class="String">"</span>: <span class="String">"</span><span class="String">IAD</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_4">   4</a> </span><span class="LineAnchor" id="CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_4"></span><span class="anchor" id="line-4-9"></span>  <span class="String">"</span><span class="String">to</span><span class="String">"</span>: <span class="String">"</span><span class="String">SEA</span><span class="String">"</span>}]</span>
<span class="line"><span class="LineNumber"><a href="#CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_5">   5</a> </span><span class="LineAnchor" id="CA-fe152d3f5df86aa5c8e69b283ecc2532efb7c4e2_5"></span><span class="anchor" id="line-5-8"></span>  }</span>
</pre></div></div><span class="anchor" id="line-431"></span><p class="line862">This dictionary structure actually looks a lot like Python  code. This is because Python and <a href="/JavaScript">JavaScript</a> have very similar syntax for  dictionaries and lists. <span class="anchor" id="line-432"></span><span class="anchor" id="line-433"></span></p><p class="line874">This dictionary might have a key called  "itineraries" whose value is a list of other dictionaries. Here we  have a dictionary for each routing or leg of the journey, denoted by the  curly-braces, which has a key for "from" and a key for "to",  each of which has a value. <span class="anchor" id="line-434"></span><span class="anchor" id="line-435"></span></p><p class="line874">JSON is really useful if you want to express object of these  types. Anything you can express in XML, you can also express in JSON. JSON is a  little less verbose, because you don't need all the opening and closing tags. <span class="anchor" id="line-436"></span><span class="anchor" id="line-437"></span></p><p class="line874">The main data structures in JSON are dictionaries (or ‚Äúmappings‚Äù),  which match a key to a value, or multiple keys to multiple values, and lists. <span class="anchor" id="line-438"></span><span class="anchor" id="line-439"></span></p><p class="line874">Dictionaries are just a list of key-value pairs enclosed by  curly-braces. Just as in Python. Lists use square-brackets, just like Python  does, and separate the values in the list with commas. <span class="anchor" id="line-440"></span></p><div><table><tbody><tr>  <td style="vertical-align:top; width: 284px"><p class="line891"><br>
       <strong>Dictionaries</strong> </p></td>
  <td style="vertical-align:top; width: 284px"><p class="line891"><strong>Lists</strong> </p></td>
</tr>
<tr>  <td style="vertical-align:top; width: 284px"><span class="anchor" id="line-441"></span><p class="line862">             </p></td>
  <td style="vertical-align:top; width: 284px"><p class="line862">             </p></td>
</tr>
<tr>  <td style="vertical-align:top; width: 284px"><span class="anchor" id="line-442"></span><p class="line862">{‚Äúkey‚Äù: value} </p></td>
  <td style="vertical-align:top; width: 284px"><p class="line862">[1, 2, ‚Äúthree‚Äù,    [True, 5.6] </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-443"></span><span class="anchor" id="line-444"></span><span class="anchor" id="line-445"></span><span class="anchor" id="line-446"></span><span class="anchor" id="line-447"></span><p class="line874">The data types available in JSON are: integer, string,  boolean, and float. We can, of course, also have "null," as in the  empty list [] for example. <span class="anchor" id="line-448"></span><span class="anchor" id="line-449"></span></p><p class="line874">Let‚Äôs look at how to parse JSON in Python. JSON is now  included in Python version 2.6 and later (App Engine currently uses version  2.7). <span class="anchor" id="line-450"></span><span class="anchor" id="line-451"></span></p><p class="line874">We begin by importing JSON and then making a JSON string in  Python, which we will call j: <span class="anchor" id="line-452"></span><span class="anchor" id="line-453"></span></p><p class="line867"><span class="anchor" id="line-454"></span><span class="anchor" id="line-455"></span><span class="anchor" id="line-456"></span><span class="anchor" id="line-1-41"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23_1">   1</a> </span><span class="LineAnchor" id="CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23_1"></span><span class="anchor" id="line-1-42"></span>  &gt;&gt;&gt; <span class="ResWord">import</span> <span class="ID">json</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23_2">   2</a> </span><span class="LineAnchor" id="CA-2fbf1c134d6de885a044b02a2a023a8fccedbb23_2"></span><span class="anchor" id="line-2-20"></span>  &gt;&gt;&gt; <span class="ID">j</span> =  <span class="String">'</span><span class="String">{</span><span class="String">"</span><span class="String">one</span><span class="String">"</span><span class="String">: 1, </span><span class="String">"</span><span class="String">numbers</span><span class="String">"</span><span class="String">: [1,2,3.5]}</span><span class="String">'</span></span>
</pre></div></div><span class="anchor" id="line-457"></span><p class="line874">Our JSON string is a dictionary with two keys, "one"  and "number". The value of "one" is 1, and the value of  "numbers" is the list [1, 2 , 3.5]. <span class="anchor" id="line-458"></span><span class="anchor" id="line-459"></span></p><p class="line874">JSON includes the function loads(), which stands for ‚Äúload  string‚Äù which parses the string: <span class="anchor" id="line-460"></span><span class="anchor" id="line-461"></span></p><p class="line867"><span class="anchor" id="line-462"></span><span class="anchor" id="line-463"></span><span class="anchor" id="line-464"></span><span class="anchor" id="line-1-43"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a_1">   1</a> </span><span class="LineAnchor" id="CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a_1"></span><span class="anchor" id="line-1-44"></span>  &gt;&gt;&gt; <span class="ID">json</span>.<span class="ID">loads</span>(<span class="ID">j</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a_2">   2</a> </span><span class="LineAnchor" id="CA-4962efc0cecef564e59bed3e9c861dd5e7804d9a_2"></span><span class="anchor" id="line-2-21"></span>  {<span class="String">u'</span><span class="String">numbers</span><span class="String">'</span>: [<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">3.5</span>], <span class="String">u'</span><span class="String">one</span><span class="String">'</span>:  <span class="Number">1</span>}</span>
</pre></div></div><span class="anchor" id="line-465"></span><p class="line874">This has returned a Python dictionary with the same keys,  ‚Äúnumbers‚Äù and ‚Äúone‚Äù and the same values, 1 and [1, 2, 3.5]. The order doesn‚Äôt  matter in a Python dictionary. <span class="anchor" id="line-466"></span><span class="anchor" id="line-467"></span></p><p class="line874">f we store this as a variable d, we can then manipulate it.  We can look at just d['numbers'] to see our list: <span class="anchor" id="line-468"></span><span class="anchor" id="line-469"></span></p><p class="line867"><span class="anchor" id="line-470"></span><span class="anchor" id="line-471"></span><span class="anchor" id="line-472"></span><span class="anchor" id="line-473"></span><span class="anchor" id="line-474"></span><span class="anchor" id="line-475"></span><span class="anchor" id="line-476"></span><span class="anchor" id="line-477"></span><span class="anchor" id="line-1-45"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_1">   1</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_1"></span><span class="anchor" id="line-1-46"></span>  &gt;&gt;&gt; <span class="ID">d</span> = <span class="ID">json</span>.<span class="ID">loads</span>(<span class="ID">j</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_2">   2</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_2"></span><span class="anchor" id="line-2-22"></span>  &gt;&gt;&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_3">   3</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_3"></span><span class="anchor" id="line-3-18"></span>  &gt;&gt;&gt; <span class="ID">d</span>[<span class="String">'</span><span class="String">numbers</span><span class="String">'</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_4">   4</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_4"></span><span class="anchor" id="line-4-10"></span>  [<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">3.5</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_5">   5</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_5"></span><span class="anchor" id="line-5-9"></span>  <span class="ID">We</span> <span class="ID">can</span> <span class="ID">look</span> <span class="ID">at</span> <span class="ID">d</span>[<span class="String">'</span><span class="String">one</span><span class="String">'</span>], <span class="ResWord">and</span> <span class="ID">we</span>‚Äô<span class="ID">ll</span> <span class="ID">see</span> <span class="ID">our</span> <span class="ID">number</span> <span class="Number">1</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_6">   6</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_6"></span><span class="anchor" id="line-6-7"></span>  &gt;&gt;&gt; <span class="ID">d</span>[<span class="String">'</span><span class="String">one</span><span class="String">'</span>]</span>
<span class="line"><span class="LineNumber"><a href="#CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_7">   7</a> </span><span class="LineAnchor" id="CA-e65d641dd86aa479bdcd2cbdbb704fe11f47139a_7"></span><span class="anchor" id="line-7-6"></span>  <span class="Number">1</span></span>
</pre></div></div><span class="anchor" id="line-478"></span><p class="line874">In fact, because JSON looks just like Python, we could even  eval(j): <span class="anchor" id="line-479"></span><span class="anchor" id="line-480"></span></p><p class="line867"><span class="anchor" id="line-481"></span><span class="anchor" id="line-482"></span><span class="anchor" id="line-483"></span><span class="anchor" id="line-1-47"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed_1">   1</a> </span><span class="LineAnchor" id="CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed_1"></span><span class="anchor" id="line-1-48"></span>  &gt;&gt;&gt; <span class="ResWord">eval</span>(<span class="ID">j</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed_2">   2</a> </span><span class="LineAnchor" id="CA-f1a4f34a34621d505515a20212b792ec3ecdf9ed_2"></span><span class="anchor" id="line-2-23"></span>  {<span class="String">'</span><span class="String">numbers</span><span class="String">'</span>: [<span class="Number">1</span>, <span class="Number">2</span>, <span class="Number">3.5</span>], <span class="String">'</span><span class="String">one</span><span class="String">'</span>:  <span class="Number">1</span>}</span>
</pre></div></div><span class="anchor" id="line-484"></span><p class="line862">What eval() does is to treats the argument as Python code as  if it had just been typed at the prompt. Now, although that's a pretty neat  thing you can do, <strong>you should never, ever  do it</strong>. This is because, in addition to having JSON in here, somebody could  actually have malicious code that might do something to your computer. <strong>Never use eval() for parsing JSON.</strong> <span class="anchor" id="line-485"></span><span class="anchor" id="line-486"></span></p><p class="line867"><strong><br>
 </strong> <span class="anchor" id="line-487"></span><span class="anchor" id="line-488"></span></p><p class="line867">
</p><h3 id="Quiz:_Parsing_JSON">Quiz: Parsing JSON</h3>
<span class="anchor" id="line-489"></span><p class="line874">reddit_front is a JSON string of reddit's front page. Inside  it is a list of links, each of which has an "ups" attribute. From  this dataset, what is the total number of ups of all the links? <span class="anchor" id="line-490"></span><span class="anchor" id="line-491"></span></p><p class="line874">Implement the function total_ups(), and make it return the  total number of ups. This is going to require some experimental searching  through the reddit_front JSON, which is a fairly typical problem when dealing  with APIs, RSS, or JSON. <span class="anchor" id="line-492"></span><span class="anchor" id="line-493"></span></p><p class="line874">You'll need to load the json using the json.loads method,  after which you should be able to search through the json similarly to a  dictionary or list. <span class="anchor" id="line-494"></span><span class="anchor" id="line-495"></span></p><p class="line874">Note that you will need to access parts of the JSON as a  dictionary, and others as a list. <span class="anchor" id="line-496"></span><span class="anchor" id="line-497"></span></p><p class="line867">
</p><h3 id="APIs">APIs</h3>
<span class="anchor" id="line-498"></span><p class="line874">We can access any page on Reddit in JSON or in XML just by  changing the extension. The required extensions are simply .json or .xml  respectively. <span class="anchor" id="line-499"></span><span class="anchor" id="line-500"></span></p><p class="line874">A lot of web-pages now have this feature allowing you to get  their content in different formats. A good example of this is Twitter. <span class="anchor" id="line-501"></span><span class="anchor" id="line-502"></span></p><p class="line874">If we do a search for Udacity on Twitter, we can see all the  tweets about Udacity. If we want this listing in JSON, we can just go to: <span class="anchor" id="line-503"></span><span class="anchor" id="line-504"></span></p><p class="line874">search.twitter.com/search.JSONq=Udacity <span class="anchor" id="line-505"></span><span class="anchor" id="line-506"></span></p><p class="line874">The result is the JSON listing of the same search result that  we were just looking at on Twitter. <span class="anchor" id="line-507"></span><span class="anchor" id="line-508"></span></p><p class="line874">If you're writing web software and you want to manipulate another  website or just get data from another website, it is usually not very difficult  to find their APIs. We found this API by just googling ‚ÄúTwitter API‚Äù, and the  documentation for this came up. There's a whole page about Twitter's search  API: <span class="anchor" id="line-509"></span><span class="anchor" id="line-510"></span></p><p class="line867"><a class="https" href="https://dev.twitter.com/docs/api/1/get/search">https://dev.twitter.com/docs/api/1/get/search</a> <span class="anchor" id="line-511"></span><span class="anchor" id="line-512"></span></p><p class="line874">If you are building websites that have data, such as a blog,  for example, designing your site so that it supports RSS, an XML representation  of its content and a JSON representation of its content, allows other people to  build software on top of your website that can do cool things. <span class="anchor" id="line-513"></span><span class="anchor" id="line-514"></span></p><p class="line874">Many large websites, including Wikipedia, Twitter, and Reddit  support these types of functionality. Your homework in this class is actually  going to be to add that functionality to the blog that you've been working on. <span class="anchor" id="line-515"></span><span class="anchor" id="line-516"></span></p><p class="line867">
</p><h3 id="JSON_Escaping">JSON Escaping</h3>
<span class="anchor" id="line-517"></span><p class="line874">We saw in unit 2 how we had to escape any HTML content so that  it rendered correctly in the browser. There is a similar issue with JSON. <span class="anchor" id="line-518"></span><span class="anchor" id="line-519"></span></p><p class="line874">Imagine that we have a s little JSON blog with a dictionary  that takes a key ‚Äústory‚Äù and maps it to the string ‚Äúonce upon a time: <span class="anchor" id="line-520"></span><span class="anchor" id="line-521"></span></p><p class="line867"><span class="anchor" id="line-522"></span><span class="anchor" id="line-523"></span><span class="anchor" id="line-1-49"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-0650a4f71b2840d35ee21645aaae71fddb46cfad\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-0650a4f71b2840d35ee21645aaae71fddb46cfad', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-0650a4f71b2840d35ee21645aaae71fddb46cfad" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-0650a4f71b2840d35ee21645aaae71fddb46cfad_1">   1</a> </span><span class="LineAnchor" id="CA-0650a4f71b2840d35ee21645aaae71fddb46cfad_1"></span><span class="anchor" id="line-1-50"></span>  {<span class="String">"</span><span class="String">story</span><span class="String">"</span>: <span class="String">"</span><span class="String">once upon  a time</span><span class="String">"</span>}</span>
</pre></div></div><span class="anchor" id="line-524"></span><p class="line874">This is valid JSON. In this case, the key is surrounded by  double quotes, and the value is also surrounded by double quotes. <span class="anchor" id="line-525"></span><span class="anchor" id="line-526"></span></p><p class="line874">What would happen if the value also happened to include double  quotes? Let‚Äôs say for argument‚Äôs sake that the dictionary was actually: <span class="anchor" id="line-527"></span><span class="anchor" id="line-528"></span></p><p class="line867"><span class="anchor" id="line-529"></span><span class="anchor" id="line-530"></span><span class="anchor" id="line-1-51"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-213448954419848c2f31f040497ce3c57381c9b8\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-213448954419848c2f31f040497ce3c57381c9b8', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-213448954419848c2f31f040497ce3c57381c9b8" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-213448954419848c2f31f040497ce3c57381c9b8_1">   1</a> </span><span class="LineAnchor" id="CA-213448954419848c2f31f040497ce3c57381c9b8_1"></span><span class="anchor" id="line-1-52"></span>  {<span class="String">"</span><span class="String">story</span><span class="String">"</span>: <span class="String">"</span><span class="String">once  u</span><span class="String">"</span><span class="ID">on</span> <span class="ID">a</span> <span class="ID">time</span><span class="String">"</span><span class="String">}</span></span>
</pre></div></div><span class="anchor" id="line-531"></span><p class="line874">This would cause a problem, because this is now invalid JSON.  As far as the JSON parser is concerned, the quote we inserted now ends the string,  and the string is followed by some garbage characters. <span class="anchor" id="line-532"></span><span class="anchor" id="line-533"></span></p><p class="line874">We can get around this problem by escaping the extra double  quote. We can escape the quote in Python by just adding a slash in front for  it: <span class="anchor" id="line-534"></span><span class="anchor" id="line-535"></span></p><p class="line867"><span class="anchor" id="line-536"></span><span class="anchor" id="line-537"></span><span class="anchor" id="line-1-53"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-69a99c8a16f781c5e35924689056609da6f2093c\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-69a99c8a16f781c5e35924689056609da6f2093c', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-69a99c8a16f781c5e35924689056609da6f2093c" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-69a99c8a16f781c5e35924689056609da6f2093c_1">   1</a> </span><span class="LineAnchor" id="CA-69a99c8a16f781c5e35924689056609da6f2093c_1"></span><span class="anchor" id="line-1-54"></span>  {<span class="String">"</span><span class="String">story</span><span class="String">"</span>: <span class="String">"</span><span class="String">once  u</span><span class="SPChar">\"</span><span class="String">on a time</span><span class="String">"</span>}</span>
</pre></div></div><span class="anchor" id="line-538"></span><p class="line874">Now, this escapes the quote in Python, but what this turns  into for the JSON parser is just the string that we had before., i.e. <span class="anchor" id="line-539"></span><span class="anchor" id="line-540"></span></p><p class="line867"><span class="anchor" id="line-541"></span><span class="anchor" id="line-542"></span><span class="anchor" id="line-1-55"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-213448954419848c2f31f040497ce3c57381c9b8-1\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-213448954419848c2f31f040497ce3c57381c9b8-1', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-213448954419848c2f31f040497ce3c57381c9b8-1" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-213448954419848c2f31f040497ce3c57381c9b8-1_1">   1</a> </span><span class="LineAnchor" id="CA-213448954419848c2f31f040497ce3c57381c9b8-1_1"></span><span class="anchor" id="line-1-56"></span>  {<span class="String">"</span><span class="String">story</span><span class="String">"</span>: <span class="String">"</span><span class="String">once  u</span><span class="String">"</span><span class="ID">on</span> <span class="ID">a</span> <span class="ID">time</span><span class="String">"</span><span class="String">}</span></span>
</pre></div></div><span class="anchor" id="line-543"></span><p class="line874">In fact, we need to escape both the quote and the slash by  adding a second slash in order for this to work: <span class="anchor" id="line-544"></span><span class="anchor" id="line-545"></span></p><p class="line867"><span class="anchor" id="line-546"></span><span class="anchor" id="line-547"></span><span class="anchor" id="line-1-57"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-59c838f6b9f618ab0d377b0c6cd2cc418f8d326b\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-59c838f6b9f618ab0d377b0c6cd2cc418f8d326b', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-59c838f6b9f618ab0d377b0c6cd2cc418f8d326b" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-59c838f6b9f618ab0d377b0c6cd2cc418f8d326b_1">   1</a> </span><span class="LineAnchor" id="CA-59c838f6b9f618ab0d377b0c6cd2cc418f8d326b_1"></span><span class="anchor" id="line-1-58"></span>  {<span class="String">"</span><span class="String">story</span><span class="String">"</span>: <span class="String">"</span><span class="String">once  u</span><span class="SPChar">\\</span><span class="String">"</span><span class="ID">on</span> <span class="ID">a</span> <span class="ID">time</span><span class="String">"</span><span class="String">}</span></span>
</pre></div></div><span class="anchor" id="line-548"></span><p class="line874">Basically, the second slash is the Python escape for the first  slash. This tells Python that we're inserting a slash into the string, and yes,  we actually meant to do that. Now, the JSON interpreter will see that slash and  understand that we did mean to include the quote. <span class="anchor" id="line-549"></span><span class="anchor" id="line-550"></span></p><p class="line874">There is another way to achieve the same result in Python  which can be a little simpler. The double slashes can be a little confusing, so  what we do is just put an ‚Äúr‚Äù in front of the string. This indicates that it is  a raw string and tells Python to ignore any escaping we‚Äôre doing here: <span class="anchor" id="line-551"></span><span class="anchor" id="line-552"></span></p><p class="line867"><span class="anchor" id="line-553"></span><span class="anchor" id="line-554"></span><span class="anchor" id="line-1-59"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c44c0a825b51da26db80259338a8e00460c045fb\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-c44c0a825b51da26db80259338a8e00460c045fb', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-c44c0a825b51da26db80259338a8e00460c045fb" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-c44c0a825b51da26db80259338a8e00460c045fb_1">   1</a> </span><span class="LineAnchor" id="CA-c44c0a825b51da26db80259338a8e00460c045fb_1"></span><span class="anchor" id="line-1-60"></span>  <span class="ID">json</span>.<span class="ID">loads</span>(<span class="String">r'</span><span class="String">{</span><span class="String">"</span><span class="String">story</span><span class="String">"</span><span class="String">:  </span><span class="String">"</span><span class="String">once u</span><span class="String">\</span><span class="String">"</span><span class="String">on a time</span><span class="String">"</span><span class="String">}</span><span class="String">'</span>)</span>
</pre></div></div><span class="anchor" id="line-555"></span><p class="line874">The JSON module can now interpret the slash and escape the  additional quote. <span class="anchor" id="line-556"></span><span class="anchor" id="line-557"></span></p><p class="line874">Escaping shouldn‚Äôt be a major issue when we read JSON, because  we assume that the JSON we're going to be reading is valid. If it isn‚Äôt valid,  our JSON module will tell us by throwing an exception when we try to read it. <span class="anchor" id="line-558"></span><span class="anchor" id="line-559"></span></p><p class="line874">The function for writing JSON in Python is called dumps().  This stands for ‚Äúdump-string‚Äù. You can pass a Python object into dumps() and it  will convert that object into JSON for you. Let‚Äôs see that in the Python  interpreter. We will pass a list, [1, 2, 3] into  dumps(): <span class="anchor" id="line-560"></span><span class="anchor" id="line-561"></span></p><p class="line867"><span class="anchor" id="line-562"></span><span class="anchor" id="line-563"></span><span class="anchor" id="line-564"></span><span class="anchor" id="line-565"></span><span class="anchor" id="line-1-61"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-f959be4d62264efd28e8854efe53cf4912710e4d\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-f959be4d62264efd28e8854efe53cf4912710e4d', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-f959be4d62264efd28e8854efe53cf4912710e4d" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-f959be4d62264efd28e8854efe53cf4912710e4d_1">   1</a> </span><span class="LineAnchor" id="CA-f959be4d62264efd28e8854efe53cf4912710e4d_1"></span><span class="anchor" id="line-1-62"></span>  &gt;&gt;&gt; <span class="ID">json</span>.<span class="ID">dumps</span>([<span class="Number">1</span>, <span class="Number">2</span>,  <span class="Number">3</span>])</span>
<span class="line"><span class="LineNumber"><a href="#CA-f959be4d62264efd28e8854efe53cf4912710e4d_2">   2</a> </span><span class="LineAnchor" id="CA-f959be4d62264efd28e8854efe53cf4912710e4d_2"></span><span class="anchor" id="line-2-24"></span>  <span class="String">'</span><span class="String">[1, 2, 3]</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-f959be4d62264efd28e8854efe53cf4912710e4d_3">   3</a> </span><span class="LineAnchor" id="CA-f959be4d62264efd28e8854efe53cf4912710e4d_3"></span><span class="anchor" id="line-3-19"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-566"></span><p class="line874">We didn‚Äôt put quotes around the list because this is the  actual list object we want to convert into JSON. The output is the string, '[1,  2, 3]'. What happens if we try this with a more complicated object? Let‚Äôs try  with the dictionary object we saw earlier, {"one":  1, "two": 2}: <span class="anchor" id="line-567"></span><span class="anchor" id="line-568"></span></p><p class="line867"><span class="anchor" id="line-569"></span><span class="anchor" id="line-570"></span><span class="anchor" id="line-571"></span><span class="anchor" id="line-572"></span><span class="anchor" id="line-1-63"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8_1">   1</a> </span><span class="LineAnchor" id="CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8_1"></span><span class="anchor" id="line-1-64"></span>  &gt;&gt;&gt; <span class="ID">json</span>.<span class="ID">dumps</span>({<span class="String">"</span><span class="String">one</span><span class="String">"</span>:  <span class="Number">1</span>, <span class="String">"</span><span class="String">two</span><span class="String">"</span>: <span class="Number">2</span>})</span>
<span class="line"><span class="LineNumber"><a href="#CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8_2">   2</a> </span><span class="LineAnchor" id="CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8_2"></span><span class="anchor" id="line-2-25"></span>  <span class="String">'</span><span class="String">{</span><span class="String">"</span><span class="String">two</span><span class="String">"</span><span class="String">: 2,  </span><span class="String">"</span><span class="String">one</span><span class="String">"</span><span class="String">: 1}</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8_3">   3</a> </span><span class="LineAnchor" id="CA-1e7bdb6c24e58c187ed55ce73412b1ef6fb8b9a8_3"></span><span class="anchor" id="line-3-20"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-573"></span><p class="line874">Now the order has changed, but then the order isn‚Äôt defined in  dictionaries, and we now have our JSON. Let‚Äôs change the dictionary so that the  second value needs to be escaped, {"one": 1,  "two": 'the man said, "cool!"'}, and pass this into  dumps(): <span class="anchor" id="line-574"></span><span class="anchor" id="line-575"></span></p><p class="line867"><span class="anchor" id="line-576"></span><span class="anchor" id="line-577"></span><span class="anchor" id="line-578"></span><span class="anchor" id="line-579"></span><span class="anchor" id="line-1-65"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35_1">   1</a> </span><span class="LineAnchor" id="CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35_1"></span><span class="anchor" id="line-1-66"></span>  &gt;&gt;&gt;  <span class="ID">json</span>.<span class="ID">dumps</span>({<span class="String">"</span><span class="String">one</span><span class="String">"</span>: <span class="Number">1</span>, <span class="String">"</span><span class="String">two</span><span class="String">"</span>: <span class="String">'</span><span class="String">the man said,  </span><span class="String">"</span><span class="String">cool!</span><span class="String">"</span><span class="String">'</span>})</span>
<span class="line"><span class="LineNumber"><a href="#CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35_2">   2</a> </span><span class="LineAnchor" id="CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35_2"></span><span class="anchor" id="line-2-26"></span>  <span class="String">'</span><span class="String">{</span><span class="String">"</span><span class="String">two</span><span class="String">"</span><span class="String">: </span><span class="String">"</span><span class="String">the man  said, </span><span class="SPChar">\\</span><span class="String">"</span><span class="String">cool!</span><span class="SPChar">\\</span><span class="String">"</span><span class="String">"</span><span class="String">, </span><span class="String">"</span><span class="String">one</span><span class="String">"</span><span class="String">: 1}</span><span class="String">'</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35_3">   3</a> </span><span class="LineAnchor" id="CA-1c6708a5517df873fbd37bc21bb5ef5dc6cf8e35_3"></span><span class="anchor" id="line-3-21"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-580"></span><p class="line874">The JSON library has escaped the extra double-quotes for us,  and has produced a Python sting that is a representation of valid JSON. <span class="anchor" id="line-581"></span><span class="anchor" id="line-582"></span></p><p class="line862">A word of caution: the string produced in the last example is  not, in itself, valid JSON. It is valid Python <em>representing</em> valid JSON. That's why we had those double slashes.  You need to be careful when you are copying and pasting JSON in and out of  Python and make certain that you get the escaping right. <span class="anchor" id="line-583"></span><span class="anchor" id="line-584"></span></p><p class="line874">If we print the last expression in the Python shell we get: <span class="anchor" id="line-585"></span><span class="anchor" id="line-586"></span></p><p class="line867"><span class="anchor" id="line-587"></span><span class="anchor" id="line-588"></span><span class="anchor" id="line-589"></span><span class="anchor" id="line-590"></span><span class="anchor" id="line-1-67"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0_1">   1</a> </span><span class="LineAnchor" id="CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0_1"></span><span class="anchor" id="line-1-68"></span>  &gt;&gt;&gt; <span class="ResWord">print</span>  <span class="ID">json</span>.<span class="ID">dumps</span>({<span class="String">"</span><span class="String">one</span><span class="String">"</span>: <span class="Number">1</span>, <span class="String">"</span><span class="String">two</span><span class="String">"</span>: <span class="String">'</span><span class="String">the man said,  </span><span class="String">"</span><span class="String">cool!</span><span class="String">"</span><span class="String">'</span>})</span>
<span class="line"><span class="LineNumber"><a href="#CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0_2">   2</a> </span><span class="LineAnchor" id="CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0_2"></span><span class="anchor" id="line-2-27"></span>  {<span class="String">"</span><span class="String">two</span><span class="String">"</span>: <span class="String">"</span><span class="String">the man  said, </span><span class="SPChar">\"</span><span class="String">cool!</span><span class="SPChar">\"</span><span class="String">"</span>, <span class="String">"</span><span class="String">one</span><span class="String">"</span>: <span class="Number">1</span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0_3">   3</a> </span><span class="LineAnchor" id="CA-b0f222a9787c9dc7c3bd4834b5fc36b2dd9fc7d0_3"></span><span class="anchor" id="line-3-22"></span>  &gt;&gt;&gt;</span>
</pre></div></div><span class="anchor" id="line-591"></span><p class="line874">The string: {"two":  "the man said, \"cool!\"", "one": 1}, with  the single slashes is the actual valid JSON. <span class="anchor" id="line-592"></span><span class="anchor" id="line-593"></span></p><p class="line862">One other thing to remember is that the main distinction  between a Python object and a JSON representation of a very similar object is  that <strong>JSON has to use double quotes</strong> <strong>to delineate a string</strong>. You can't use  single quotes like can with Python. <span class="anchor" id="line-594"></span><span class="anchor" id="line-595"></span></p><p class="line874">Now, as we‚Äôve seen, JSON maps very nicely to Python data  structures, provided that you're using integers, floats and strings. If you  want to map some of the more complex Python structures to JSON (say you need to  map an object or a date time), the simple JSON dumps() function isn't going to  work. You will have to convert these by hand to simple data structures made up  of dictionaries and lists of integers and strings so that they can be ouput  properly. <span class="anchor" id="line-596"></span><span class="anchor" id="line-597"></span></p><p class="line867">
</p><h3 id="Quiz:_Escaping_JSON_in_Python">Quiz: Escaping JSON in Python</h3>
<span class="anchor" id="line-598"></span><p class="line874">What is the valid JSON for this Python datastructure: <span class="anchor" id="line-599"></span><span class="anchor" id="line-600"></span></p><p class="line867"><span class="anchor" id="line-601"></span><span class="anchor" id="line-602"></span><span class="anchor" id="line-1-69"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c497a7abde6e0d407527aa2610963e531fe6b7dd\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-c497a7abde6e0d407527aa2610963e531fe6b7dd', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-c497a7abde6e0d407527aa2610963e531fe6b7dd" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-c497a7abde6e0d407527aa2610963e531fe6b7dd_1">   1</a> </span><span class="LineAnchor" id="CA-c497a7abde6e0d407527aa2610963e531fe6b7dd_1"></span><span class="anchor" id="line-1-70"></span>  {<span class="String">"</span><span class="String">blah</span><span class="String">"</span>:[<span class="String">"</span><span class="String">one</span><span class="String">"</span>,  <span class="Number">2</span>, <span class="String">'</span><span class="String">th</span><span class="String">"</span><span class="String">r</span><span class="String">"</span><span class="String">ee</span><span class="String">'</span>]}</span>
</pre></div></div><span class="anchor" id="line-603"></span><p class="line874">Note that JSON must use double quotes to enclose strings, it  cannot use single quotes. <span class="anchor" id="line-604"></span><span class="anchor" id="line-605"></span></p><p class="line867">
</p><h2 id="Being_a_Good_Citizen">Being a Good Citizen</h2>
<span class="anchor" id="line-606"></span><p class="line874">Let‚Äôs take a few moments to talk about how to be a good  citizen on the internet. <span class="anchor" id="line-607"></span><span class="anchor" id="line-608"></span></p><p class="line874">When you write programs to access or manipulate data on other  people's websites there are a couple of things you can do that make life easier  for everyone. Firstly, always use a good user-agent. You‚Äôll remember from Unit  1 that user agents are the header that describes what browser you're using, or  what program you're using to access a site. <span class="anchor" id="line-609"></span><span class="anchor" id="line-610"></span></p><p class="line874">If you use urlLib2, you can specify headers in your request. You should set a user agent header that says who you are, what you're name is,  and perhaps a link to your website. This is not only good Internet manners, it  is in your own interests. <span class="anchor" id="line-611"></span><span class="anchor" id="line-612"></span></p><p class="line874">If you're going to be accessing a site relatively heavily or  consistently, perhaps checking for regular updates or something of that sort,  when they see you hitting them with lots of requests they can check your user  agent header to find out who you are, and perhaps why you are accessing their  site. If your requests are hurting their server response times, they can  contact you and ask that you stop or change your access pattern rather than  simply blocking you. <span class="anchor" id="line-613"></span><span class="anchor" id="line-614"></span></p><p class="line874">The second really important thing you should do is to rate-limit  yourself. Let‚Äôs say that you wanted to download all the search results for the  word Udacity on Twitter. You can request them from Twitter and their API will  return 15 at a time. You could set up a loop and send requests to Twitter as  fast as their servers can handle them until you‚Äôve downloaded all the search results. The problem is that this would actually hurt the performance of  Twitter‚Äôs servers. The solution is to slow the speed at which you send  requests. <span class="anchor" id="line-615"></span><span class="anchor" id="line-616"></span></p><p class="line862">In Python, you can import the time library and use the <a class="http" href="http://docs.python.org/library/time.html#time.sleep">sleep()</a> function  to introduce a delay into your code: <span class="anchor" id="line-617"></span><span class="anchor" id="line-618"></span></p><p class="line867"><span class="anchor" id="line-619"></span><span class="anchor" id="line-620"></span><span class="anchor" id="line-621"></span><span class="anchor" id="line-622"></span><span class="anchor" id="line-623"></span><span class="anchor" id="line-1-71"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-ca8801edbba420a0712f79390bfc370bdd06de21\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-ca8801edbba420a0712f79390bfc370bdd06de21', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-ca8801edbba420a0712f79390bfc370bdd06de21" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-ca8801edbba420a0712f79390bfc370bdd06de21_1">   1</a> </span><span class="LineAnchor" id="CA-ca8801edbba420a0712f79390bfc370bdd06de21_1"></span><span class="anchor" id="line-1-72"></span>  <span class="ResWord">import</span> <span class="ID">time</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ca8801edbba420a0712f79390bfc370bdd06de21_2">   2</a> </span><span class="LineAnchor" id="CA-ca8801edbba420a0712f79390bfc370bdd06de21_2"></span><span class="anchor" id="line-2-28"></span>  <span class="ResWord">while</span> <span class="ID">more</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-ca8801edbba420a0712f79390bfc370bdd06de21_3">   3</a> </span><span class="LineAnchor" id="CA-ca8801edbba420a0712f79390bfc370bdd06de21_3"></span><span class="anchor" id="line-3-23"></span>  <span class="ID">get_more</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-ca8801edbba420a0712f79390bfc370bdd06de21_4">   4</a> </span><span class="LineAnchor" id="CA-ca8801edbba420a0712f79390bfc370bdd06de21_4"></span><span class="anchor" id="line-4-11"></span>  <span class="ID">time</span>.<span class="ID">sleep</span>(<span class="Number">1</span>)</span>
</pre></div></div><span class="anchor" id="line-624"></span><p class="line874">This will cause the Python interpreter to sleep for one  second, and so introduces a one second delay.  Now you‚Äôd only be hitting their servers once  per second, which is much more sustainable. If you abuse their service or send  too many requests, they'll probably rate-limit you. Twitter certainly will! <span class="anchor" id="line-625"></span><span class="anchor" id="line-626"></span></p><p class="line867">
</p><h3 id="SOAP">SOAP</h3>
<span class="anchor" id="line-627"></span><p class="line874">There are a number of other common protocols and formats for  communicating across the Internet. Lots of people use these protocols, and if  you need to access servers that use these protocols, then you will have to use  them too. We will list some of these here. <span class="anchor" id="line-628"></span><span class="anchor" id="line-629"></span></p><p class="line862">The first of these is <a class="http" href="http://en.wikipedia.org/wiki/SOAP">SOAP</a>, or Simple Object Access  Protocol This is another protocol for communicating between two machines. It is  based on XML and is very, very complicated. It was invented by Microsoft to  make online communication as complicated as possible. A lot of the data sources  used by Hipmunk communicate via SOAP. <span class="anchor" id="line-630"></span><span class="anchor" id="line-631"></span></p><p class="line862">Next are <a class="http" href="http://code.google.com/p/protobuf/">Protocol  Buffers</a>, which are Google‚Äôs data interchange format. It's similar in  concept to JSON, and is a way of encoding different types of data for sending  it over the wire. <span class="anchor" id="line-632"></span><span class="anchor" id="line-633"></span></p><p class="line867"><a class="http" href="http://en.wikipedia.org/wiki/Apache_Thrift">Apache  Thrift</a> is used by Facebook. This is a ‚Äúsoftware framework, for scalable  cross-language services development‚Äù. <span class="anchor" id="line-634"></span><span class="anchor" id="line-635"></span></p><ul><li style="list-style-type:none">Protocol Buffers and Thrift might be compared more to JSON.  SOAP would compare more to HTTP plus JSON as a complete package of the protocol  and the data type. Implementations of JSON, SOAP, Thrift and Protocol buffers can  be found in almost any language. <span class="anchor" id="line-636"></span><span class="anchor" id="line-637"></span></li></ul><p class="line874">There are also a whole range of plaintext, custom formats. You  can always just build your own plaintext protocol, and data format, but this  isn‚Äôt generally recommended. It's really not that hard to use JSON instead.  Then, when somebody who needs to use the service comes along, they don't have  to figure out how to write all the custom code needed to parse your custom  stuff. <span class="anchor" id="line-638"></span><span class="anchor" id="line-639"></span></p><p class="line874">As a general rule, use something that already exists. It'll  save everybody a lot of time. <span class="anchor" id="line-640"></span><span class="anchor" id="line-641"></span></p><p class="line867">
</p><h3 id="Quiz:_Good_Habits">Quiz: Good Habits</h3>
<span class="anchor" id="line-642"></span><p class="line874">Which of these are good habits to get into? <span class="anchor" id="line-643"></span><span class="anchor" id="line-644"></span></p><ul><li>Sending proper user agents? <span class="anchor" id="line-645"></span></li><li>Writing custom protocols? <span class="anchor" id="line-646"></span></li><li>Using SOAP? <span class="anchor" id="line-647"></span></li><li>Rate-limiting yourself? <span class="anchor" id="line-648"></span></li><li>Using common protocols and data formats? <span class="anchor" id="line-649"></span><span class="anchor" id="line-650"></span></li></ul><p class="line867"><strong><br>
 </strong> <span class="anchor" id="line-651"></span><span class="anchor" id="line-652"></span></p><p class="line867">
</p><h2 id="ASCII_Chan_2">ASCII Chan 2</h2>
<span class="anchor" id="line-653"></span><p class="line874">Let‚Äôs get on and do some actual programming. <span class="anchor" id="line-654"></span><span class="anchor" id="line-655"></span></p><ul><li style="list-style-type:none">We're going to add a new feature to ASCII Chan. What we are  going to do is to add a map to the front page that shows where the most recent  submissions came from. This way, when you come to ASCII Chan you will see what  a global community it is. To achieve this, we have to do a number of things things. <span class="anchor" id="line-656"></span><span class="anchor" id="line-657"></span></li></ul><p class="line862">First, we are going to need to figure out where the user  submitting the art is from. What we need is a service that converts the request  IP address into map coordinates. We are going to use a handy little service  called <a class="http" href="http://www.hostip.info/">hostip.info</a>. Basically, for any IP  address, they will tell you where it's located. They also have an API that has  very simple documentation. The documentation is located <a class="http" href="http://www.hostip.info/use.html">here</a>. <span class="anchor" id="line-658"></span><span class="anchor" id="line-659"></span></p><p class="line874">In essence, if we go to api.hostip.info and include the IP  address in a get parameter: <span class="anchor" id="line-660"></span><span class="anchor" id="line-661"></span></p><p class="line867"><a class="http" href="http://api.hostip.info/?ip=12.215.42.19">http://api.hostip.info/?ip=12.215.42.19</a> <span class="anchor" id="line-662"></span><span class="anchor" id="line-663"></span></p><p class="line874">they'll return some XML with location data: <span class="anchor" id="line-664"></span><span class="anchor" id="line-665"></span></p><p class="line867"><span class="anchor" id="line-666"></span><span class="anchor" id="line-667"></span><span class="anchor" id="line-668"></span><span class="anchor" id="line-669"></span><span class="anchor" id="line-670"></span><span class="anchor" id="line-671"></span><span class="anchor" id="line-672"></span><span class="anchor" id="line-673"></span><span class="anchor" id="line-674"></span><span class="anchor" id="line-675"></span><span class="anchor" id="line-676"></span><span class="anchor" id="line-677"></span><span class="anchor" id="line-678"></span><span class="anchor" id="line-679"></span><span class="anchor" id="line-680"></span><span class="anchor" id="line-681"></span><span class="anchor" id="line-682"></span><span class="anchor" id="line-683"></span><span class="anchor" id="line-684"></span><span class="anchor" id="line-685"></span><span class="anchor" id="line-686"></span><span class="anchor" id="line-687"></span><span class="anchor" id="line-688"></span><span class="anchor" id="line-689"></span><span class="anchor" id="line-690"></span><span class="anchor" id="line-1-73"></span></p><div class="highlight xml"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_1">   1</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_1"></span><span class="anchor" id="line-1-74"></span>  <span class="ID">&lt;HostipLookupResultSet</span>  <span class="ID">version=</span><span class="String">"1.0.1"</span> <span class="ID">xsi:noNamespaceSchemaLocation</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_2">   2</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_2"></span><span class="anchor" id="line-2-29"></span><span class="ID">  =</span><span class="String">"http://www.hostip.info/api/hostip-1.0.1.xsd"</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_3">   3</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_3"></span><span class="anchor" id="line-3-24"></span>  <span class="ID">&lt;gml:description</span><span class="ID">&gt;</span>This is  the Hostip Lookup Service<span class="ID">&lt;/gml:description&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_4">   4</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_4"></span><span class="anchor" id="line-4-12"></span>  <span class="ID">&lt;gml:name</span><span class="ID">&gt;</span>hostip<span class="ID">&lt;/gml:name&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_5">   5</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_5"></span><span class="anchor" id="line-5-10"></span>  <span class="ID">&lt;gml:boundedBy</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_6">   6</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_6"></span><span class="anchor" id="line-6-8"></span>  <span class="ID">&lt;gml:Null</span><span class="ID">&gt;</span>inapplicable<span class="ID">&lt;/gml:Null&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_7">   7</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_7"></span><span class="anchor" id="line-7-7"></span>  <span class="ID">&lt;/gml:boundedBy&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_8">   8</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_8"></span><span class="anchor" id="line-8-6"></span>  <span class="ID">&lt;gml:featureMember</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_9">   9</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_9"></span><span class="anchor" id="line-9-6"></span>  <span class="ID">&lt;Hostip</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_10">  10</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_10"></span><span class="anchor" id="line-10-5"></span>  <span class="ID">&lt;ip</span><span class="ID">&gt;</span>12.215.42.19<span class="ID">&lt;/ip&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_11">  11</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_11"></span><span class="anchor" id="line-11-5"></span>  <span class="ID">&lt;gml:name</span><span class="ID">&gt;</span>Aurora, TX<span class="ID">&lt;/gml:name&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_12">  12</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_12"></span><span class="anchor" id="line-12-5"></span>  <span class="ID">&lt;countryName</span><span class="ID">&gt;</span>UNITED STATES<span class="ID">&lt;/countryName&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_13">  13</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_13"></span><span class="anchor" id="line-13-4"></span>  <span class="ID">&lt;countryAbbrev</span><span class="ID">&gt;</span>US<span class="ID">&lt;/countryAbbrev&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_14">  14</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_14"></span><span class="anchor" id="line-14-4"></span>  <span class="Comment">&lt;!--</span><span class="Comment">  Co</span><span class="Comment">-</span><span class="Comment">ordinates are available as lng,lat </span><span class="Comment">--&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_15">  15</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_15"></span><span class="anchor" id="line-15-3"></span>  <span class="ID">&lt;ipLocation</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_16">  16</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_16"></span><span class="anchor" id="line-16-3"></span>  <span class="ID">&lt;gml:pointProperty</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_17">  17</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_17"></span><span class="anchor" id="line-17-3"></span>  <span class="ID">&lt;gml:Point</span>  <span class="ID">srsName=</span><span class="String">"http://www.opengis.net/gml/srs/epsg.xml#4326"</span><span class="ID">&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_18">  18</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_18"></span><span class="anchor" id="line-18-3"></span>  <span class="ID">&lt;gml:coordinates</span><span class="ID">&gt;</span>-97.5159,33.0582<span class="ID">&lt;/gml:coordinates&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_19">  19</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_19"></span><span class="anchor" id="line-19-3"></span>  <span class="ID">&lt;/gml:Point&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_20">  20</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_20"></span><span class="anchor" id="line-20-3"></span>  <span class="ID">&lt;/gml:pointProperty&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_21">  21</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_21"></span><span class="anchor" id="line-21-3"></span>  <span class="ID">&lt;/ipLocation&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_22">  22</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_22"></span><span class="anchor" id="line-22-2"></span>  <span class="ID">&lt;/Hostip&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_23">  23</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_23"></span><span class="anchor" id="line-23-2"></span>  <span class="ID">&lt;/gml:featureMember&gt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_24">  24</a> </span><span class="LineAnchor" id="CA-19bcc798cc55fab667de349e42a8f1fcb6f4dd98_24"></span><span class="anchor" id="line-24-2"></span>  <span class="ID">&lt;/HostipLookupResultSet&gt;</span></span>
</pre></div></div><span class="anchor" id="line-691"></span><p class="line874">This includes the country and some coordinate information  (longitude and latitude). <span class="anchor" id="line-692"></span><span class="anchor" id="line-693"></span></p><p class="line874">The next thing we need to do is to draw a map. We'll use  Google Maps for this. <span class="anchor" id="line-694"></span><span class="anchor" id="line-695"></span></p><p class="line874">Google Maps has a really useful service called "static  maps" which allows us to embed a Google map on our page. The Google Static  Map service will create our map based on URL parameters that we can send through  a standard HTTP request, and will return the map as an image that we can  display on our front page. <span class="anchor" id="line-696"></span><span class="anchor" id="line-697"></span></p><p class="line862">The <a class="https" href="https://developers.google.com/maps/documentation/staticmaps/">documentation  for Static Maps</a> is on the Google Developers site. <span class="anchor" id="line-698"></span><span class="anchor" id="line-699"></span></p><p class="line867">
</p><h3 id="Geolocation">Geolocation</h3>
<span class="anchor" id="line-700"></span><p class="line874">Let's begin with the first task, which is to implement a  function that looks up the IP address. This is our current ASCI Chan code: <span class="anchor" id="line-701"></span><span class="anchor" id="line-702"></span></p><p class="line867"><span class="anchor" id="line-703"></span><span class="anchor" id="line-704"></span><span class="anchor" id="line-705"></span><span class="anchor" id="line-706"></span><span class="anchor" id="line-707"></span><span class="anchor" id="line-708"></span><span class="anchor" id="line-709"></span><span class="anchor" id="line-710"></span><span class="anchor" id="line-711"></span><span class="anchor" id="line-712"></span><span class="anchor" id="line-713"></span><span class="anchor" id="line-714"></span><span class="anchor" id="line-715"></span><span class="anchor" id="line-716"></span><span class="anchor" id="line-717"></span><span class="anchor" id="line-718"></span><span class="anchor" id="line-719"></span><span class="anchor" id="line-720"></span><span class="anchor" id="line-721"></span><span class="anchor" id="line-722"></span><span class="anchor" id="line-723"></span><span class="anchor" id="line-724"></span><span class="anchor" id="line-725"></span><span class="anchor" id="line-726"></span><span class="anchor" id="line-727"></span><span class="anchor" id="line-728"></span><span class="anchor" id="line-729"></span><span class="anchor" id="line-730"></span><span class="anchor" id="line-731"></span><span class="anchor" id="line-732"></span><span class="anchor" id="line-733"></span><span class="anchor" id="line-734"></span><span class="anchor" id="line-735"></span><span class="anchor" id="line-736"></span><span class="anchor" id="line-737"></span><span class="anchor" id="line-738"></span><span class="anchor" id="line-739"></span><span class="anchor" id="line-740"></span><span class="anchor" id="line-741"></span><span class="anchor" id="line-742"></span><span class="anchor" id="line-743"></span><span class="anchor" id="line-744"></span><span class="anchor" id="line-745"></span><span class="anchor" id="line-746"></span><span class="anchor" id="line-747"></span><span class="anchor" id="line-748"></span><span class="anchor" id="line-749"></span><span class="anchor" id="line-750"></span><span class="anchor" id="line-751"></span><span class="anchor" id="line-752"></span><span class="anchor" id="line-753"></span><span class="anchor" id="line-754"></span><span class="anchor" id="line-755"></span><span class="anchor" id="line-756"></span><span class="anchor" id="line-757"></span><span class="anchor" id="line-758"></span><span class="anchor" id="line-759"></span><span class="anchor" id="line-760"></span><span class="anchor" id="line-761"></span><span class="anchor" id="line-762"></span><span class="anchor" id="line-763"></span><span class="anchor" id="line-764"></span><span class="anchor" id="line-765"></span><span class="anchor" id="line-766"></span><span class="anchor" id="line-1-75"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-df1ea8c2853350457934a8865a4351e8c1ac1779\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-df1ea8c2853350457934a8865a4351e8c1ac1779', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_1">   1</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_1"></span><span class="anchor" id="line-1-76"></span><span class="ResWord">import</span> <span class="ID">os</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_2">   2</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_2"></span><span class="anchor" id="line-2-30"></span><span class="ResWord">import</span> <span class="ID">re</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_3">   3</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_3"></span><span class="anchor" id="line-3-25"></span><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_4">   4</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_4"></span><span class="anchor" id="line-4-13"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_5">   5</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_5"></span><span class="anchor" id="line-5-11"></span><span class="ResWord">from</span> <span class="ID">string</span> <span class="ResWord">import</span> <span class="ID">letters</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_6">   6</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_6"></span><span class="anchor" id="line-6-9"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_7">   7</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_7"></span><span class="anchor" id="line-7-8"></span><span class="ResWord">import</span> <span class="ID">webapp2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_8">   8</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_8"></span><span class="anchor" id="line-8-7"></span><span class="ResWord">import</span> <span class="ID">jinja2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_9">   9</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_9"></span><span class="anchor" id="line-9-7"></span><span class="ResWord">from</span> <span class="ID">google.appengine.ext</span> <span class="ResWord">import</span> <span class="ID">db</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_10">  10</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_10"></span><span class="anchor" id="line-10-6"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_11">  11</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_11"></span><span class="anchor" id="line-11-6"></span><span class="ID">template_dir</span> = <span class="ID">os</span>.<span class="ID">path</span>.<span class="ID">join</span>(<span class="ID">os</span>.<span class="ID">path</span>.<span class="ID">dirname</span>(<span class="ID">__file__</span>), <span class="String">'</span><span class="String">templates</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_12">  12</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_12"></span><span class="anchor" id="line-12-6"></span><span class="ID">jinja_env</span> = <span class="ID">jinja2</span>.<span class="ID">Environment</span>(<span class="ID">loader</span> = <span class="ID">jinja2</span>.<span class="ID">FileSystemLoader</span>(<span class="ID">template_dir</span>), <span class="ID">autoescape</span>=<span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_13">  13</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_13"></span><span class="anchor" id="line-13-5"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_14">  14</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_14"></span><span class="anchor" id="line-14-5"></span><span class="ID">art_key</span> = <span class="ID">db</span>.<span class="ID">Key</span>.<span class="ID">from_path</span>(<span class="String">'</span><span class="String">ASCIIChan</span><span class="String">'</span>, <span class="String">'</span><span class="String">arts</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_15">  15</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_15"></span><span class="anchor" id="line-15-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_16">  16</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_16"></span><span class="anchor" id="line-16-4"></span><span class="ResWord">def</span> <span class="ID">console</span>(<span class="ID">s</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_17">  17</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_17"></span><span class="anchor" id="line-17-4"></span>        <span class="ID">sys</span>.<span class="ID">stderr</span>.<span class="ID">write</span>(<span class="String">'</span><span class="String">%s</span><span class="SPChar">\n</span><span class="String">'</span> % <span class="ID">s</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_18">  18</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_18"></span><span class="anchor" id="line-18-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_19">  19</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_19"></span><span class="anchor" id="line-19-4"></span><span class="ResWord">class</span> <span class="ID">Handler</span>(<span class="ID">webapp2</span>.<span class="ID">RequestHandler</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_20">  20</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_20"></span><span class="anchor" id="line-20-4"></span>        <span class="ResWord">def</span> <span class="ID">write</span>(<span class="ResWord">self</span>, *<span class="ID">a</span>, **<span class="ID">kw</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_21">  21</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_21"></span><span class="anchor" id="line-21-4"></span>                <span class="ResWord">self</span>.<span class="ID">response</span>.<span class="ID">out</span>.<span class="ID">write</span>(*<span class="ID">a</span>, **<span class="ID">kw</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_22">  22</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_22"></span><span class="anchor" id="line-22-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_23">  23</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_23"></span><span class="anchor" id="line-23-3"></span>        <span class="ResWord">def</span> <span class="ID">render_str</span>(<span class="ResWord">self</span>, <span class="ID">template</span>, **<span class="ID">params</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_24">  24</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_24"></span><span class="anchor" id="line-24-3"></span>                <span class="ID">t</span> = <span class="ID">jinja_env</span>.<span class="ID">get_template</span>(<span class="ID">template</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_25">  25</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_25"></span><span class="anchor" id="line-25-2"></span>                <span class="ResWord">return</span> <span class="ID">t</span>.<span class="ID">render</span>(<span class="ID">params</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_26">  26</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_26"></span><span class="anchor" id="line-26-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_27">  27</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_27"></span><span class="anchor" id="line-27-2"></span>        <span class="ResWord">def</span> <span class="ID">render</span>(<span class="ResWord">self</span>, <span class="ID">template</span>, **<span class="ID">kw</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_28">  28</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_28"></span><span class="anchor" id="line-28-2"></span>                <span class="ResWord">self</span>.<span class="ID">write</span>(<span class="ResWord">self</span>.<span class="ID">render_str</span>(<span class="ID">template</span>, **<span class="ID">kw</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_29">  29</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_29"></span><span class="anchor" id="line-29-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_30">  30</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_30"></span><span class="anchor" id="line-30-2"></span><span class="ResWord">class</span> <span class="ID">Art</span>(<span class="ID">db</span>.<span class="ID">Model</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_31">  31</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_31"></span><span class="anchor" id="line-31-2"></span>        <span class="ID">title</span> = <span class="ID">db</span>.<span class="ID">StringProperty</span>(<span class="ID">required</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_32">  32</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_32"></span><span class="anchor" id="line-32-2"></span>        <span class="ID">art</span> = <span class="ID">db</span>.<span class="ID">TextProperty</span>(<span class="ID">required</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_33">  33</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_33"></span><span class="anchor" id="line-33-2"></span>        <span class="ID">created</span> = <span class="ID">db</span>.<span class="ID">DateTimeProperty</span>(<span class="ID">auto_now_add</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_34">  34</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_34"></span><span class="anchor" id="line-34-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_35">  35</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_35"></span><span class="anchor" id="line-35-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_36">  36</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_36"></span><span class="anchor" id="line-36-2"></span><span class="ResWord">class</span> <span class="ID">MainPage</span>(<span class="ID">Handler</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_37">  37</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_37"></span><span class="anchor" id="line-37-2"></span>        <span class="ResWord">def</span> <span class="ID">render_front</span>(<span class="ResWord">self</span>, <span class="ID">title</span>=<span class="String">"</span><span class="String">"</span>, <span class="ID">art</span>=<span class="String">"</span><span class="String">"</span>, <span class="ID">error</span>=<span class="String">"</span><span class="String">"</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_38">  38</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_38"></span><span class="anchor" id="line-38-2"></span>                <span class="ID">arts</span> = <span class="ID">db</span>.<span class="ID">GqlQuery</span>(<span class="String">"</span><span class="String">SELECT * </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_39">  39</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_39"></span><span class="anchor" id="line-39-2"></span>                                                        <span class="String">"</span><span class="String">FROM Art </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_40">  40</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_40"></span><span class="anchor" id="line-40-2"></span>                                                        <span class="String">"</span><span class="String">WHERE ANCESTOR IS :1 </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_41">  41</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_41"></span><span class="anchor" id="line-41-2"></span>                                                        <span class="String">"</span><span class="String">ORDER BY created DESC </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_42">  42</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_42"></span><span class="anchor" id="line-42-2"></span>                                                        <span class="String">"</span><span class="String">LIMIT 10</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_43">  43</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_43"></span><span class="anchor" id="line-43-2"></span>                                                        <span class="ID">art_key</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_44">  44</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_44"></span><span class="anchor" id="line-44-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_45">  45</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_45"></span><span class="anchor" id="line-45-2"></span>                <span class="ResWord">self</span>.<span class="ID">render</span>(<span class="String">"</span><span class="String">front.html</span><span class="String">"</span>, <span class="ID">title</span>=<span class="ID">title</span>, <span class="ID">art</span>=<span class="ID">art</span>, <span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">arts</span> = <span class="ID">arts</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_46">  46</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_46"></span><span class="anchor" id="line-46-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_47">  47</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_47"></span><span class="anchor" id="line-47-2"></span>        <span class="ResWord">def</span> <span class="ID">get</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_48">  48</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_48"></span><span class="anchor" id="line-48-2"></span>                <span class="ResWord">self</span>.<span class="ID">render_front</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_49">  49</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_49"></span><span class="anchor" id="line-49-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_50">  50</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_50"></span><span class="anchor" id="line-50-2"></span>        <span class="ResWord">def</span> <span class="ID">post</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_51">  51</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_51"></span><span class="anchor" id="line-51-2"></span>                <span class="ID">title</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">title</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_52">  52</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_52"></span><span class="anchor" id="line-52-2"></span>                <span class="ID">art</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">art</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_53">  53</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_53"></span><span class="anchor" id="line-53-2"></span>                <span class="ResWord">if</span> <span class="ID">title</span> <span class="ResWord">and</span> <span class="ID">art</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_54">  54</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_54"></span><span class="anchor" id="line-54-2"></span>                        <span class="ID">p</span> = <span class="ID">Art</span>(<span class="ID">parent</span>=<span class="ID">art_key</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> = <span class="ID">art</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_55">  55</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_55"></span><span class="anchor" id="line-55-2"></span>                        <span class="ID">p</span>.<span class="ID">put</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_56">  56</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_56"></span><span class="anchor" id="line-56-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_57">  57</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_57"></span><span class="anchor" id="line-57-2"></span>                        <span class="ResWord">self</span>.<span class="ID">redirect</span>(<span class="String">"</span><span class="String">/</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_58">  58</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_58"></span><span class="anchor" id="line-58-2"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_59">  59</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_59"></span><span class="anchor" id="line-59-2"></span>                        <span class="ID">error</span> = <span class="String">"</span><span class="String">we need both a title and some artwork!</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_60">  60</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_60"></span><span class="anchor" id="line-60-2"></span>                        <span class="ResWord">self</span>.<span class="ID">render_front</span>(<span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> =<span class="ID">art</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_61">  61</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_61"></span><span class="anchor" id="line-61-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_62">  62</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_62"></span><span class="anchor" id="line-62-2"></span><span class="ID">app</span> = <span class="ID">webapp2</span>.<span class="ID">WSGIApplication</span>([(<span class="String">'</span><span class="String">/</span><span class="String">'</span>, <span class="ID">MainPage</span>)],</span>
<span class="line"><span class="LineNumber"><a href="#CA-df1ea8c2853350457934a8865a4351e8c1ac1779_63">  63</a> </span><span class="LineAnchor" id="CA-df1ea8c2853350457934a8865a4351e8c1ac1779_63"></span><span class="anchor" id="line-63-2"></span>                              <span class="ID">debug</span>=<span class="ResWord">True</span>)</span>
</pre></div></div><span class="anchor" id="line-767"></span><p class="line862">Our get() function in the <a class="nonexistent" href="/MainPage">MainPage</a>() handler just calls the  function we called render_front(). This runs a basic query to get the 10 most  recent pieces of art from the Google database object Art. <span class="anchor" id="line-768"></span><span class="anchor" id="line-769"></span></p><p class="line874">The post() function gets the title and the artwork from the  request. If both of them are present, it creates a new art object and stores it  in a database, and then reloads the page by doing a redirect. If the title  and/or the artwork are missing, it displays an error message. We want to modify  this to look up the user‚Äôs coordinates from their IP address and, if they are available,  add them to the art object: <span class="anchor" id="line-770"></span><span class="anchor" id="line-771"></span></p><p class="line867"><span class="anchor" id="line-772"></span><span class="anchor" id="line-773"></span><span class="anchor" id="line-774"></span><span class="anchor" id="line-775"></span><span class="anchor" id="line-776"></span><span class="anchor" id="line-777"></span><span class="anchor" id="line-778"></span><span class="anchor" id="line-779"></span><span class="anchor" id="line-780"></span><span class="anchor" id="line-781"></span><span class="anchor" id="line-782"></span><span class="anchor" id="line-783"></span><span class="anchor" id="line-784"></span><span class="anchor" id="line-785"></span><span class="anchor" id="line-786"></span><span class="anchor" id="line-1-77"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_1">   1</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_1"></span><span class="anchor" id="line-1-78"></span>        <span class="ResWord">def</span> <span class="ID">post</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_2">   2</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_2"></span><span class="anchor" id="line-2-31"></span>                <span class="ID">title</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">title</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_3">   3</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_3"></span><span class="anchor" id="line-3-26"></span>                <span class="ID">art</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">art</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_4">   4</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_4"></span><span class="anchor" id="line-4-14"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_5">   5</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_5"></span><span class="anchor" id="line-5-12"></span>                <span class="ResWord">if</span> <span class="ID">title</span> <span class="ResWord">and</span> <span class="ID">art</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_6">   6</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_6"></span><span class="anchor" id="line-6-10"></span>                        <span class="ID">p</span> = <span class="ID">Art</span>(<span class="ID">parent</span>=<span class="ID">art_key</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> = <span class="ID">art</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_7">   7</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_7"></span><span class="anchor" id="line-7-9"></span>                        <span class="Comment">#lookup the user's coordinates from their IP</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_8">   8</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_8"></span><span class="anchor" id="line-8-8"></span>                        <span class="Comment">#if we have coordinates, add them to the art</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_9">   9</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_9"></span><span class="anchor" id="line-9-8"></span>                        <span class="ID">a</span>.<span class="ID">put</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_10">  10</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_10"></span><span class="anchor" id="line-10-7"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_11">  11</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_11"></span><span class="anchor" id="line-11-7"></span>                        <span class="ResWord">self</span>.<span class="ID">redirect</span>(<span class="String">"</span><span class="String">/</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_12">  12</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_12"></span><span class="anchor" id="line-12-7"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_13">  13</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_13"></span><span class="anchor" id="line-13-6"></span>                        <span class="ID">error</span> = <span class="String">"</span><span class="String">we need both a title and some artwork!</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_14">  14</a> </span><span class="LineAnchor" id="CA-2c8a9a480d6a56d70ae451e2f9cb1baf71591896_14"></span><span class="anchor" id="line-14-6"></span>                        <span class="ResWord">self</span>.<span class="ID">render_front</span>(<span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> =<span class="ID">art</span>)</span>
</pre></div></div><span class="anchor" id="line-787"></span><p class="line874">We know that we are going to request a URL and that we will be  receiving some XML that we will need to parse, so we need to add the urllib2  and mindom libraries: <span class="anchor" id="line-788"></span><span class="anchor" id="line-789"></span></p><p class="line867"><span class="anchor" id="line-790"></span><span class="anchor" id="line-791"></span><span class="anchor" id="line-792"></span><span class="anchor" id="line-793"></span><span class="anchor" id="line-794"></span><span class="anchor" id="line-795"></span><span class="anchor" id="line-796"></span><span class="anchor" id="line-797"></span><span class="anchor" id="line-798"></span><span class="anchor" id="line-799"></span><span class="anchor" id="line-1-79"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_1">   1</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_1"></span><span class="anchor" id="line-1-80"></span>  <span class="ResWord">import</span>  <span class="ID">os</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_2">   2</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_2"></span><span class="anchor" id="line-2-32"></span>  <span class="ResWord">import</span>  <span class="ID">re</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_3">   3</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_3"></span><span class="anchor" id="line-3-27"></span>  <span class="ResWord">import</span>  <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_4">   4</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_4"></span><span class="anchor" id="line-4-15"></span>  <span class="ResWord">import</span> <span class="ID">urllib2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_5">   5</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_5"></span><span class="anchor" id="line-5-13"></span>  <span class="ResWord">from</span> <span class="ID">xml.dom</span> <span class="ResWord">import</span> <span class="ID">minidom</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_6">   6</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_6"></span><span class="anchor" id="line-6-11"></span>  <span class="ResWord">from</span>  <span class="ID">string</span> <span class="ResWord">import</span> <span class="ID">letters</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_7">   7</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_7"></span><span class="anchor" id="line-7-10"></span>  <span class="ResWord">import</span>  <span class="ID">webapp2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_8">   8</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_8"></span><span class="anchor" id="line-8-9"></span>  <span class="ResWord">import</span>  <span class="ID">jinja2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_9">   9</a> </span><span class="LineAnchor" id="CA-2f543042cc0c7d788d5b556da69f2580b44ab9f3_9"></span><span class="anchor" id="line-9-9"></span>  <span class="ResWord">from</span>  <span class="ID">google.appengine.ext</span> <span class="ResWord">import</span> <span class="ID">db</span></span>
</pre></div></div><span class="anchor" id="line-800"></span><p class="line874">We are going to need a function to look up the users  coordinates from their IP address. We‚Äôll call this function get_coords(). This  will take an IP address as its argument and make a request to hostip.info.  We‚Äôve taken the URL from the hostip.info. API documentation and removed the  sample IP address: <span class="anchor" id="line-801"></span><span class="anchor" id="line-802"></span></p><p class="line867"><span class="anchor" id="line-803"></span><span class="anchor" id="line-804"></span><span class="anchor" id="line-805"></span><span class="anchor" id="line-806"></span><span class="anchor" id="line-1-81"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618_1">   1</a> </span><span class="LineAnchor" id="CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618_1"></span><span class="anchor" id="line-1-82"></span>  <span class="ID">IP_URL</span>  = <span class="String">"</span><span class="String">http://api.hostip.info/?ip=</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618_2">   2</a> </span><span class="LineAnchor" id="CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618_2"></span><span class="anchor" id="line-2-33"></span>  <span class="ResWord">def</span>  <span class="ID">get_coords</span>(<span class="ID">ip</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618_3">   3</a> </span><span class="LineAnchor" id="CA-b82b9a7b4d6fbb80c692d2bf7cb94d21066cc618_3"></span><span class="anchor" id="line-3-28"></span>  <span class="ID">url</span> = <span class="ID">IP_URL</span> + <span class="ID">ip</span></span>
</pre></div></div><span class="anchor" id="line-807"></span><p class="line874">Now, you already know how to make a basic URL request. We‚Äôll  show you a few things you can do in the real world to make the requests a  little less prone to errors. <span class="anchor" id="line-808"></span><span class="anchor" id="line-809"></span></p><p class="line874">We are going to store the content of the URL in a variable  called "content‚Äù. We‚Äôll be using urllib2.urlopen(): <span class="anchor" id="line-810"></span><span class="anchor" id="line-811"></span></p><p class="line867"><span class="anchor" id="line-812"></span><span class="anchor" id="line-813"></span><span class="anchor" id="line-1-83"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1c2605d82c003cf862e57b9520a35b2fbdf3e74b\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-1c2605d82c003cf862e57b9520a35b2fbdf3e74b', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-1c2605d82c003cf862e57b9520a35b2fbdf3e74b" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-1c2605d82c003cf862e57b9520a35b2fbdf3e74b_1">   1</a> </span><span class="LineAnchor" id="CA-1c2605d82c003cf862e57b9520a35b2fbdf3e74b_1"></span><span class="anchor" id="line-1-84"></span>  <span class="ID">content</span>  = <span class="ID">urllib2</span>.<span class="ID">urlopen</span>(<span class="ID">url</span>).<span class="ID">read</span>()</span>
</pre></div></div><span class="anchor" id="line-814"></span><p class="line874">If the URL is invalid or the website is down, this is going to  generate an exception. In this case we happen to know what that exception is,  so we can write: <span class="anchor" id="line-815"></span><span class="anchor" id="line-816"></span></p><p class="line867"><span class="anchor" id="line-817"></span><span class="anchor" id="line-818"></span><span class="anchor" id="line-819"></span><span class="anchor" id="line-820"></span><span class="anchor" id="line-821"></span><span class="anchor" id="line-822"></span><span class="anchor" id="line-823"></span><span class="anchor" id="line-824"></span><span class="anchor" id="line-1-85"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-4ac040c87987b34d858b55cdfe0df92a6341c696\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-4ac040c87987b34d858b55cdfe0df92a6341c696', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_1">   1</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_1"></span><span class="anchor" id="line-1-86"></span><span class="ResWord">def</span> <span class="ID">get_coords</span>(<span class="ID">ip</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_2">   2</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_2"></span><span class="anchor" id="line-2-34"></span>        <span class="ID">url</span> = <span class="ID">IP_URL</span> + <span class="ID">ip</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_3">   3</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_3"></span><span class="anchor" id="line-3-29"></span>        <span class="ID">content</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_4">   4</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_4"></span><span class="anchor" id="line-4-16"></span>        <span class="ResWord">try</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_5">   5</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_5"></span><span class="anchor" id="line-5-14"></span>                <span class="ID">content</span> = <span class="ID">urllib2</span>.<span class="ID">urlopen</span>(<span class="ID">url</span>).<span class="ID">read</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_6">   6</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_6"></span><span class="anchor" id="line-6-12"></span>        <span class="ResWord">except</span> <span class="ID">urllib2</span>.<span class="ID">URLError</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-4ac040c87987b34d858b55cdfe0df92a6341c696_7">   7</a> </span><span class="LineAnchor" id="CA-4ac040c87987b34d858b55cdfe0df92a6341c696_7"></span><span class="anchor" id="line-7-11"></span>                <span class="ResWord">return</span></span>
</pre></div></div><span class="anchor" id="line-825"></span><p class="line874">If there is a URL error, there are no are no coordinates, and  we'll just return. <span class="anchor" id="line-826"></span><span class="anchor" id="line-827"></span></p><p class="line874">Normally we would probably log these errors so that when we  are maintaining the site we can see that the geocoding is broken for some  reason. <span class="anchor" id="line-828"></span><span class="anchor" id="line-829"></span></p><p class="line867">
</p><h3 id="Quiz:_Geolocation">Quiz: Geolocation</h3>
<span class="anchor" id="line-830"></span><p class="line874">Implement the get_coords(xml) function that takes in an xml  string and returns a tuple of (lat, lon) if there are coordinates in the xml. <span class="anchor" id="line-831"></span><span class="anchor" id="line-832"></span></p><p class="line874">Remember that you should use minidom to do this. Also, notice  that the coordinates in the xml string are in the format: (lon,lat), so you  will have to switch them around. <span class="anchor" id="line-833"></span><span class="anchor" id="line-834"></span></p><p class="line874">We have provided an example chunk of XML that comes from that  website that should work. <span class="anchor" id="line-835"></span><span class="anchor" id="line-836"></span></p><p class="line867">
</p><h3 id="Debugging">Debugging</h3>
<span class="anchor" id="line-837"></span><p class="line874">Here is our get_coords() function: <span class="anchor" id="line-838"></span><span class="anchor" id="line-839"></span></p><p class="line867"><span class="anchor" id="line-840"></span><span class="anchor" id="line-841"></span><span class="anchor" id="line-842"></span><span class="anchor" id="line-843"></span><span class="anchor" id="line-844"></span><span class="anchor" id="line-845"></span><span class="anchor" id="line-846"></span><span class="anchor" id="line-847"></span><span class="anchor" id="line-848"></span><span class="anchor" id="line-849"></span><span class="anchor" id="line-850"></span><span class="anchor" id="line-851"></span><span class="anchor" id="line-852"></span><span class="anchor" id="line-853"></span><span class="anchor" id="line-854"></span><span class="anchor" id="line-855"></span><span class="anchor" id="line-1-87"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-97c535a1f0ec512d7db12c18e8dbda34a893954c\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-97c535a1f0ec512d7db12c18e8dbda34a893954c', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_1">   1</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_1"></span><span class="anchor" id="line-1-88"></span><span class="ResWord">def</span> <span class="ID">get_coords</span>(<span class="ID">ip</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_2">   2</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_2"></span><span class="anchor" id="line-2-35"></span>        <span class="ID">url</span> = <span class="ID">IP_URL</span> + <span class="ID">ip</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_3">   3</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_3"></span><span class="anchor" id="line-3-30"></span>        <span class="ID">content</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_4">   4</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_4"></span><span class="anchor" id="line-4-17"></span>        <span class="ResWord">try</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_5">   5</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_5"></span><span class="anchor" id="line-5-15"></span>                <span class="ID">content</span> = <span class="ID">urllib2</span>.<span class="ID">urlopen</span>(<span class="ID">url</span>).<span class="ID">read</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_6">   6</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_6"></span><span class="anchor" id="line-6-13"></span>        <span class="ResWord">except</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_7">   7</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_7"></span><span class="anchor" id="line-7-12"></span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_8">   8</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_8"></span><span class="anchor" id="line-8-10"></span>                <span class="ResWord">return</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_9">   9</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_9"></span><span class="anchor" id="line-9-10"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_10">  10</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_10"></span><span class="anchor" id="line-10-8"></span>        <span class="ResWord">if</span> <span class="ID">content</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_11">  11</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_11"></span><span class="anchor" id="line-11-8"></span>                <span class="ID">d</span> = <span class="ID">minidom</span>.<span class="ID">parseString</span>(<span class="ID">content</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_12">  12</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_12"></span><span class="anchor" id="line-12-8"></span>                <span class="ID">coords</span> = <span class="ID">d</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">gml:coordinates</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_13">  13</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_13"></span><span class="anchor" id="line-13-7"></span>                <span class="ResWord">if</span> <span class="ID">coords</span> <span class="ResWord">and</span> <span class="ID">coords</span>[<span class="Number">0</span>].<span class="ID">childNodes</span>[<span class="Number">0</span>].<span class="ID">nodeValue</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_14">  14</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_14"></span><span class="anchor" id="line-14-7"></span>                        <span class="ID">lon</span>, <span class="ID">lat</span> = <span class="ID">coords</span>[<span class="Number">0</span>].<span class="ID">childNodes</span>[<span class="Number">0</span>].<span class="ID">nodeValue</span>.<span class="ID">split</span>(<span class="String">'</span><span class="String">,</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_15">  15</a> </span><span class="LineAnchor" id="CA-97c535a1f0ec512d7db12c18e8dbda34a893954c_15"></span><span class="anchor" id="line-15-5"></span>                        <span class="ResWord">return</span> <span class="ID">db</span>.<span class="ID">GeoPt</span>(<span class="ID">lat</span>, <span class="ID">lon</span>)</span>
</pre></div></div><span class="anchor" id="line-856"></span><p class="line862">We have slightly modified the code from the quiz solution.  Google App Engine includes a data type for storing a latitude and longitude.  This is <a class="https" href="https://developers.google.com/appengine/docs/java/javadoc/com/google/appengine/api/datastore/GeoPt">GeoPt</a>.  So what we actually want to return is db.<a class="nonexistent" href="/GeoPt">GeoPt</a>(lat, long). <span class="anchor" id="line-857"></span><span class="anchor" id="line-858"></span></p><p class="line874">Let's run a quick test to check that this function is working.  We are going to add a line to our get() function: <span class="anchor" id="line-859"></span><span class="anchor" id="line-860"></span></p><p class="line867"><span class="anchor" id="line-861"></span><span class="anchor" id="line-862"></span><span class="anchor" id="line-863"></span><span class="anchor" id="line-864"></span><span class="anchor" id="line-1-89"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c7656433f2aead2ae2d25257348009c2db0735ca\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-c7656433f2aead2ae2d25257348009c2db0735ca', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-c7656433f2aead2ae2d25257348009c2db0735ca" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-c7656433f2aead2ae2d25257348009c2db0735ca_1">   1</a> </span><span class="LineAnchor" id="CA-c7656433f2aead2ae2d25257348009c2db0735ca_1"></span><span class="anchor" id="line-1-90"></span>  <span class="ResWord">def</span> <span class="ID">get</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-c7656433f2aead2ae2d25257348009c2db0735ca_2">   2</a> </span><span class="LineAnchor" id="CA-c7656433f2aead2ae2d25257348009c2db0735ca_2"></span><span class="anchor" id="line-2-36"></span>  <span class="ResWord">self</span>.<span class="ID">write</span>(<span class="ResWord">repr</span>(<span class="ID">get_coords</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)))</span>
<span class="line"><span class="LineNumber"><a href="#CA-c7656433f2aead2ae2d25257348009c2db0735ca_3">   3</a> </span><span class="LineAnchor" id="CA-c7656433f2aead2ae2d25257348009c2db0735ca_3"></span><span class="anchor" id="line-3-31"></span>  <span class="ResWord">self</span>.<span class="ID">render_front</span>()</span>
</pre></div></div><span class="anchor" id="line-865"></span><p class="line862">When you print a Python object, it has angle brackets around  it. When you print it in HTML, the browser will interpret the object as a tag,  and it won't actually print what you're trying to print. Using <a class="http" href="http://docs.python.org/library/repr.html?highlight=repr#repr">repr()</a> is a handy trick when you need to print Python objects in HTML. You‚Äôll get some  extra quotes and the object will print properly. <span class="anchor" id="line-866"></span><span class="anchor" id="line-867"></span></p><p class="line874">The remote_addr attribute of the request object that is the  parameter for the get_coords() function is the requesting IP address. Almost  every web framer will give you access to the requesting IP. <span class="anchor" id="line-868"></span><span class="anchor" id="line-869"></span></p><p class="line874">If we reload the web page we see the response in the browser: <span class="anchor" id="line-870"></span><span class="anchor" id="line-871"></span></p><p class="line867"><span class="anchor" id="line-872"></span><span class="anchor" id="line-873"></span><span class="anchor" id="line-1-91"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-7496d76c36e7830df0702134abdfd92bc1aeb152\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-7496d76c36e7830df0702134abdfd92bc1aeb152', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-7496d76c36e7830df0702134abdfd92bc1aeb152" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-7496d76c36e7830df0702134abdfd92bc1aeb152_1">   1</a> </span><span class="LineAnchor" id="CA-7496d76c36e7830df0702134abdfd92bc1aeb152_1"></span><span class="anchor" id="line-1-92"></span>  <span class="ResWord">None</span></span>
</pre></div></div><span class="anchor" id="line-874"></span><p class="line874">Well, that‚Äôs certainly better than an exception! Let‚Äôs see if  we can discover why we didn‚Äôt get a location. Let‚Äôs add the following line to  our get() function: <span class="anchor" id="line-875"></span><span class="anchor" id="line-876"></span></p><p class="line867"><span class="anchor" id="line-877"></span><span class="anchor" id="line-878"></span><span class="anchor" id="line-1-93"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-849a79e025c670498e5ab1183bd73e7547fbc97f\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-849a79e025c670498e5ab1183bd73e7547fbc97f', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-849a79e025c670498e5ab1183bd73e7547fbc97f" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-849a79e025c670498e5ab1183bd73e7547fbc97f_1">   1</a> </span><span class="LineAnchor" id="CA-849a79e025c670498e5ab1183bd73e7547fbc97f_1"></span><span class="anchor" id="line-1-94"></span>  <span class="ResWord">self</span>.<span class="ID">write</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)</span>
</pre></div></div><span class="anchor" id="line-879"></span><p class="line874">Now we see: <span class="anchor" id="line-880"></span><span class="anchor" id="line-881"></span></p><p class="line867"><span class="anchor" id="line-882"></span><span class="anchor" id="line-883"></span><span class="anchor" id="line-1-95"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1dae2dffefec92d993d0ba01b329ab016215d516\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-1dae2dffefec92d993d0ba01b329ab016215d516', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-1dae2dffefec92d993d0ba01b329ab016215d516" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-1dae2dffefec92d993d0ba01b329ab016215d516_1">   1</a> </span><span class="LineAnchor" id="CA-1dae2dffefec92d993d0ba01b329ab016215d516_1"></span><span class="anchor" id="line-1-96"></span>  <span class="Number">127.0</span>.<span class="Number">0.1</span><span class="ResWord">None</span></span>
</pre></div></div><span class="anchor" id="line-884"></span><p class="line862">The IP address 127.0.0.1 means that we're running the app  locally. For any of you who don't know, every machine has a local IP address of  127.0.0.1. This is known as the <strong>loop-back  address</strong>, and is how a machine refers to itself. Local host generally refers  to that IP address. It's hardly surprising that a service on the internet doesn't  know what our local IP is! <span class="anchor" id="line-885"></span><span class="anchor" id="line-886"></span></p><p class="line874">For the purpose of testing the get_coords() function, we can  manually set the IP to an address we know is real: 4.2.2.2. This is a big-name  server than helps resolve TNS names into IPs. The get_coords() function is now: <span class="anchor" id="line-887"></span><span class="anchor" id="line-888"></span></p><p class="line867"><span class="anchor" id="line-889"></span><span class="anchor" id="line-890"></span><span class="anchor" id="line-891"></span><span class="anchor" id="line-892"></span><span class="anchor" id="line-893"></span><span class="anchor" id="line-894"></span><span class="anchor" id="line-895"></span><span class="anchor" id="line-896"></span><span class="anchor" id="line-897"></span><span class="anchor" id="line-898"></span><span class="anchor" id="line-899"></span><span class="anchor" id="line-900"></span><span class="anchor" id="line-901"></span><span class="anchor" id="line-902"></span><span class="anchor" id="line-903"></span><span class="anchor" id="line-904"></span><span class="anchor" id="line-1-97"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_1">   1</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_1"></span><span class="anchor" id="line-1-98"></span><span class="ResWord">def</span> <span class="ID">get_coords</span>(<span class="ID">ip</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_2">   2</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_2"></span><span class="anchor" id="line-2-37"></span>        <span class="ID">ip</span> = <span class="String">"</span><span class="String">4.2.2.2</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_3">   3</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_3"></span><span class="anchor" id="line-3-32"></span>        <span class="ID">url</span> = <span class="ID">IP_URL</span> + <span class="ID">ip</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_4">   4</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_4"></span><span class="anchor" id="line-4-18"></span>        <span class="ID">content</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_5">   5</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_5"></span><span class="anchor" id="line-5-16"></span>        <span class="ResWord">try</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_6">   6</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_6"></span><span class="anchor" id="line-6-14"></span>                <span class="ID">content</span> = <span class="ID">urllib2</span>.<span class="ID">urlopen</span>(<span class="ID">url</span>).<span class="ID">read</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_7">   7</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_7"></span><span class="anchor" id="line-7-13"></span>        <span class="ResWord">except</span> <span class="ID">urllib2</span>.<span class="ID">URLError</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_8">   8</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_8"></span><span class="anchor" id="line-8-11"></span>                <span class="ResWord">return</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_9">   9</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_9"></span><span class="anchor" id="line-9-11"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_10">  10</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_10"></span><span class="anchor" id="line-10-9"></span>        <span class="ResWord">if</span> <span class="ID">content</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_11">  11</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_11"></span><span class="anchor" id="line-11-9"></span>                <span class="ID">d</span> = <span class="ID">minidom</span>.<span class="ID">parseString</span>(<span class="ID">content</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_12">  12</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_12"></span><span class="anchor" id="line-12-9"></span>                <span class="ID">coords</span> = <span class="ID">d</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">gml:coordinates</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_13">  13</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_13"></span><span class="anchor" id="line-13-8"></span>                <span class="ResWord">if</span> <span class="ID">coords</span> <span class="ResWord">and</span> <span class="ID">coords</span>[<span class="Number">0</span>].<span class="ID">childNodes</span>[<span class="Number">0</span>].<span class="ID">nodeValue</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_14">  14</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_14"></span><span class="anchor" id="line-14-8"></span>                        <span class="ID">lon</span>, <span class="ID">lat</span> = <span class="ID">coords</span>[<span class="Number">0</span>].<span class="ID">childNodes</span>[<span class="Number">0</span>].<span class="ID">nodeValue</span>.<span class="ID">split</span>(<span class="String">'</span><span class="String">,</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_15">  15</a> </span><span class="LineAnchor" id="CA-c1df83ce54c6bc84e4d31f0aacd2031b2c67ce67_15"></span><span class="anchor" id="line-15-6"></span>                        <span class="ResWord">return</span> <span class="ID">db</span>.<span class="ID">GeoPt</span>(<span class="ID">lat</span>, <span class="ID">lon</span>)</span>
</pre></div></div><span class="anchor" id="line-905"></span><p class="line874">Let's refresh our browser, and see if we get anything useful: <span class="anchor" id="line-906"></span><span class="anchor" id="line-907"></span></p><p class="line867"><span class="anchor" id="line-908"></span><span class="anchor" id="line-909"></span><span class="anchor" id="line-1-99"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-124351ab9aee2517cbafdee28438caa072b1fdcd\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-124351ab9aee2517cbafdee28438caa072b1fdcd', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-124351ab9aee2517cbafdee28438caa072b1fdcd" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-124351ab9aee2517cbafdee28438caa072b1fdcd_1">   1</a> </span><span class="LineAnchor" id="CA-124351ab9aee2517cbafdee28438caa072b1fdcd_1"></span><span class="anchor" id="line-1-100"></span>  <span class="ID">datastore_types</span>.<span class="ID">GeoPt</span>(<span class="Number">39.994</span>,  -<span class="Number">105.062</span>)</span>
</pre></div></div><span class="anchor" id="line-910"></span><p class="line874">So we‚Äôre getting the coordinates of the IP address where that  machine is located. Our IP function is working and, as a bonus, we have also  tested the error case (which is something you should always do). <span class="anchor" id="line-911"></span><span class="anchor" id="line-912"></span></p><p class="line874">Back to our to-do list. <span class="anchor" id="line-913"></span><span class="anchor" id="line-914"></span></p><p class="line867">
</p><h3 id="Updating_the_Database">Updating the Database</h3>
<span class="anchor" id="line-915"></span><p class="line874">Now we are ready to modify our post function. The first thing  we heed to add is a line to lookup the user‚Äôs coordinates from their IP  address: <span class="anchor" id="line-916"></span><span class="anchor" id="line-917"></span></p><p class="line867"><span class="anchor" id="line-918"></span><span class="anchor" id="line-919"></span><span class="anchor" id="line-1-101"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-8142bed54b278e4d13b2de25d471524efa05e033\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-8142bed54b278e4d13b2de25d471524efa05e033', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-8142bed54b278e4d13b2de25d471524efa05e033" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-8142bed54b278e4d13b2de25d471524efa05e033_1">   1</a> </span><span class="LineAnchor" id="CA-8142bed54b278e4d13b2de25d471524efa05e033_1"></span><span class="anchor" id="line-1-102"></span>  <span class="ID">coords</span> =  <span class="ID">get_coords</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)</span>
</pre></div></div><span class="anchor" id="line-920"></span><p class="line874">Next, if there are coordinates, we need to add them to the  art. At the moment, our Art object doesn‚Äôt take coordinates, so we‚Äôll have to  add an extra property to our Art database. Since we're returning a Geo Point,  we can store it in a Geo Point Property: <span class="anchor" id="line-921"></span><span class="anchor" id="line-922"></span></p><p class="line867"><span class="anchor" id="line-923"></span><span class="anchor" id="line-924"></span><span class="anchor" id="line-925"></span><span class="anchor" id="line-926"></span><span class="anchor" id="line-927"></span><span class="anchor" id="line-928"></span><span class="anchor" id="line-1-103"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-08c399b30c8cf082cf968c59e18687d33bba326c\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-08c399b30c8cf082cf968c59e18687d33bba326c', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-08c399b30c8cf082cf968c59e18687d33bba326c" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-08c399b30c8cf082cf968c59e18687d33bba326c_1">   1</a> </span><span class="LineAnchor" id="CA-08c399b30c8cf082cf968c59e18687d33bba326c_1"></span><span class="anchor" id="line-1-104"></span><span class="ResWord">class</span> <span class="ID">Art</span>(<span class="ID">db</span>.<span class="ID">Model</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-08c399b30c8cf082cf968c59e18687d33bba326c_2">   2</a> </span><span class="LineAnchor" id="CA-08c399b30c8cf082cf968c59e18687d33bba326c_2"></span><span class="anchor" id="line-2-38"></span>        <span class="ID">title</span> = <span class="ID">db</span>.<span class="ID">StringProperty</span>(<span class="ID">required</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-08c399b30c8cf082cf968c59e18687d33bba326c_3">   3</a> </span><span class="LineAnchor" id="CA-08c399b30c8cf082cf968c59e18687d33bba326c_3"></span><span class="anchor" id="line-3-33"></span>        <span class="ID">art</span> = <span class="ID">db</span>.<span class="ID">TextProperty</span>(<span class="ID">required</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-08c399b30c8cf082cf968c59e18687d33bba326c_4">   4</a> </span><span class="LineAnchor" id="CA-08c399b30c8cf082cf968c59e18687d33bba326c_4"></span><span class="anchor" id="line-4-19"></span>        <span class="ID">created</span> = <span class="ID">db</span>.<span class="ID">DateTimeProperty</span>(<span class="ID">auto_now_add</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-08c399b30c8cf082cf968c59e18687d33bba326c_5">   5</a> </span><span class="LineAnchor" id="CA-08c399b30c8cf082cf968c59e18687d33bba326c_5"></span><span class="anchor" id="line-5-17"></span>        <span class="ID">coords</span> = <span class="ID">db</span>.<span class="ID">GeoPtProperty</span>( )</span>
</pre></div></div><span class="anchor" id="line-929"></span><p class="line874">Obviously, we‚Äôd like to say (required = True) for coords, but  we already have some art in our database that doesn't have coordinates. There  are a couple of options available to us. <span class="anchor" id="line-930"></span><span class="anchor" id="line-931"></span></p><p class="line874">We could just delete all that art and start over. However,  since ASCII Chan is such a hot site on the internet, and since everybody is  using it, we don't want it to just break. <span class="anchor" id="line-932"></span><span class="anchor" id="line-933"></span></p><p class="line874">Alternatively we could just make this parameter not required.  We'll just have it for future art. This is what we will do in this case. <span class="anchor" id="line-934"></span><span class="anchor" id="line-935"></span></p><p class="line874">Actually. this is something that comes up all the time when  you're developing web applications. Because you will often be adding features,  or tweaking the data model for your sites, you‚Äôll need to make decisions like  this on a regular basis. It's kind of backwards compatibility. <span class="anchor" id="line-936"></span><span class="anchor" id="line-937"></span></p><p class="line874">Now we‚Äôre ready to add the coordinates, if they exist, to the  art. This is easy enough: <span class="anchor" id="line-938"></span><span class="anchor" id="line-939"></span></p><p class="line867"><span class="anchor" id="line-940"></span><span class="anchor" id="line-941"></span><span class="anchor" id="line-942"></span><span class="anchor" id="line-943"></span><span class="anchor" id="line-944"></span><span class="anchor" id="line-945"></span><span class="anchor" id="line-946"></span><span class="anchor" id="line-947"></span><span class="anchor" id="line-948"></span><span class="anchor" id="line-949"></span><span class="anchor" id="line-950"></span><span class="anchor" id="line-951"></span><span class="anchor" id="line-952"></span><span class="anchor" id="line-953"></span><span class="anchor" id="line-954"></span><span class="anchor" id="line-955"></span><span class="anchor" id="line-956"></span><span class="anchor" id="line-957"></span><span class="anchor" id="line-958"></span><span class="anchor" id="line-1-105"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_1">   1</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_1"></span><span class="anchor" id="line-1-106"></span>        <span class="ResWord">def</span> <span class="ID">post</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_2">   2</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_2"></span><span class="anchor" id="line-2-39"></span>                <span class="ID">title</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">title</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_3">   3</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_3"></span><span class="anchor" id="line-3-34"></span>                <span class="ID">art</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">art</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_4">   4</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_4"></span><span class="anchor" id="line-4-20"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_5">   5</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_5"></span><span class="anchor" id="line-5-18"></span>                <span class="ResWord">if</span> <span class="ID">title</span> <span class="ResWord">and</span> <span class="ID">art</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_6">   6</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_6"></span><span class="anchor" id="line-6-15"></span>                        <span class="ID">p</span> = <span class="ID">Art</span>(<span class="ID">parent</span>=<span class="ID">art_key</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> = <span class="ID">art</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_7">   7</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_7"></span><span class="anchor" id="line-7-14"></span>                        <span class="Comment">#lookup the user's coordinates from their IP</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_8">   8</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_8"></span><span class="anchor" id="line-8-12"></span>                        <span class="ID">coords</span> = <span class="ID">get_coords</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_9">   9</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_9"></span><span class="anchor" id="line-9-12"></span>                        <span class="Comment">#if we have coordinates, add them to the art</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_10">  10</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_10"></span><span class="anchor" id="line-10-10"></span>                        <span class="ResWord">if</span> <span class="ID">coords</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_11">  11</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_11"></span><span class="anchor" id="line-11-10"></span>                                <span class="ID">p</span>.<span class="ID">coords</span> = <span class="ID">coords</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_12">  12</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_12"></span><span class="anchor" id="line-12-10"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_13">  13</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_13"></span><span class="anchor" id="line-13-9"></span>                        <span class="ID">a</span>.<span class="ID">put</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_14">  14</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_14"></span><span class="anchor" id="line-14-9"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_15">  15</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_15"></span><span class="anchor" id="line-15-7"></span>                        <span class="ResWord">self</span>.<span class="ID">redirect</span>(<span class="String">"</span><span class="String">/</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_16">  16</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_16"></span><span class="anchor" id="line-16-5"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_17">  17</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_17"></span><span class="anchor" id="line-17-5"></span>                        <span class="ID">error</span> = <span class="String">"</span><span class="String">we need both a title and some artwork!</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_18">  18</a> </span><span class="LineAnchor" id="CA-25bf6691cb102951ccbf1ddc8fc7ef2623b22863_18"></span><span class="anchor" id="line-18-5"></span>                        <span class="ResWord">self</span>.<span class="ID">render_front</span>(<span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> =<span class="ID">art</span>)</span>
</pre></div></div><span class="anchor" id="line-959"></span><p class="line874">Now we can submit some art in our browser and see if we get an  exception. Even if you don‚Äôt see any exceptions, there is something you can do  in Google App Engine to check that this submitted properly. <span class="anchor" id="line-960"></span><span class="anchor" id="line-961"></span></p><p class="line874">You may have noticed when you started up App Engine, that it  mentions in the console that the Admin Console is available at a given URL. The  Development Console defaults to the Datastore Viewer, and selects all of the  entity kinds we have. In this case, we could click List Entities to see all of  the entities in Art and check that the new piece of art has map coordinates. <span class="anchor" id="line-962"></span><span class="anchor" id="line-963"></span></p><p class="line874">Now that this is all working, we‚Äôre ready to move on to the  next task on our to-do list which is actually drawing the map. <span class="anchor" id="line-964"></span><span class="anchor" id="line-965"></span></p><p class="line867">
</p><h3 id="Querying_Coordinate_Information">Querying Coordinate Information</h3>
<span class="anchor" id="line-966"></span><p class="line874">The first thing we need to do is to figure out how to draw the  map from the API. We know that the URL is going to look like this: <span class="anchor" id="line-967"></span><span class="anchor" id="line-968"></span></p><p class="line867"><span class="anchor" id="line-969"></span><span class="anchor" id="line-970"></span><span class="anchor" id="line-1-107"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-91634c8eeb0480f4eb47bd6840b7a14650110702\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-91634c8eeb0480f4eb47bd6840b7a14650110702', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-91634c8eeb0480f4eb47bd6840b7a14650110702" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-91634c8eeb0480f4eb47bd6840b7a14650110702_1">   1</a> </span><span class="LineAnchor" id="CA-91634c8eeb0480f4eb47bd6840b7a14650110702_1"></span><span class="anchor" id="line-1-108"></span>  <span class="ID">http</span>://<span class="ID">maps</span>.<span class="ID">googleapis</span>.<span class="ID">com</span>/<span class="ID">maps</span>/<span class="ID">apis</span>/<span class="ID">staticmap</span></span>
</pre></div></div><span class="anchor" id="line-971"></span><p class="line874">followed by some parameters. The only required parameters are: <span class="anchor" id="line-972"></span><span class="anchor" id="line-973"></span></p><ul><li>size - which is going to be the rectangular  dimensions of the map image. <span class="anchor" id="line-974"></span></li><li>sensor ‚Äì this specifies whether the application  requesting the static map is using a sensor to determine the user's location.  In this case we will set this to False. <span class="anchor" id="line-975"></span><span class="anchor" id="line-976"></span></li></ul><p class="line862">Once we have these, we can set the <a class="https" href="https://developers.google.com/maps/documentation/staticmaps/#Markers">Static  map markers parameters</a>. There are a number of optional styles that we could  set if we wanted to (size, color, label), but we can just say markers followed  by the coordinates. An example URL might look like this: <span class="anchor" id="line-977"></span><span class="anchor" id="line-978"></span></p><p class="line867"><span class="anchor" id="line-979"></span><span class="anchor" id="line-980"></span><span class="anchor" id="line-1-109"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b29db4543cdc00749dc6cf2859562326eb2975e1\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-b29db4543cdc00749dc6cf2859562326eb2975e1', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-b29db4543cdc00749dc6cf2859562326eb2975e1" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-b29db4543cdc00749dc6cf2859562326eb2975e1_1">   1</a> </span><span class="LineAnchor" id="CA-b29db4543cdc00749dc6cf2859562326eb2975e1_1"></span><span class="anchor" id="line-1-110"></span><span class="ID">http</span>://<span class="ID">maps</span>.<span class="ID">googleapis</span>.<span class="ID">com</span>/<span class="ID">maps</span>/<span class="ID">api</span>/<span class="ID">staticmap</span>?<span class="ID">size</span>=<span class="Number">512</span><span class="ID">x512</span></span>
</pre></div></div><span class="anchor" id="line-981"></span><p class="line867"><span class="anchor" id="line-982"></span><span class="anchor" id="line-983"></span><span class="anchor" id="line-1-111"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-e589c0b2c10655691a152eb32684af81e2bb3d2b\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-e589c0b2c10655691a152eb32684af81e2bb3d2b', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-e589c0b2c10655691a152eb32684af81e2bb3d2b" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-e589c0b2c10655691a152eb32684af81e2bb3d2b_1">   1</a> </span><span class="LineAnchor" id="CA-e589c0b2c10655691a152eb32684af81e2bb3d2b_1"></span><span class="anchor" id="line-1-112"></span>&amp;<span class="ID">markers</span>=<span class="Number">40.702147</span>,-<span class="Number">74.015794</span>&amp;<span class="ID">sensor</span>=<span class="ID">false</span></span>
</pre></div></div><span class="anchor" id="line-984"></span><p class="line874">The API works by looking for multiple markers parameters, so  we can just add one markers parameter for each of our URLs. <span class="anchor" id="line-985"></span><span class="anchor" id="line-986"></span></p><ul><li style="list-style-type:none">So, there are three steps to generate the image URL: <span class="anchor" id="line-987"></span><span class="anchor" id="line-988"></span></li><li class="gap">Find which arts have coordinates <span class="anchor" id="line-989"></span></li><li>If we have any arts coordinates, make an image  URL <span class="anchor" id="line-990"></span></li><li>Display the image URL <span class="anchor" id="line-991"></span><span class="anchor" id="line-992"></span></li></ul><p class="line874">The first step is fairly easy. We just go through our list of  arts and for each item check if it has coordinates: <span class="anchor" id="line-993"></span><span class="anchor" id="line-994"></span></p><p class="line867"><span class="anchor" id="line-995"></span><span class="anchor" id="line-996"></span><span class="anchor" id="line-997"></span><span class="anchor" id="line-998"></span><span class="anchor" id="line-999"></span><span class="anchor" id="line-1-113"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-8e970af6d3b88c57e43dfd3d6202f47457255457\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-8e970af6d3b88c57e43dfd3d6202f47457255457', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-8e970af6d3b88c57e43dfd3d6202f47457255457" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-8e970af6d3b88c57e43dfd3d6202f47457255457_1">   1</a> </span><span class="LineAnchor" id="CA-8e970af6d3b88c57e43dfd3d6202f47457255457_1"></span><span class="anchor" id="line-1-114"></span>                <span class="ID">point</span> = []</span>
<span class="line"><span class="LineNumber"><a href="#CA-8e970af6d3b88c57e43dfd3d6202f47457255457_2">   2</a> </span><span class="LineAnchor" id="CA-8e970af6d3b88c57e43dfd3d6202f47457255457_2"></span><span class="anchor" id="line-2-40"></span>                <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">arts</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-8e970af6d3b88c57e43dfd3d6202f47457255457_3">   3</a> </span><span class="LineAnchor" id="CA-8e970af6d3b88c57e43dfd3d6202f47457255457_3"></span><span class="anchor" id="line-3-35"></span>                        <span class="ResWord">if</span> <span class="ID">arts</span>.<span class="ID">coords</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-8e970af6d3b88c57e43dfd3d6202f47457255457_4">   4</a> </span><span class="LineAnchor" id="CA-8e970af6d3b88c57e43dfd3d6202f47457255457_4"></span><span class="anchor" id="line-4-21"></span>                                <span class="ID">points</span>.<span class="ID">append</span>(<span class="ID">a</span>.<span class="ID">coords</span>)</span>
</pre></div></div><span class="anchor" id="line-1000"></span><p class="line867">||&lt;^  width="640px"&gt;An alternative, shorter, method would be: <span class="anchor" id="line-1001"></span><span class="anchor" id="line-1002"></span></p><ul><li style="list-style-type:none"><p class="line862">Points = filter(None, (a.coords for a in arts)) (a.coords for a in arts) is a generator that would return an iterator of all the coordinates, which may be either coordinates or None. Then filter() takes two    parameters. It takes a function or None and a list or an iterable and    basically returns all of the items in the list that match the filter. In this case, if the filter is None, it basically says match    all the ones that aren't None and will give us all of the coords for each a in art if it's not None. || <span class="anchor" id="line-1003"></span><span class="anchor" id="line-1004"></span></p></li></ul><p class="line874">There is one subtle bug in our code: <span class="anchor" id="line-1005"></span><span class="anchor" id="line-1006"></span></p><p class="line867"><span class="anchor" id="line-1007"></span><span class="anchor" id="line-1008"></span><span class="anchor" id="line-1009"></span><span class="anchor" id="line-1010"></span><span class="anchor" id="line-1011"></span><span class="anchor" id="line-1012"></span><span class="anchor" id="line-1013"></span><span class="anchor" id="line-1014"></span><span class="anchor" id="line-1015"></span><span class="anchor" id="line-1016"></span><span class="anchor" id="line-1017"></span><span class="anchor" id="line-1018"></span><span class="anchor" id="line-1019"></span><span class="anchor" id="line-1020"></span><span class="anchor" id="line-1021"></span><span class="anchor" id="line-1022"></span><span class="anchor" id="line-1-115"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-7034deb3d99fabda81b46c34dcf59fce41f20ced\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-7034deb3d99fabda81b46c34dcf59fce41f20ced', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_1">   1</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_1"></span><span class="anchor" id="line-1-116"></span>        <span class="ResWord">def</span> <span class="ID">render_front</span>(<span class="ResWord">self</span>, <span class="ID">title</span>=<span class="String">"</span><span class="String">"</span>, <span class="ID">art</span>=<span class="String">"</span><span class="String">"</span>, <span class="ID">error</span>=<span class="String">"</span><span class="String">"</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_2">   2</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_2"></span><span class="anchor" id="line-2-41"></span>                <span class="ID">arts</span> = <span class="ID">db</span>.<span class="ID">GqlQuery</span>(<span class="String">"</span><span class="String">SELECT * </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_3">   3</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_3"></span><span class="anchor" id="line-3-36"></span>                                        <span class="String">"</span><span class="String">FROM Art </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_4">   4</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_4"></span><span class="anchor" id="line-4-22"></span>                                        <span class="String">"</span><span class="String">WHERE ANCESTOR IS :1</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_5">   5</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_5"></span><span class="anchor" id="line-5-19"></span>                                        <span class="String">"</span><span class="String">ORDER BY created DESC </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_6">   6</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_6"></span><span class="anchor" id="line-6-16"></span>                                        <span class="String">"</span><span class="String">LIMIT 10</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_7">   7</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_7"></span><span class="anchor" id="line-7-15"></span>                                        <span class="ID">art_key</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_8">   8</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_8"></span><span class="anchor" id="line-8-13"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_9">   9</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_9"></span><span class="anchor" id="line-9-13"></span>                <span class="Comment">#find which arts have coords</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_10">  10</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_10"></span><span class="anchor" id="line-10-11"></span>                <span class="ID">point</span> = []</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_11">  11</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_11"></span><span class="anchor" id="line-11-11"></span>                <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">arts</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_12">  12</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_12"></span><span class="anchor" id="line-12-11"></span>                        <span class="ResWord">if</span> <span class="ID">arts</span>.<span class="ID">coords</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_13">  13</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_13"></span><span class="anchor" id="line-13-10"></span>                                <span class="ID">points</span>.<span class="ID">append</span>(<span class="ID">a</span>.<span class="ID">coords</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_14">  14</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_14"></span><span class="anchor" id="line-14-10"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_15">  15</a> </span><span class="LineAnchor" id="CA-7034deb3d99fabda81b46c34dcf59fce41f20ced_15"></span><span class="anchor" id="line-15-8"></span>                <span class="ResWord">self</span>.<span class="ID">render</span>(<span class="String">"</span><span class="String">front.html</span><span class="String">"</span>, <span class="ID">title</span>=<span class="ID">title</span>, <span class="ID">art</span>=<span class="ID">art</span>, <span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">arts</span> = <span class="ID">arts</span>)</span>
</pre></div></div><span class="anchor" id="line-1023"></span><p class="line874">arts is a query. When we iterate over arts, we are actually  running the query. We also run the query when we're rendering the front.html.  The template has a loop in it that draws all the arts which also iterates over  that arts query. <span class="anchor" id="line-1024"></span><span class="anchor" id="line-1025"></span></p><p class="line874">Now, we don't want to run the query twice. Not only is it  wasteful, the results of the query could change between the two iterations.  Whenever you find yourself iterating over results you get from a database,  whether it's datastore or some other kind of curser based abstraction from a  database, it's usually good to say something like this: <span class="anchor" id="line-1026"></span><span class="anchor" id="line-1027"></span></p><p class="line867"><span class="anchor" id="line-1028"></span><span class="anchor" id="line-1029"></span><span class="anchor" id="line-1-117"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-d9f1fe5ed3d60148a9de387c88c33c0e877c802e\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-d9f1fe5ed3d60148a9de387c88c33c0e877c802e', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-d9f1fe5ed3d60148a9de387c88c33c0e877c802e" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-d9f1fe5ed3d60148a9de387c88c33c0e877c802e_1">   1</a> </span><span class="LineAnchor" id="CA-d9f1fe5ed3d60148a9de387c88c33c0e877c802e_1"></span><span class="anchor" id="line-1-118"></span>  <span class="ID">arts</span> = <span class="ResWord">list</span>(<span class="ID">arts</span>)</span>
</pre></div></div><span class="anchor" id="line-1030"></span><p class="line874">The arts that comes out of the query is a curser. What we have  done here is to call the list constructor on that curser and say, in effect,  make a list out of that iterable. Now we have cached the results of the query  in the list and we can iterate over this list as many times as we want. <span class="anchor" id="line-1031"></span><span class="anchor" id="line-1032"></span></p><p class="line874">This is a good habit to get into if you think you might to be  using results from a database query more than once. <span class="anchor" id="line-1033"></span><span class="anchor" id="line-1034"></span></p><p class="line867">
</p><h3 id="Quiz:_Creating_the_Image_URL">Quiz: Creating the Image URL</h3>
<span class="anchor" id="line-1035"></span><p class="line874">Implement the function gmaps_img(points) that returns the  Google maps image for a map with the points passed in. A example valid response  looks like this: <span class="anchor" id="line-1036"></span><span class="anchor" id="line-1037"></span></p><p class="line867"><span class="anchor" id="line-1038"></span><span class="anchor" id="line-1039"></span><span class="anchor" id="line-1-119"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-330562e8a0b9bb610d112476cb3e79d86a1b9a6a\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-330562e8a0b9bb610d112476cb3e79d86a1b9a6a', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-330562e8a0b9bb610d112476cb3e79d86a1b9a6a" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-330562e8a0b9bb610d112476cb3e79d86a1b9a6a_1">   1</a> </span><span class="LineAnchor" id="CA-330562e8a0b9bb610d112476cb3e79d86a1b9a6a_1"></span><span class="anchor" id="line-1-120"></span>  <span class="ID">http</span>://<span class="ID">maps</span>.<span class="ID">googleapis</span>.<span class="ID">com</span>/<span class="ID">maps</span>/<span class="ID">api</span>/<span class="ID">staticmap</span>?<span class="ID">size</span>=<span class="Number">380</span><span class="ID">x263</span>&amp;<span class="ID">sensor</span>=<span class="ID">false</span>&amp;<span class="ID">markers</span>=<span class="Number">1</span>,<span class="Number">2</span>&amp;<span class="ID">marker</span>=<span class="Number">3</span>,<span class="Number">4</span></span>
</pre></div></div><span class="anchor" id="line-1040"></span><p class="line874">Note that you should be able to get the first and second part  of an individual Point p with p.lat and p.lon, respectively, based on the above code. For  example, points[0].lat would return 1, while points[2].lon would return 6. <span class="anchor" id="line-1041"></span><span class="anchor" id="line-1042"></span></p><p class="line867">
</p><h3 id="Putting_It_All_Together">Putting It All Together</h3>
<span class="anchor" id="line-1043"></span><p class="line874">OK, so now we have a function that, given a list of points, returns  the URL for the map image. Let's add the function to the application: <span class="anchor" id="line-1044"></span><span class="anchor" id="line-1045"></span></p><p class="line867"><span class="anchor" id="line-1046"></span><span class="anchor" id="line-1047"></span><span class="anchor" id="line-1048"></span><span class="anchor" id="line-1049"></span><span class="anchor" id="line-1050"></span><span class="anchor" id="line-1-121"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-ca5974ba342272b409b68194f79337130a5f8431\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-ca5974ba342272b409b68194f79337130a5f8431', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-ca5974ba342272b409b68194f79337130a5f8431" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-ca5974ba342272b409b68194f79337130a5f8431_1">   1</a> </span><span class="LineAnchor" id="CA-ca5974ba342272b409b68194f79337130a5f8431_1"></span><span class="anchor" id="line-1-122"></span>  <span class="ID">GMAPS_URL</span> =  <span class="String">"</span><span class="String">http://maps.googleapis.com/maps/api/staticmap?size=380x263&amp;sensor=false&amp;</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ca5974ba342272b409b68194f79337130a5f8431_2">   2</a> </span><span class="LineAnchor" id="CA-ca5974ba342272b409b68194f79337130a5f8431_2"></span><span class="anchor" id="line-2-42"></span>  <span class="ResWord">def</span> <span class="ID">gmaps_img</span>(<span class="ID">points</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-ca5974ba342272b409b68194f79337130a5f8431_3">   3</a> </span><span class="LineAnchor" id="CA-ca5974ba342272b409b68194f79337130a5f8431_3"></span><span class="anchor" id="line-3-37"></span>  <span class="ID">markers</span> = <span class="String">'</span><span class="String">&amp;</span><span class="String">'</span>.<span class="ID">join</span>(<span class="String">'</span><span class="String">markers=</span><span class="String">%s</span><span class="String">,</span><span class="String">%s</span><span class="String">'</span> % (<span class="ID">p</span>.<span class="ID">lat</span>,  <span class="ID">p</span>.<span class="ID">lon</span>) <span class="ResWord">for</span> <span class="ID">p</span> <span class="ResWord">in</span> <span class="ID">points</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-ca5974ba342272b409b68194f79337130a5f8431_4">   4</a> </span><span class="LineAnchor" id="CA-ca5974ba342272b409b68194f79337130a5f8431_4"></span><span class="anchor" id="line-4-23"></span>  <span class="ResWord">return</span> <span class="ID">GMAPS_URL</span> + <span class="ID">markers</span></span>
</pre></div></div><span class="anchor" id="line-1051"></span><p class="line874">Now we add the code to make a URL image if we have any  coordinates: <span class="anchor" id="line-1052"></span><span class="anchor" id="line-1053"></span></p><p class="line867"><span class="anchor" id="line-1054"></span><span class="anchor" id="line-1055"></span><span class="anchor" id="line-1056"></span><span class="anchor" id="line-1057"></span><span class="anchor" id="line-1058"></span><span class="anchor" id="line-1-123"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_1">   1</a> </span><span class="LineAnchor" id="CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_1"></span><span class="anchor" id="line-1-124"></span>  <span class="Comment">#if we have any arts coords, make an image URL&lt;</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_2">   2</a> </span><span class="LineAnchor" id="CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_2"></span><span class="anchor" id="line-2-43"></span>  <span class="ID">img_url</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_3">   3</a> </span><span class="LineAnchor" id="CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_3"></span><span class="anchor" id="line-3-38"></span>  <span class="ResWord">if</span> <span class="ID">points</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_4">   4</a> </span><span class="LineAnchor" id="CA-3cd30ddd6c23746522d9980dc82c8ba2296b6f64_4"></span><span class="anchor" id="line-4-24"></span>  <span class="ID">img_url</span> = <span class="ID">gmaps_img</span>(<span class="ID">points</span>)</span>
</pre></div></div><span class="anchor" id="line-1059"></span><p class="line874">Next we are going to pass img_url into our template: <span class="anchor" id="line-1060"></span><span class="anchor" id="line-1061"></span></p><p class="line867"><span class="anchor" id="line-1062"></span><span class="anchor" id="line-1063"></span><span class="anchor" id="line-1-125"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-816e44baf1a48caf825db729d7086477173c8d46\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-816e44baf1a48caf825db729d7086477173c8d46', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-816e44baf1a48caf825db729d7086477173c8d46" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-816e44baf1a48caf825db729d7086477173c8d46_1">   1</a> </span><span class="LineAnchor" id="CA-816e44baf1a48caf825db729d7086477173c8d46_1"></span><span class="anchor" id="line-1-126"></span>  <span class="ResWord">self</span>.<span class="ID">render</span>(<span class="String">"</span><span class="String">front.html</span><span class="String">"</span>,  <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> = <span class="ID">art</span>, <span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">arts</span> = <span class="ID">arts</span> <span class="ID">img_url</span> = <span class="ID">img_url</span>)</span>
</pre></div></div><span class="anchor" id="line-1064"></span><p class="line862">Finally, we have to update the front.html template. We want  the image to display to the right of our form, so we add the code in the Jinja  template language just after the &lt;/form&gt; closing tag: <span class="anchor" id="line-1065"></span><span class="anchor" id="line-1066"></span></p><p class="line867"><span class="anchor" id="line-1067"></span><span class="anchor" id="line-1068"></span><span class="anchor" id="line-1069"></span><span class="anchor" id="line-1070"></span><span class="anchor" id="line-1-127"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-21971def2c108a71cfea257dcc5864fda85f661b\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-21971def2c108a71cfea257dcc5864fda85f661b', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-21971def2c108a71cfea257dcc5864fda85f661b" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-21971def2c108a71cfea257dcc5864fda85f661b_1">   1</a> </span><span class="LineAnchor" id="CA-21971def2c108a71cfea257dcc5864fda85f661b_1"></span><span class="anchor" id="line-1-128"></span>  {% <span class="ResWord">if</span> <span class="ID">img_url</span> %}</span>
<span class="line"><span class="LineNumber"><a href="#CA-21971def2c108a71cfea257dcc5864fda85f661b_2">   2</a> </span><span class="LineAnchor" id="CA-21971def2c108a71cfea257dcc5864fda85f661b_2"></span><span class="anchor" id="line-2-44"></span>  &lt;<span class="ID">img</span>  <span class="ID">class</span>=<span class="String">"</span><span class="String">map</span><span class="String">"</span> <span class="ID">src</span>=<span class="String">"</span><span class="String">{{img_url}}</span><span class="String">"</span>&gt;</span>
<span class="line"><span class="LineNumber"><a href="#CA-21971def2c108a71cfea257dcc5864fda85f661b_3">   3</a> </span><span class="LineAnchor" id="CA-21971def2c108a71cfea257dcc5864fda85f661b_3"></span><span class="anchor" id="line-3-39"></span>  {% <span class="ID">endif</span> %}</span>
</pre></div></div><span class="anchor" id="line-1071"></span><p class="line874">So, if img_url (i.e. it‚Äôs not None), include the image. <span class="anchor" id="line-1072"></span><span class="anchor" id="line-1073"></span></p><p class="line874">Notice the class=‚Äùmap‚Äù attribute. By default, the map would be  displayed directly below our form in the browser window. We want it to be  displayed to the right of the form. We do this by adding the class attribute  and specifying the layout using the CSS styles. To specify the layout we added  the following definition to the CSS: <span class="anchor" id="line-1074"></span><span class="anchor" id="line-1075"></span></p><p class="line867"><span class="anchor" id="line-1076"></span><span class="anchor" id="line-1077"></span><span class="anchor" id="line-1078"></span><span class="anchor" id="line-1079"></span><span class="anchor" id="line-1080"></span><span class="anchor" id="line-1081"></span><span class="anchor" id="line-1-129"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_1">   1</a> </span><span class="LineAnchor" id="CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_1"></span><span class="anchor" id="line-1-130"></span>        .<span class="ID">map</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_2">   2</a> </span><span class="LineAnchor" id="CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_2"></span><span class="anchor" id="line-2-45"></span>                <span class="ID">position</span>: <span class="ID">absolute</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_3">   3</a> </span><span class="LineAnchor" id="CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_3"></span><span class="anchor" id="line-3-40"></span>                <span class="ID">right</span>: <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_4">   4</a> </span><span class="LineAnchor" id="CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_4"></span><span class="anchor" id="line-4-25"></span>                <span class="ID">top</span>: <span class="Number">112</span><span class="ID">px</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_5">   5</a> </span><span class="LineAnchor" id="CA-f5fc9834cbe0315f925fa4c1e7b84d79f4d20588_5"></span><span class="anchor" id="line-5-20"></span>        }</span>
</pre></div></div><span class="anchor" id="line-1082"></span><p class="line874">position: absolute allows us to  position something anywhere on the page. We have specified that the map should  be zero pixels from the right and 112 pixels from the top of the screen. It  fits perfectly. Obviously we knew the size of the image beforehand. <span class="anchor" id="line-1083"></span><span class="anchor" id="line-1084"></span></p><p class="line874">The final version of the ASCIIChan 2 code is now: <span class="anchor" id="line-1085"></span><span class="anchor" id="line-1086"></span></p><p class="line867"><span class="anchor" id="line-1087"></span><span class="anchor" id="line-1088"></span><span class="anchor" id="line-1089"></span><span class="anchor" id="line-1090"></span><span class="anchor" id="line-1091"></span><span class="anchor" id="line-1092"></span><span class="anchor" id="line-1093"></span><span class="anchor" id="line-1094"></span><span class="anchor" id="line-1095"></span><span class="anchor" id="line-1096"></span><span class="anchor" id="line-1097"></span><span class="anchor" id="line-1098"></span><span class="anchor" id="line-1099"></span><span class="anchor" id="line-1100"></span><span class="anchor" id="line-1101"></span><span class="anchor" id="line-1102"></span><span class="anchor" id="line-1103"></span><span class="anchor" id="line-1104"></span><span class="anchor" id="line-1105"></span><span class="anchor" id="line-1106"></span><span class="anchor" id="line-1107"></span><span class="anchor" id="line-1108"></span><span class="anchor" id="line-1109"></span><span class="anchor" id="line-1110"></span><span class="anchor" id="line-1111"></span><span class="anchor" id="line-1112"></span><span class="anchor" id="line-1113"></span><span class="anchor" id="line-1114"></span><span class="anchor" id="line-1115"></span><span class="anchor" id="line-1116"></span><span class="anchor" id="line-1117"></span><span class="anchor" id="line-1118"></span><span class="anchor" id="line-1119"></span><span class="anchor" id="line-1120"></span><span class="anchor" id="line-1121"></span><span class="anchor" id="line-1122"></span><span class="anchor" id="line-1123"></span><span class="anchor" id="line-1124"></span><span class="anchor" id="line-1125"></span><span class="anchor" id="line-1126"></span><span class="anchor" id="line-1127"></span><span class="anchor" id="line-1128"></span><span class="anchor" id="line-1129"></span><span class="anchor" id="line-1130"></span><span class="anchor" id="line-1131"></span><span class="anchor" id="line-1132"></span><span class="anchor" id="line-1133"></span><span class="anchor" id="line-1134"></span><span class="anchor" id="line-1135"></span><span class="anchor" id="line-1136"></span><span class="anchor" id="line-1137"></span><span class="anchor" id="line-1138"></span><span class="anchor" id="line-1139"></span><span class="anchor" id="line-1140"></span><span class="anchor" id="line-1141"></span><span class="anchor" id="line-1142"></span><span class="anchor" id="line-1143"></span><span class="anchor" id="line-1144"></span><span class="anchor" id="line-1145"></span><span class="anchor" id="line-1146"></span><span class="anchor" id="line-1147"></span><span class="anchor" id="line-1148"></span><span class="anchor" id="line-1149"></span><span class="anchor" id="line-1150"></span><span class="anchor" id="line-1151"></span><span class="anchor" id="line-1152"></span><span class="anchor" id="line-1153"></span><span class="anchor" id="line-1154"></span><span class="anchor" id="line-1155"></span><span class="anchor" id="line-1156"></span><span class="anchor" id="line-1157"></span><span class="anchor" id="line-1158"></span><span class="anchor" id="line-1159"></span><span class="anchor" id="line-1160"></span><span class="anchor" id="line-1161"></span><span class="anchor" id="line-1162"></span><span class="anchor" id="line-1163"></span><span class="anchor" id="line-1164"></span><span class="anchor" id="line-1165"></span><span class="anchor" id="line-1166"></span><span class="anchor" id="line-1167"></span><span class="anchor" id="line-1168"></span><span class="anchor" id="line-1169"></span><span class="anchor" id="line-1170"></span><span class="anchor" id="line-1171"></span><span class="anchor" id="line-1172"></span><span class="anchor" id="line-1173"></span><span class="anchor" id="line-1174"></span><span class="anchor" id="line-1175"></span><span class="anchor" id="line-1176"></span><span class="anchor" id="line-1177"></span><span class="anchor" id="line-1178"></span><span class="anchor" id="line-1179"></span><span class="anchor" id="line-1180"></span><span class="anchor" id="line-1181"></span><span class="anchor" id="line-1182"></span><span class="anchor" id="line-1183"></span><span class="anchor" id="line-1184"></span><span class="anchor" id="line-1185"></span><span class="anchor" id="line-1186"></span><span class="anchor" id="line-1187"></span><span class="anchor" id="line-1188"></span><span class="anchor" id="line-1189"></span><span class="anchor" id="line-1190"></span><span class="anchor" id="line-1191"></span><span class="anchor" id="line-1192"></span><span class="anchor" id="line-1193"></span><span class="anchor" id="line-1194"></span><span class="anchor" id="line-1195"></span><span class="anchor" id="line-1196"></span><span class="anchor" id="line-1197"></span><span class="anchor" id="line-1198"></span><span class="anchor" id="line-1199"></span><span class="anchor" id="line-1200"></span><span class="anchor" id="line-1-131"></span></p><div class="highlight python"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b4f42dd01ac36731353d16633c18253302777e31\', 1, 1);" \
                class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫<\/a>');
</script><a href="#" onclick="return togglenumber('CA-b4f42dd01ac36731353d16633c18253302777e31', 1, 1);" class="codenumbers">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫</a>
<pre dir="ltr" id="CA-b4f42dd01ac36731353d16633c18253302777e31" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_1">   1</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_1"></span><span class="anchor" id="line-1-132"></span><span class="ResWord">import</span> <span class="ID">os</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_2">   2</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_2"></span><span class="anchor" id="line-2-46"></span><span class="ResWord">import</span> <span class="ID">re</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_3">   3</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_3"></span><span class="anchor" id="line-3-41"></span><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_4">   4</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_4"></span><span class="anchor" id="line-4-26"></span><span class="ResWord">import</span> <span class="ID">urllib2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_5">   5</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_5"></span><span class="anchor" id="line-5-21"></span><span class="ResWord">from</span> <span class="ID">xml.dom</span> <span class="ResWord">import</span> <span class="ID">minidom</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_6">   6</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_6"></span><span class="anchor" id="line-6-17"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_7">   7</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_7"></span><span class="anchor" id="line-7-16"></span><span class="ResWord">from</span> <span class="ID">string</span> <span class="ResWord">import</span> <span class="ID">letters</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_8">   8</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_8"></span><span class="anchor" id="line-8-14"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_9">   9</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_9"></span><span class="anchor" id="line-9-14"></span><span class="ResWord">import</span> <span class="ID">webapp2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_10">  10</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_10"></span><span class="anchor" id="line-10-12"></span><span class="ResWord">import</span> <span class="ID">jinja2</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_11">  11</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_11"></span><span class="anchor" id="line-11-12"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_12">  12</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_12"></span><span class="anchor" id="line-12-12"></span><span class="ResWord">from</span> <span class="ID">google.appengine.ext</span> <span class="ResWord">import</span> <span class="ID">db</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_13">  13</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_13"></span><span class="anchor" id="line-13-11"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_14">  14</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_14"></span><span class="anchor" id="line-14-11"></span><span class="ID">template_dir</span> = <span class="ID">os</span>.<span class="ID">path</span>.<span class="ID">join</span>(<span class="ID">os</span>.<span class="ID">path</span>.<span class="ID">dirname</span>(<span class="ID">__file__</span>), <span class="String">'</span><span class="String">templates</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_15">  15</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_15"></span><span class="anchor" id="line-15-9"></span><span class="ID">jinja_env</span> = <span class="ID">jinja2</span>.<span class="ID">Environment</span>(<span class="ID">loader</span> = <span class="ID">jinja2</span>.<span class="ID">FileSystemLoader</span>(<span class="ID">template_dir</span>), <span class="ID">autoescape</span>=<span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_16">  16</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_16"></span><span class="anchor" id="line-16-6"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_17">  17</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_17"></span><span class="anchor" id="line-17-6"></span><span class="ID">art_key</span> = <span class="ID">db</span>.<span class="ID">Key</span>.<span class="ID">from_path</span>(<span class="String">'</span><span class="String">ASCIIChan</span><span class="String">'</span>, <span class="String">'</span><span class="String">arts</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_18">  18</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_18"></span><span class="anchor" id="line-18-6"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_19">  19</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_19"></span><span class="anchor" id="line-19-5"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_20">  20</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_20"></span><span class="anchor" id="line-20-5"></span><span class="ResWord">def</span> <span class="ID">console</span>(<span class="ID">s</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_21">  21</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_21"></span><span class="anchor" id="line-21-5"></span>        <span class="ID">sys</span>.<span class="ID">stderr</span>.<span class="ID">write</span>(<span class="String">'</span><span class="String">%s</span><span class="SPChar">\n</span><span class="String">'</span> % <span class="ID">s</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_22">  22</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_22"></span><span class="anchor" id="line-22-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_23">  23</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_23"></span><span class="anchor" id="line-23-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_24">  24</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_24"></span><span class="anchor" id="line-24-4"></span><span class="ResWord">class</span> <span class="ID">Handler</span>(<span class="ID">webapp2</span>.<span class="ID">RequestHandler</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_25">  25</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_25"></span><span class="anchor" id="line-25-3"></span>        <span class="ResWord">def</span> <span class="ID">write</span>(<span class="ResWord">self</span>, *<span class="ID">a</span>, **<span class="ID">kw</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_26">  26</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_26"></span><span class="anchor" id="line-26-3"></span>                <span class="ResWord">self</span>.<span class="ID">response</span>.<span class="ID">out</span>.<span class="ID">write</span>(*<span class="ID">a</span>, **<span class="ID">kw</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_27">  27</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_27"></span><span class="anchor" id="line-27-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_28">  28</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_28"></span><span class="anchor" id="line-28-3"></span>        <span class="ResWord">def</span> <span class="ID">render_str</span>(<span class="ResWord">self</span>, <span class="ID">template</span>, **<span class="ID">params</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_29">  29</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_29"></span><span class="anchor" id="line-29-3"></span>                <span class="ID">t</span> = <span class="ID">jinja_env</span>.<span class="ID">get_template</span>(<span class="ID">template</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_30">  30</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_30"></span><span class="anchor" id="line-30-3"></span>                <span class="ResWord">return</span> <span class="ID">t</span>.<span class="ID">render</span>(<span class="ID">params</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_31">  31</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_31"></span><span class="anchor" id="line-31-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_32">  32</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_32"></span><span class="anchor" id="line-32-3"></span>        <span class="ResWord">def</span> <span class="ID">render</span>(<span class="ResWord">self</span>, <span class="ID">template</span>, **<span class="ID">kw</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_33">  33</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_33"></span><span class="anchor" id="line-33-3"></span>                <span class="ResWord">self</span>.<span class="ID">write</span>(<span class="ResWord">self</span>.<span class="ID">render_str</span>(<span class="ID">template</span>, **<span class="ID">kw</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_34">  34</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_34"></span><span class="anchor" id="line-34-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_35">  35</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_35"></span><span class="anchor" id="line-35-3"></span><span class="ID">GMAPS_URL</span> = <span class="String">"</span><span class="String">http://maps.googleapis.com/maps/api/staticmap?size=380x263&amp;sensor=false&amp;</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_36">  36</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_36"></span><span class="anchor" id="line-36-3"></span><span class="ResWord">def</span> <span class="ID">gmap_img</span>(<span class="ID">points</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_37">  37</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_37"></span><span class="anchor" id="line-37-3"></span>        <span class="ID">markers</span> = <span class="String">'</span><span class="String">&amp;</span><span class="String">'</span>.<span class="ID">join</span>(<span class="String">'</span><span class="String">markers=</span><span class="String">%s</span><span class="String">,</span><span class="String">%s</span><span class="String">'</span> % (<span class="ID">p</span>.<span class="ID">lat</span>, <span class="ID">p</span>.<span class="ID">lon</span>) <span class="ResWord">for</span> <span class="ID">p</span> <span class="ResWord">in</span> <span class="ID">points</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_38">  38</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_38"></span><span class="anchor" id="line-38-3"></span>        <span class="ResWord">return</span> <span class="ID">GMAPS_URL</span> + <span class="ID">markers</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_39">  39</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_39"></span><span class="anchor" id="line-39-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_40">  40</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_40"></span><span class="anchor" id="line-40-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_41">  41</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_41"></span><span class="anchor" id="line-41-3"></span><span class="ID">IP_URL</span> = <span class="String">"</span><span class="String">http://api.hostip.info/?ip=</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_42">  42</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_42"></span><span class="anchor" id="line-42-3"></span><span class="ResWord">def</span> <span class="ID">get_coords</span>(<span class="ID">ip</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_43">  43</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_43"></span><span class="anchor" id="line-43-3"></span>        <span class="ID">ip</span> = <span class="String">"</span><span class="String">4.2.2.2</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_44">  44</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_44"></span><span class="anchor" id="line-44-3"></span>        <span class="ID">url</span> = <span class="ID">IP_URL</span> + <span class="ID">ip</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_45">  45</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_45"></span><span class="anchor" id="line-45-3"></span>        <span class="ID">content</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_46">  46</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_46"></span><span class="anchor" id="line-46-3"></span>        <span class="ResWord">try</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_47">  47</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_47"></span><span class="anchor" id="line-47-3"></span>                <span class="ID">content</span> = <span class="ID">urllib2</span>.<span class="ID">urlopen</span>(<span class="ID">url</span>).<span class="ID">read</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_48">  48</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_48"></span><span class="anchor" id="line-48-3"></span>        <span class="ResWord">except</span> <span class="ID">URLError</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_49">  49</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_49"></span><span class="anchor" id="line-49-3"></span>                <span class="ResWord">return</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_50">  50</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_50"></span><span class="anchor" id="line-50-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_51">  51</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_51"></span><span class="anchor" id="line-51-3"></span>        <span class="ResWord">if</span> <span class="ID">content</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_52">  52</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_52"></span><span class="anchor" id="line-52-3"></span>                <span class="ID">d</span> = <span class="ID">minidom</span>.<span class="ID">parseString</span>(<span class="ID">content</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_53">  53</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_53"></span><span class="anchor" id="line-53-3"></span>                <span class="ID">coords</span> = <span class="ID">d</span>.<span class="ID">getElementsByTagName</span>(<span class="String">"</span><span class="String">gml:coordinates</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_54">  54</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_54"></span><span class="anchor" id="line-54-3"></span>                <span class="ResWord">if</span> <span class="ID">coords</span> <span class="ResWord">and</span> <span class="ID">coords</span>[<span class="Number">0</span>].<span class="ID">childNodes</span>[<span class="Number">0</span>].<span class="ID">nodeValue</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_55">  55</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_55"></span><span class="anchor" id="line-55-3"></span>                        <span class="ID">lon</span>, <span class="ID">lat</span> = <span class="ID">coords</span>[<span class="Number">0</span>].<span class="ID">childNodes</span>[<span class="Number">0</span>].<span class="ID">nodeValue</span>.<span class="ID">split</span>(<span class="String">'</span><span class="String">,</span><span class="String">'</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_56">  56</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_56"></span><span class="anchor" id="line-56-3"></span>                        <span class="ResWord">return</span> <span class="ID">db</span>.<span class="ID">GeoPt</span>(<span class="ID">lat</span>, <span class="ID">lon</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_57">  57</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_57"></span><span class="anchor" id="line-57-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_58">  58</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_58"></span><span class="anchor" id="line-58-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_59">  59</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_59"></span><span class="anchor" id="line-59-3"></span><span class="ResWord">class</span> <span class="ID">Art</span>(<span class="ID">db</span>.<span class="ID">Model</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_60">  60</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_60"></span><span class="anchor" id="line-60-3"></span>        <span class="ID">title</span> = <span class="ID">db</span>.<span class="ID">StringProperty</span>(<span class="ID">required</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_61">  61</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_61"></span><span class="anchor" id="line-61-3"></span>        <span class="ID">art</span> = <span class="ID">db</span>.<span class="ID">TextProperty</span>(<span class="ID">required</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_62">  62</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_62"></span><span class="anchor" id="line-62-3"></span>        <span class="ID">created</span> = <span class="ID">db</span>.<span class="ID">DateTimeProperty</span>(<span class="ID">auto_now_add</span> = <span class="ResWord">True</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_63">  63</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_63"></span><span class="anchor" id="line-63-3"></span>        <span class="ID">coords</span> = <span class="ID">db</span>.<span class="ID">GeoPtProperty</span>( )</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_64">  64</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_64"></span><span class="anchor" id="line-64-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_65">  65</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_65"></span><span class="anchor" id="line-65-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_66">  66</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_66"></span><span class="anchor" id="line-66-2"></span><span class="ResWord">class</span> <span class="ID">MainPage</span>(<span class="ID">Handler</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_67">  67</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_67"></span><span class="anchor" id="line-67-2"></span>        <span class="ResWord">def</span> <span class="ID">render_front</span>(<span class="ResWord">self</span>, <span class="ID">title</span>=<span class="String">"</span><span class="String">"</span>, <span class="ID">art</span>=<span class="String">"</span><span class="String">"</span>, <span class="ID">error</span>=<span class="String">"</span><span class="String">"</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_68">  68</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_68"></span><span class="anchor" id="line-68-2"></span>                <span class="ID">arts</span> = <span class="ID">db</span>.<span class="ID">GqlQuery</span>(<span class="String">"</span><span class="String">SELECT * </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_69">  69</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_69"></span><span class="anchor" id="line-69-2"></span>                                                        <span class="String">"</span><span class="String">FROM Art </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_70">  70</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_70"></span><span class="anchor" id="line-70-2"></span>                                                        <span class="String">"</span><span class="String">WHERE ANCESTOR IS :1 </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_71">  71</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_71"></span><span class="anchor" id="line-71-2"></span>                                                        <span class="String">"</span><span class="String">ORDER BY created DESC </span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_72">  72</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_72"></span><span class="anchor" id="line-72-2"></span>                                                        <span class="String">"</span><span class="String">LIMIT 10</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_73">  73</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_73"></span><span class="anchor" id="line-73-2"></span>                                                        <span class="ID">art_key</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_74">  74</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_74"></span><span class="anchor" id="line-74-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_75">  75</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_75"></span><span class="anchor" id="line-75-2"></span>                <span class="Comment">#prevent the running of multiple queries</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_76">  76</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_76"></span><span class="anchor" id="line-76-2"></span>                <span class="ID">arts</span> = <span class="ResWord">list</span>(<span class="ID">arts</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_77">  77</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_77"></span><span class="anchor" id="line-77-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_78">  78</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_78"></span><span class="anchor" id="line-78-2"></span>                <span class="Comment">#find which arts have coords</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_79">  79</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_79"></span><span class="anchor" id="line-79-2"></span>                <span class="ID">img_url</span> = <span class="ResWord">None</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_80">  80</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_80"></span><span class="anchor" id="line-80-2"></span>                <span class="ID">points</span> = <span class="ResWord">filter</span>(<span class="ResWord">None</span>, (<span class="ID">a</span>.<span class="ID">coords</span> <span class="ResWord">for</span> <span class="ID">a</span> <span class="ResWord">in</span> <span class="ID">arts</span>))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_81">  81</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_81"></span><span class="anchor" id="line-81-2"></span>                <span class="ResWord">if</span> <span class="ID">points</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_82">  82</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_82"></span><span class="anchor" id="line-82-2"></span>                        <span class="ID">img_url</span> = <span class="ID">gmap_img</span>(<span class="ID">points</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_83">  83</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_83"></span><span class="anchor" id="line-83-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_84">  84</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_84"></span><span class="anchor" id="line-84-2"></span>                <span class="Comment">#display the image URL</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_85">  85</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_85"></span><span class="anchor" id="line-85-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_86">  86</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_86"></span><span class="anchor" id="line-86-2"></span>                <span class="ResWord">self</span>.<span class="ID">render</span>(<span class="String">"</span><span class="String">front.html</span><span class="String">"</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> = <span class="ID">art</span>, <span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">arts</span> = <span class="ID">arts</span>, <span class="ID">img_url</span> = <span class="ID">img_url</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_87">  87</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_87"></span><span class="anchor" id="line-87-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_88">  88</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_88"></span><span class="anchor" id="line-88-2"></span>        <span class="ResWord">def</span> <span class="ID">get</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_89">  89</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_89"></span><span class="anchor" id="line-89-2"></span>                <span class="ResWord">self</span>.<span class="ID">write</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_90">  90</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_90"></span><span class="anchor" id="line-90-2"></span>                <span class="ResWord">self</span>.<span class="ID">write</span>(<span class="ResWord">repr</span>(<span class="ID">get_coords</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)))</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_91">  91</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_91"></span><span class="anchor" id="line-91-2"></span>                <span class="ResWord">self</span>.<span class="ID">render_front</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_92">  92</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_92"></span><span class="anchor" id="line-92-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_93">  93</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_93"></span><span class="anchor" id="line-93-2"></span>        <span class="ResWord">def</span> <span class="ID">post</span>(<span class="ResWord">self</span>):</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_94">  94</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_94"></span><span class="anchor" id="line-94-2"></span>                <span class="ID">title</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">title</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_95">  95</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_95"></span><span class="anchor" id="line-95-2"></span>                <span class="ID">art</span> = <span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">get</span>(<span class="String">"</span><span class="String">art</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_96">  96</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_96"></span><span class="anchor" id="line-96-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_97">  97</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_97"></span><span class="anchor" id="line-97-2"></span>                <span class="ResWord">if</span> <span class="ID">title</span> <span class="ResWord">and</span> <span class="ID">art</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_98">  98</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_98"></span><span class="anchor" id="line-98-2"></span>                        <span class="ID">p</span> = <span class="ID">Art</span>(<span class="ID">parent</span>=<span class="ID">art_key</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> = <span class="ID">art</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_99">  99</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_99"></span><span class="anchor" id="line-99-2"></span>                        <span class="Comment">#lookup the user's coordinates from their IP</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_100"> 100</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_100"></span><span class="anchor" id="line-100-2"></span>                        <span class="ID">coords</span> = <span class="ID">get_coords</span>(<span class="ResWord">self</span>.<span class="ID">request</span>.<span class="ID">remote_addr</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_101"> 101</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_101"></span><span class="anchor" id="line-101-2"></span>                        <span class="Comment">#if we have coordinates, add them to the art</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_102"> 102</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_102"></span><span class="anchor" id="line-102-1"></span>                        <span class="ResWord">if</span> <span class="ID">coords</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_103"> 103</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_103"></span><span class="anchor" id="line-103-1"></span>                                <span class="ID">p</span>.<span class="ID">coords</span> = <span class="ID">coords</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_104"> 104</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_104"></span><span class="anchor" id="line-104-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_105"> 105</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_105"></span><span class="anchor" id="line-105-1"></span>                        <span class="ID">p</span>.<span class="ID">put</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_106"> 106</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_106"></span><span class="anchor" id="line-106-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_107"> 107</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_107"></span><span class="anchor" id="line-107-1"></span>                        <span class="ResWord">self</span>.<span class="ID">redirect</span>(<span class="String">"</span><span class="String">/</span><span class="String">"</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_108"> 108</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_108"></span><span class="anchor" id="line-108-1"></span>                <span class="ResWord">else</span>:</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_109"> 109</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_109"></span><span class="anchor" id="line-109-1"></span>                        <span class="ID">error</span> = <span class="String">"</span><span class="String">we need both a title and some artwork!</span><span class="String">"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_110"> 110</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_110"></span><span class="anchor" id="line-110-1"></span>                        <span class="ResWord">self</span>.<span class="ID">render_front</span>(<span class="ID">error</span> = <span class="ID">error</span>, <span class="ID">title</span> = <span class="ID">title</span>, <span class="ID">art</span> =<span class="ID">art</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_111"> 111</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_111"></span><span class="anchor" id="line-111-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_112"> 112</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_112"></span><span class="anchor" id="line-112-1"></span><span class="ID">app</span> = <span class="ID">webapp2</span>.<span class="ID">WSGIApplication</span>([(<span class="String">'</span><span class="String">/</span><span class="String">'</span>, <span class="ID">MainPage</span>)],</span>
<span class="line"><span class="LineNumber"><a href="#CA-b4f42dd01ac36731353d16633c18253302777e31_113"> 113</a> </span><span class="LineAnchor" id="CA-b4f42dd01ac36731353d16633c18253302777e31_113"></span><span class="anchor" id="line-113-1"></span>                              <span class="ID">debug</span>=<span class="ResWord">True</span>)</span>
</pre></div></div><span class="anchor" id="line-1201"></span><p class="line862">ASCII Chan is now online at <a class="http" href="http://www.asciichan.com/">http://www.asciichan.com/</a> <span class="anchor" id="line-1202"></span><span class="anchor" id="bottom"></span></p></div><div id="pagebottom"></div>
</div>
</div><div class="footer"><span class="time" lang="ru" dir="ltr">–ø–æ—Å–ª–µ–¥–Ω–∏–º –∏—Å–ø—Ä–∞–≤–ª—è–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <span title="Iain McCulloch @ 50.116.54.191[50.116.54.191]"><a class="nonexistent" href="/Iain%20McCulloch" title="Iain McCulloch @ 50.116.54.191[50.116.54.191]">Iain McCulloch</a></span> 2012-05-23 00:17:34</span>
</div>
<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-29218959-1']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>



</body></html>Ytext/html_+http://wiki.udacity.com/CS253%20Unit%205alt            1   7   @   R   h   ~   ç  è∞  è¬  îU  î}  îÜ VB V] Zã Z‚ ZÎ »* »E ÃW Ãí Ãõ ˙# ˙, ˛+ ˛e ˛n & 0  J U l ä ã ë öy öÉ             )             ö±